
DIO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00002ff6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000012  00800060  00002ff6  0000306a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00001b90  00000000  00000000  0000307c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000adc  00000000  00000000  00004c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  000056e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00005828  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00005998  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  000075e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000084cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000927c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  000093dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  00009669  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  00009e37  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ef       	ldi	r30, 0xF6	; 246
      68:	ff e2       	ldi	r31, 0x2F	; 47
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 37       	cpi	r26, 0x72	; 114
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 19 09 	call	0x1232	; 0x1232 <main>
      7a:	0c 94 f9 17 	jmp	0x2ff2	; 0x2ff2 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 c2 17 	jmp	0x2f84	; 0x2f84 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 de 17 	jmp	0x2fbc	; 0x2fbc <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 ea 17 	jmp	0x2fd4	; 0x2fd4 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 ea 17 	jmp	0x2fd4	; 0x2fd4 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 c2 17 	jmp	0x2f84	; 0x2f84 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 de 17 	jmp	0x2fbc	; 0x2fbc <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 ea 17 	jmp	0x2fd4	; 0x2fd4 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 ea 17 	jmp	0x2fd4	; 0x2fd4 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ce 17 	jmp	0x2f9c	; 0x2f9c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 ea 17 	jmp	0x2fd4	; 0x2fd4 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 d2 17 	jmp	0x2fa4	; 0x2fa4 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 ee 17 	jmp	0x2fdc	; 0x2fdc <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_U8SetPortDir>:
#include "DIO_REG.h"
#include "DIO_Interface.h"


u8 DIO_U8SetPortDir(enum PORTS Copy_u8PortNo,u8  Copy_u8dDir)
{
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	00 d0       	rcall	.+0      	; 0xb3c <DIO_U8SetPortDir+0x6>
     b3c:	00 d0       	rcall	.+0      	; 0xb3e <DIO_U8SetPortDir+0x8>
     b3e:	0f 92       	push	r0
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	8a 83       	std	Y+2, r24	; 0x02
     b46:	6b 83       	std	Y+3, r22	; 0x03

	 u8 Local_Status=RT_OK;
     b48:	19 82       	std	Y+1, r1	; 0x01
if(Copy_u8PortNo<0||Copy_u8PortNo>3)
     b4a:	8a 81       	ldd	r24, Y+2	; 0x02
     b4c:	84 30       	cpi	r24, 0x04	; 4
     b4e:	18 f0       	brcs	.+6      	; 0xb56 <DIO_U8SetPortDir+0x20>
{
	Local_Status=RT_NOK;
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	89 83       	std	Y+1, r24	; 0x01
     b54:	32 c0       	rjmp	.+100    	; 0xbba <DIO_U8SetPortDir+0x84>

}
else
{
	switch(Copy_u8PortNo)
     b56:	8a 81       	ldd	r24, Y+2	; 0x02
     b58:	28 2f       	mov	r18, r24
     b5a:	30 e0       	ldi	r19, 0x00	; 0
     b5c:	3d 83       	std	Y+5, r19	; 0x05
     b5e:	2c 83       	std	Y+4, r18	; 0x04
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	9d 81       	ldd	r25, Y+5	; 0x05
     b64:	81 30       	cpi	r24, 0x01	; 1
     b66:	91 05       	cpc	r25, r1
     b68:	d1 f0       	breq	.+52     	; 0xb9e <DIO_U8SetPortDir+0x68>
     b6a:	2c 81       	ldd	r18, Y+4	; 0x04
     b6c:	3d 81       	ldd	r19, Y+5	; 0x05
     b6e:	22 30       	cpi	r18, 0x02	; 2
     b70:	31 05       	cpc	r19, r1
     b72:	2c f4       	brge	.+10     	; 0xb7e <DIO_U8SetPortDir+0x48>
     b74:	8c 81       	ldd	r24, Y+4	; 0x04
     b76:	9d 81       	ldd	r25, Y+5	; 0x05
     b78:	00 97       	sbiw	r24, 0x00	; 0
     b7a:	61 f0       	breq	.+24     	; 0xb94 <DIO_U8SetPortDir+0x5e>
     b7c:	1e c0       	rjmp	.+60     	; 0xbba <DIO_U8SetPortDir+0x84>
     b7e:	2c 81       	ldd	r18, Y+4	; 0x04
     b80:	3d 81       	ldd	r19, Y+5	; 0x05
     b82:	22 30       	cpi	r18, 0x02	; 2
     b84:	31 05       	cpc	r19, r1
     b86:	81 f0       	breq	.+32     	; 0xba8 <DIO_U8SetPortDir+0x72>
     b88:	8c 81       	ldd	r24, Y+4	; 0x04
     b8a:	9d 81       	ldd	r25, Y+5	; 0x05
     b8c:	83 30       	cpi	r24, 0x03	; 3
     b8e:	91 05       	cpc	r25, r1
     b90:	81 f0       	breq	.+32     	; 0xbb2 <DIO_U8SetPortDir+0x7c>
     b92:	13 c0       	rjmp	.+38     	; 0xbba <DIO_U8SetPortDir+0x84>
	{
	case 0:{DDRA_REG=Copy_u8dDir; break;}
     b94:	ea e3       	ldi	r30, 0x3A	; 58
     b96:	f0 e0       	ldi	r31, 0x00	; 0
     b98:	8b 81       	ldd	r24, Y+3	; 0x03
     b9a:	80 83       	st	Z, r24
     b9c:	0e c0       	rjmp	.+28     	; 0xbba <DIO_U8SetPortDir+0x84>
	case 1:{DDRB_REG=Copy_u8dDir; break;}
     b9e:	e7 e3       	ldi	r30, 0x37	; 55
     ba0:	f0 e0       	ldi	r31, 0x00	; 0
     ba2:	8b 81       	ldd	r24, Y+3	; 0x03
     ba4:	80 83       	st	Z, r24
     ba6:	09 c0       	rjmp	.+18     	; 0xbba <DIO_U8SetPortDir+0x84>
	case 2:{DDRC_REG=Copy_u8dDir; break;}
     ba8:	e4 e3       	ldi	r30, 0x34	; 52
     baa:	f0 e0       	ldi	r31, 0x00	; 0
     bac:	8b 81       	ldd	r24, Y+3	; 0x03
     bae:	80 83       	st	Z, r24
     bb0:	04 c0       	rjmp	.+8      	; 0xbba <DIO_U8SetPortDir+0x84>
	case 3:{DDRD_REG=Copy_u8dDir; break;}
     bb2:	e1 e3       	ldi	r30, 0x31	; 49
     bb4:	f0 e0       	ldi	r31, 0x00	; 0
     bb6:	8b 81       	ldd	r24, Y+3	; 0x03
     bb8:	80 83       	st	Z, r24
	}
}
return Local_Status;
     bba:	89 81       	ldd	r24, Y+1	; 0x01
}
     bbc:	0f 90       	pop	r0
     bbe:	0f 90       	pop	r0
     bc0:	0f 90       	pop	r0
     bc2:	0f 90       	pop	r0
     bc4:	0f 90       	pop	r0
     bc6:	cf 91       	pop	r28
     bc8:	df 91       	pop	r29
     bca:	08 95       	ret

00000bcc <DIO_U8SetPortVal>:

u8 DIO_U8SetPortVal(enum PORTS Copy_u8PortNo , u8 Copy_Val)
{
     bcc:	df 93       	push	r29
     bce:	cf 93       	push	r28
     bd0:	00 d0       	rcall	.+0      	; 0xbd2 <DIO_U8SetPortVal+0x6>
     bd2:	00 d0       	rcall	.+0      	; 0xbd4 <DIO_U8SetPortVal+0x8>
     bd4:	0f 92       	push	r0
     bd6:	cd b7       	in	r28, 0x3d	; 61
     bd8:	de b7       	in	r29, 0x3e	; 62
     bda:	8a 83       	std	Y+2, r24	; 0x02
     bdc:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_Status=RT_OK;
     bde:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8PortNo <0||Copy_u8PortNo>3)
     be0:	8a 81       	ldd	r24, Y+2	; 0x02
     be2:	84 30       	cpi	r24, 0x04	; 4
     be4:	18 f0       	brcs	.+6      	; 0xbec <DIO_U8SetPortVal+0x20>
	{
		 Local_Status=RT_NOK;
     be6:	81 e0       	ldi	r24, 0x01	; 1
     be8:	89 83       	std	Y+1, r24	; 0x01
     bea:	32 c0       	rjmp	.+100    	; 0xc50 <DIO_U8SetPortVal+0x84>

	}
	else
	{
		switch(Copy_u8PortNo)
     bec:	8a 81       	ldd	r24, Y+2	; 0x02
     bee:	28 2f       	mov	r18, r24
     bf0:	30 e0       	ldi	r19, 0x00	; 0
     bf2:	3d 83       	std	Y+5, r19	; 0x05
     bf4:	2c 83       	std	Y+4, r18	; 0x04
     bf6:	8c 81       	ldd	r24, Y+4	; 0x04
     bf8:	9d 81       	ldd	r25, Y+5	; 0x05
     bfa:	81 30       	cpi	r24, 0x01	; 1
     bfc:	91 05       	cpc	r25, r1
     bfe:	d1 f0       	breq	.+52     	; 0xc34 <DIO_U8SetPortVal+0x68>
     c00:	2c 81       	ldd	r18, Y+4	; 0x04
     c02:	3d 81       	ldd	r19, Y+5	; 0x05
     c04:	22 30       	cpi	r18, 0x02	; 2
     c06:	31 05       	cpc	r19, r1
     c08:	2c f4       	brge	.+10     	; 0xc14 <DIO_U8SetPortVal+0x48>
     c0a:	8c 81       	ldd	r24, Y+4	; 0x04
     c0c:	9d 81       	ldd	r25, Y+5	; 0x05
     c0e:	00 97       	sbiw	r24, 0x00	; 0
     c10:	61 f0       	breq	.+24     	; 0xc2a <DIO_U8SetPortVal+0x5e>
     c12:	1e c0       	rjmp	.+60     	; 0xc50 <DIO_U8SetPortVal+0x84>
     c14:	2c 81       	ldd	r18, Y+4	; 0x04
     c16:	3d 81       	ldd	r19, Y+5	; 0x05
     c18:	22 30       	cpi	r18, 0x02	; 2
     c1a:	31 05       	cpc	r19, r1
     c1c:	81 f0       	breq	.+32     	; 0xc3e <DIO_U8SetPortVal+0x72>
     c1e:	8c 81       	ldd	r24, Y+4	; 0x04
     c20:	9d 81       	ldd	r25, Y+5	; 0x05
     c22:	83 30       	cpi	r24, 0x03	; 3
     c24:	91 05       	cpc	r25, r1
     c26:	81 f0       	breq	.+32     	; 0xc48 <DIO_U8SetPortVal+0x7c>
     c28:	13 c0       	rjmp	.+38     	; 0xc50 <DIO_U8SetPortVal+0x84>
		{
		case 0:{PORTA_REG=Copy_Val; break;}
     c2a:	eb e3       	ldi	r30, 0x3B	; 59
     c2c:	f0 e0       	ldi	r31, 0x00	; 0
     c2e:	8b 81       	ldd	r24, Y+3	; 0x03
     c30:	80 83       	st	Z, r24
     c32:	0e c0       	rjmp	.+28     	; 0xc50 <DIO_U8SetPortVal+0x84>
		case 1:{PORTB_REG=Copy_Val; break;}
     c34:	e8 e3       	ldi	r30, 0x38	; 56
     c36:	f0 e0       	ldi	r31, 0x00	; 0
     c38:	8b 81       	ldd	r24, Y+3	; 0x03
     c3a:	80 83       	st	Z, r24
     c3c:	09 c0       	rjmp	.+18     	; 0xc50 <DIO_U8SetPortVal+0x84>
		case 2:{PORTC_REG=Copy_Val; break;}
     c3e:	e5 e3       	ldi	r30, 0x35	; 53
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	8b 81       	ldd	r24, Y+3	; 0x03
     c44:	80 83       	st	Z, r24
     c46:	04 c0       	rjmp	.+8      	; 0xc50 <DIO_U8SetPortVal+0x84>
		case 3:{PORTD_REG=Copy_Val; break;}
     c48:	e2 e3       	ldi	r30, 0x32	; 50
     c4a:	f0 e0       	ldi	r31, 0x00	; 0
     c4c:	8b 81       	ldd	r24, Y+3	; 0x03
     c4e:	80 83       	st	Z, r24
		}
	}
	return Local_Status;
     c50:	89 81       	ldd	r24, Y+1	; 0x01

}
     c52:	0f 90       	pop	r0
     c54:	0f 90       	pop	r0
     c56:	0f 90       	pop	r0
     c58:	0f 90       	pop	r0
     c5a:	0f 90       	pop	r0
     c5c:	cf 91       	pop	r28
     c5e:	df 91       	pop	r29
     c60:	08 95       	ret

00000c62 <DIO_U8GetPortVal>:

u8 DIO_U8GetPortVal(enum PORTS Copy_u8PortNo, u8* u8_Val)
{
     c62:	df 93       	push	r29
     c64:	cf 93       	push	r28
     c66:	00 d0       	rcall	.+0      	; 0xc68 <DIO_U8GetPortVal+0x6>
     c68:	00 d0       	rcall	.+0      	; 0xc6a <DIO_U8GetPortVal+0x8>
     c6a:	00 d0       	rcall	.+0      	; 0xc6c <DIO_U8GetPortVal+0xa>
     c6c:	cd b7       	in	r28, 0x3d	; 61
     c6e:	de b7       	in	r29, 0x3e	; 62
     c70:	8a 83       	std	Y+2, r24	; 0x02
     c72:	7c 83       	std	Y+4, r23	; 0x04
     c74:	6b 83       	std	Y+3, r22	; 0x03

	u8 Local_Status=RT_OK;
     c76:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8PortNo<0|| Copy_u8PortNo>3)
     c78:	8a 81       	ldd	r24, Y+2	; 0x02
     c7a:	84 30       	cpi	r24, 0x04	; 4
     c7c:	18 f0       	brcs	.+6      	; 0xc84 <DIO_U8GetPortVal+0x22>
	{
		Local_Status=RT_NOK;
     c7e:	81 e0       	ldi	r24, 0x01	; 1
     c80:	89 83       	std	Y+1, r24	; 0x01
     c82:	3a c0       	rjmp	.+116    	; 0xcf8 <DIO_U8GetPortVal+0x96>

	}
	else
	{
		switch(Copy_u8PortNo)
     c84:	8a 81       	ldd	r24, Y+2	; 0x02
     c86:	28 2f       	mov	r18, r24
     c88:	30 e0       	ldi	r19, 0x00	; 0
     c8a:	3e 83       	std	Y+6, r19	; 0x06
     c8c:	2d 83       	std	Y+5, r18	; 0x05
     c8e:	8d 81       	ldd	r24, Y+5	; 0x05
     c90:	9e 81       	ldd	r25, Y+6	; 0x06
     c92:	81 30       	cpi	r24, 0x01	; 1
     c94:	91 05       	cpc	r25, r1
     c96:	e1 f0       	breq	.+56     	; 0xcd0 <DIO_U8GetPortVal+0x6e>
     c98:	2d 81       	ldd	r18, Y+5	; 0x05
     c9a:	3e 81       	ldd	r19, Y+6	; 0x06
     c9c:	22 30       	cpi	r18, 0x02	; 2
     c9e:	31 05       	cpc	r19, r1
     ca0:	2c f4       	brge	.+10     	; 0xcac <DIO_U8GetPortVal+0x4a>
     ca2:	8d 81       	ldd	r24, Y+5	; 0x05
     ca4:	9e 81       	ldd	r25, Y+6	; 0x06
     ca6:	00 97       	sbiw	r24, 0x00	; 0
     ca8:	61 f0       	breq	.+24     	; 0xcc2 <DIO_U8GetPortVal+0x60>
     caa:	26 c0       	rjmp	.+76     	; 0xcf8 <DIO_U8GetPortVal+0x96>
     cac:	2d 81       	ldd	r18, Y+5	; 0x05
     cae:	3e 81       	ldd	r19, Y+6	; 0x06
     cb0:	22 30       	cpi	r18, 0x02	; 2
     cb2:	31 05       	cpc	r19, r1
     cb4:	a1 f0       	breq	.+40     	; 0xcde <DIO_U8GetPortVal+0x7c>
     cb6:	8d 81       	ldd	r24, Y+5	; 0x05
     cb8:	9e 81       	ldd	r25, Y+6	; 0x06
     cba:	83 30       	cpi	r24, 0x03	; 3
     cbc:	91 05       	cpc	r25, r1
     cbe:	b1 f0       	breq	.+44     	; 0xcec <DIO_U8GetPortVal+0x8a>
     cc0:	1b c0       	rjmp	.+54     	; 0xcf8 <DIO_U8GetPortVal+0x96>
		{
		case 0:{*u8_Val=PINA_REG; break;}
     cc2:	e9 e3       	ldi	r30, 0x39	; 57
     cc4:	f0 e0       	ldi	r31, 0x00	; 0
     cc6:	80 81       	ld	r24, Z
     cc8:	eb 81       	ldd	r30, Y+3	; 0x03
     cca:	fc 81       	ldd	r31, Y+4	; 0x04
     ccc:	80 83       	st	Z, r24
     cce:	14 c0       	rjmp	.+40     	; 0xcf8 <DIO_U8GetPortVal+0x96>
		case 1:{*u8_Val=PINB_REG; break;}
     cd0:	e6 e3       	ldi	r30, 0x36	; 54
     cd2:	f0 e0       	ldi	r31, 0x00	; 0
     cd4:	80 81       	ld	r24, Z
     cd6:	eb 81       	ldd	r30, Y+3	; 0x03
     cd8:	fc 81       	ldd	r31, Y+4	; 0x04
     cda:	80 83       	st	Z, r24
     cdc:	0d c0       	rjmp	.+26     	; 0xcf8 <DIO_U8GetPortVal+0x96>
		case 2:{*u8_Val=PINC_REG; break;}
     cde:	e3 e3       	ldi	r30, 0x33	; 51
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	80 81       	ld	r24, Z
     ce4:	eb 81       	ldd	r30, Y+3	; 0x03
     ce6:	fc 81       	ldd	r31, Y+4	; 0x04
     ce8:	80 83       	st	Z, r24
     cea:	06 c0       	rjmp	.+12     	; 0xcf8 <DIO_U8GetPortVal+0x96>
		case 3:{*u8_Val=PIND_REG; break;}
     cec:	e0 e3       	ldi	r30, 0x30	; 48
     cee:	f0 e0       	ldi	r31, 0x00	; 0
     cf0:	80 81       	ld	r24, Z
     cf2:	eb 81       	ldd	r30, Y+3	; 0x03
     cf4:	fc 81       	ldd	r31, Y+4	; 0x04
     cf6:	80 83       	st	Z, r24
		}
	}
	return Local_Status;
     cf8:	89 81       	ldd	r24, Y+1	; 0x01

}
     cfa:	26 96       	adiw	r28, 0x06	; 6
     cfc:	0f b6       	in	r0, 0x3f	; 63
     cfe:	f8 94       	cli
     d00:	de bf       	out	0x3e, r29	; 62
     d02:	0f be       	out	0x3f, r0	; 63
     d04:	cd bf       	out	0x3d, r28	; 61
     d06:	cf 91       	pop	r28
     d08:	df 91       	pop	r29
     d0a:	08 95       	ret

00000d0c <DIO_U8SetPinDir>:

u8 DIO_U8SetPinDir(enum PORTS Copy_u8PortNo , enum PINS Copy_u8PinNo,u8 Copy_u8Dir)
{	u8 Local_Status=RT_OK;
     d0c:	df 93       	push	r29
     d0e:	cf 93       	push	r28
     d10:	cd b7       	in	r28, 0x3d	; 61
     d12:	de b7       	in	r29, 0x3e	; 62
     d14:	28 97       	sbiw	r28, 0x08	; 8
     d16:	0f b6       	in	r0, 0x3f	; 63
     d18:	f8 94       	cli
     d1a:	de bf       	out	0x3e, r29	; 62
     d1c:	0f be       	out	0x3f, r0	; 63
     d1e:	cd bf       	out	0x3d, r28	; 61
     d20:	8a 83       	std	Y+2, r24	; 0x02
     d22:	6b 83       	std	Y+3, r22	; 0x03
     d24:	4c 83       	std	Y+4, r20	; 0x04
     d26:	19 82       	std	Y+1, r1	; 0x01
if(Copy_u8PortNo>=0||Copy_u8PortNo<=3)
{
	if(Copy_u8PinNo>=0||Copy_u8PinNo<=7)
	{
		if(Copy_u8Dir == HIGH)
     d28:	8c 81       	ldd	r24, Y+4	; 0x04
     d2a:	81 30       	cpi	r24, 0x01	; 1
     d2c:	09 f0       	breq	.+2      	; 0xd30 <DIO_U8SetPinDir+0x24>
     d2e:	6f c0       	rjmp	.+222    	; 0xe0e <DIO_U8SetPinDir+0x102>
		{
			switch(Copy_u8PortNo)
     d30:	8a 81       	ldd	r24, Y+2	; 0x02
     d32:	28 2f       	mov	r18, r24
     d34:	30 e0       	ldi	r19, 0x00	; 0
     d36:	38 87       	std	Y+8, r19	; 0x08
     d38:	2f 83       	std	Y+7, r18	; 0x07
     d3a:	8f 81       	ldd	r24, Y+7	; 0x07
     d3c:	98 85       	ldd	r25, Y+8	; 0x08
     d3e:	81 30       	cpi	r24, 0x01	; 1
     d40:	91 05       	cpc	r25, r1
     d42:	49 f1       	breq	.+82     	; 0xd96 <DIO_U8SetPinDir+0x8a>
     d44:	2f 81       	ldd	r18, Y+7	; 0x07
     d46:	38 85       	ldd	r19, Y+8	; 0x08
     d48:	22 30       	cpi	r18, 0x02	; 2
     d4a:	31 05       	cpc	r19, r1
     d4c:	2c f4       	brge	.+10     	; 0xd58 <DIO_U8SetPinDir+0x4c>
     d4e:	8f 81       	ldd	r24, Y+7	; 0x07
     d50:	98 85       	ldd	r25, Y+8	; 0x08
     d52:	00 97       	sbiw	r24, 0x00	; 0
     d54:	61 f0       	breq	.+24     	; 0xd6e <DIO_U8SetPinDir+0x62>
     d56:	d5 c0       	rjmp	.+426    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
     d58:	2f 81       	ldd	r18, Y+7	; 0x07
     d5a:	38 85       	ldd	r19, Y+8	; 0x08
     d5c:	22 30       	cpi	r18, 0x02	; 2
     d5e:	31 05       	cpc	r19, r1
     d60:	71 f1       	breq	.+92     	; 0xdbe <DIO_U8SetPinDir+0xb2>
     d62:	8f 81       	ldd	r24, Y+7	; 0x07
     d64:	98 85       	ldd	r25, Y+8	; 0x08
     d66:	83 30       	cpi	r24, 0x03	; 3
     d68:	91 05       	cpc	r25, r1
     d6a:	e9 f1       	breq	.+122    	; 0xde6 <DIO_U8SetPinDir+0xda>
     d6c:	ca c0       	rjmp	.+404    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
			{
			case 0:
			{
				SetBit(DDRA_REG,Copy_u8PinNo);
     d6e:	aa e3       	ldi	r26, 0x3A	; 58
     d70:	b0 e0       	ldi	r27, 0x00	; 0
     d72:	ea e3       	ldi	r30, 0x3A	; 58
     d74:	f0 e0       	ldi	r31, 0x00	; 0
     d76:	80 81       	ld	r24, Z
     d78:	48 2f       	mov	r20, r24
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	28 2f       	mov	r18, r24
     d7e:	30 e0       	ldi	r19, 0x00	; 0
     d80:	81 e0       	ldi	r24, 0x01	; 1
     d82:	90 e0       	ldi	r25, 0x00	; 0
     d84:	02 2e       	mov	r0, r18
     d86:	02 c0       	rjmp	.+4      	; 0xd8c <DIO_U8SetPinDir+0x80>
     d88:	88 0f       	add	r24, r24
     d8a:	99 1f       	adc	r25, r25
     d8c:	0a 94       	dec	r0
     d8e:	e2 f7       	brpl	.-8      	; 0xd88 <DIO_U8SetPinDir+0x7c>
     d90:	84 2b       	or	r24, r20
     d92:	8c 93       	st	X, r24
     d94:	b6 c0       	rjmp	.+364    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
				break;
			}
			case 1:
			{
				SetBit(DDRB_REG,Copy_u8PinNo);
     d96:	a7 e3       	ldi	r26, 0x37	; 55
     d98:	b0 e0       	ldi	r27, 0x00	; 0
     d9a:	e7 e3       	ldi	r30, 0x37	; 55
     d9c:	f0 e0       	ldi	r31, 0x00	; 0
     d9e:	80 81       	ld	r24, Z
     da0:	48 2f       	mov	r20, r24
     da2:	8b 81       	ldd	r24, Y+3	; 0x03
     da4:	28 2f       	mov	r18, r24
     da6:	30 e0       	ldi	r19, 0x00	; 0
     da8:	81 e0       	ldi	r24, 0x01	; 1
     daa:	90 e0       	ldi	r25, 0x00	; 0
     dac:	02 2e       	mov	r0, r18
     dae:	02 c0       	rjmp	.+4      	; 0xdb4 <DIO_U8SetPinDir+0xa8>
     db0:	88 0f       	add	r24, r24
     db2:	99 1f       	adc	r25, r25
     db4:	0a 94       	dec	r0
     db6:	e2 f7       	brpl	.-8      	; 0xdb0 <DIO_U8SetPinDir+0xa4>
     db8:	84 2b       	or	r24, r20
     dba:	8c 93       	st	X, r24
     dbc:	a2 c0       	rjmp	.+324    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
				break;
			}
			case 2:
			{
				SetBit(DDRC_REG,Copy_u8PinNo);
     dbe:	a4 e3       	ldi	r26, 0x34	; 52
     dc0:	b0 e0       	ldi	r27, 0x00	; 0
     dc2:	e4 e3       	ldi	r30, 0x34	; 52
     dc4:	f0 e0       	ldi	r31, 0x00	; 0
     dc6:	80 81       	ld	r24, Z
     dc8:	48 2f       	mov	r20, r24
     dca:	8b 81       	ldd	r24, Y+3	; 0x03
     dcc:	28 2f       	mov	r18, r24
     dce:	30 e0       	ldi	r19, 0x00	; 0
     dd0:	81 e0       	ldi	r24, 0x01	; 1
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	02 2e       	mov	r0, r18
     dd6:	02 c0       	rjmp	.+4      	; 0xddc <DIO_U8SetPinDir+0xd0>
     dd8:	88 0f       	add	r24, r24
     dda:	99 1f       	adc	r25, r25
     ddc:	0a 94       	dec	r0
     dde:	e2 f7       	brpl	.-8      	; 0xdd8 <DIO_U8SetPinDir+0xcc>
     de0:	84 2b       	or	r24, r20
     de2:	8c 93       	st	X, r24
     de4:	8e c0       	rjmp	.+284    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
				break;
			}
			case 3:
			{
				SetBit(DDRD_REG,Copy_u8PinNo);
     de6:	a1 e3       	ldi	r26, 0x31	; 49
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	e1 e3       	ldi	r30, 0x31	; 49
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	80 81       	ld	r24, Z
     df0:	48 2f       	mov	r20, r24
     df2:	8b 81       	ldd	r24, Y+3	; 0x03
     df4:	28 2f       	mov	r18, r24
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	81 e0       	ldi	r24, 0x01	; 1
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	02 2e       	mov	r0, r18
     dfe:	02 c0       	rjmp	.+4      	; 0xe04 <DIO_U8SetPinDir+0xf8>
     e00:	88 0f       	add	r24, r24
     e02:	99 1f       	adc	r25, r25
     e04:	0a 94       	dec	r0
     e06:	e2 f7       	brpl	.-8      	; 0xe00 <DIO_U8SetPinDir+0xf4>
     e08:	84 2b       	or	r24, r20
     e0a:	8c 93       	st	X, r24
     e0c:	7a c0       	rjmp	.+244    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
				break;
			}

			}
		}
		else if(Copy_u8Dir==LOW)
     e0e:	8c 81       	ldd	r24, Y+4	; 0x04
     e10:	88 23       	and	r24, r24
     e12:	09 f0       	breq	.+2      	; 0xe16 <DIO_U8SetPinDir+0x10a>
     e14:	74 c0       	rjmp	.+232    	; 0xefe <DIO_U8SetPinDir+0x1f2>
		{
			switch(Copy_u8PortNo)
     e16:	8a 81       	ldd	r24, Y+2	; 0x02
     e18:	28 2f       	mov	r18, r24
     e1a:	30 e0       	ldi	r19, 0x00	; 0
     e1c:	3e 83       	std	Y+6, r19	; 0x06
     e1e:	2d 83       	std	Y+5, r18	; 0x05
     e20:	8d 81       	ldd	r24, Y+5	; 0x05
     e22:	9e 81       	ldd	r25, Y+6	; 0x06
     e24:	81 30       	cpi	r24, 0x01	; 1
     e26:	91 05       	cpc	r25, r1
     e28:	59 f1       	breq	.+86     	; 0xe80 <DIO_U8SetPinDir+0x174>
     e2a:	2d 81       	ldd	r18, Y+5	; 0x05
     e2c:	3e 81       	ldd	r19, Y+6	; 0x06
     e2e:	22 30       	cpi	r18, 0x02	; 2
     e30:	31 05       	cpc	r19, r1
     e32:	2c f4       	brge	.+10     	; 0xe3e <DIO_U8SetPinDir+0x132>
     e34:	8d 81       	ldd	r24, Y+5	; 0x05
     e36:	9e 81       	ldd	r25, Y+6	; 0x06
     e38:	00 97       	sbiw	r24, 0x00	; 0
     e3a:	69 f0       	breq	.+26     	; 0xe56 <DIO_U8SetPinDir+0x14a>
     e3c:	62 c0       	rjmp	.+196    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
     e3e:	2d 81       	ldd	r18, Y+5	; 0x05
     e40:	3e 81       	ldd	r19, Y+6	; 0x06
     e42:	22 30       	cpi	r18, 0x02	; 2
     e44:	31 05       	cpc	r19, r1
     e46:	89 f1       	breq	.+98     	; 0xeaa <DIO_U8SetPinDir+0x19e>
     e48:	8d 81       	ldd	r24, Y+5	; 0x05
     e4a:	9e 81       	ldd	r25, Y+6	; 0x06
     e4c:	83 30       	cpi	r24, 0x03	; 3
     e4e:	91 05       	cpc	r25, r1
     e50:	09 f4       	brne	.+2      	; 0xe54 <DIO_U8SetPinDir+0x148>
     e52:	40 c0       	rjmp	.+128    	; 0xed4 <DIO_U8SetPinDir+0x1c8>
     e54:	56 c0       	rjmp	.+172    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
			{
				case 0:
				{
					ClearBit(DDRA_REG,Copy_u8PinNo);
     e56:	aa e3       	ldi	r26, 0x3A	; 58
     e58:	b0 e0       	ldi	r27, 0x00	; 0
     e5a:	ea e3       	ldi	r30, 0x3A	; 58
     e5c:	f0 e0       	ldi	r31, 0x00	; 0
     e5e:	80 81       	ld	r24, Z
     e60:	48 2f       	mov	r20, r24
     e62:	8b 81       	ldd	r24, Y+3	; 0x03
     e64:	28 2f       	mov	r18, r24
     e66:	30 e0       	ldi	r19, 0x00	; 0
     e68:	81 e0       	ldi	r24, 0x01	; 1
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	02 2e       	mov	r0, r18
     e6e:	02 c0       	rjmp	.+4      	; 0xe74 <DIO_U8SetPinDir+0x168>
     e70:	88 0f       	add	r24, r24
     e72:	99 1f       	adc	r25, r25
     e74:	0a 94       	dec	r0
     e76:	e2 f7       	brpl	.-8      	; 0xe70 <DIO_U8SetPinDir+0x164>
     e78:	80 95       	com	r24
     e7a:	84 23       	and	r24, r20
     e7c:	8c 93       	st	X, r24
     e7e:	41 c0       	rjmp	.+130    	; 0xf02 <DIO_U8SetPinDir+0x1f6>
					break;
				}
				case 1:
				{
					ClearBit(DDRB_REG,Copy_u8PinNo);
     e80:	a7 e3       	ldi	r26, 0x37	; 55
     e82:	b0 e0       	ldi	r27, 0x00	; 0
     e84:	e7 e3       	ldi	r30, 0x37	; 55
     e86:	f0 e0       	ldi	r31, 0x00	; 0
     e88:	80 81       	ld	r24, Z
     e8a:	48 2f       	mov	r20, r24
     e8c:	8b 81       	ldd	r24, Y+3	; 0x03
     e8e:	28 2f       	mov	r18, r24
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	81 e0       	ldi	r24, 0x01	; 1
     e94:	90 e0       	ldi	r25, 0x00	; 0
     e96:	02 2e       	mov	r0, r18
     e98:	02 c0       	rjmp	.+4      	; 0xe9e <DIO_U8SetPinDir+0x192>
     e9a:	88 0f       	add	r24, r24
     e9c:	99 1f       	adc	r25, r25
     e9e:	0a 94       	dec	r0
     ea0:	e2 f7       	brpl	.-8      	; 0xe9a <DIO_U8SetPinDir+0x18e>
     ea2:	80 95       	com	r24
     ea4:	84 23       	and	r24, r20
     ea6:	8c 93       	st	X, r24
     ea8:	2c c0       	rjmp	.+88     	; 0xf02 <DIO_U8SetPinDir+0x1f6>
					break;
				}
				case 2:
				{
					ClearBit(DDRC_REG,Copy_u8PinNo);
     eaa:	a4 e3       	ldi	r26, 0x34	; 52
     eac:	b0 e0       	ldi	r27, 0x00	; 0
     eae:	e4 e3       	ldi	r30, 0x34	; 52
     eb0:	f0 e0       	ldi	r31, 0x00	; 0
     eb2:	80 81       	ld	r24, Z
     eb4:	48 2f       	mov	r20, r24
     eb6:	8b 81       	ldd	r24, Y+3	; 0x03
     eb8:	28 2f       	mov	r18, r24
     eba:	30 e0       	ldi	r19, 0x00	; 0
     ebc:	81 e0       	ldi	r24, 0x01	; 1
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	02 2e       	mov	r0, r18
     ec2:	02 c0       	rjmp	.+4      	; 0xec8 <DIO_U8SetPinDir+0x1bc>
     ec4:	88 0f       	add	r24, r24
     ec6:	99 1f       	adc	r25, r25
     ec8:	0a 94       	dec	r0
     eca:	e2 f7       	brpl	.-8      	; 0xec4 <DIO_U8SetPinDir+0x1b8>
     ecc:	80 95       	com	r24
     ece:	84 23       	and	r24, r20
     ed0:	8c 93       	st	X, r24
     ed2:	17 c0       	rjmp	.+46     	; 0xf02 <DIO_U8SetPinDir+0x1f6>
					break;
				}
				case 3:
				{
					ClearBit(DDRD_REG,Copy_u8PinNo);
     ed4:	a1 e3       	ldi	r26, 0x31	; 49
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	e1 e3       	ldi	r30, 0x31	; 49
     eda:	f0 e0       	ldi	r31, 0x00	; 0
     edc:	80 81       	ld	r24, Z
     ede:	48 2f       	mov	r20, r24
     ee0:	8b 81       	ldd	r24, Y+3	; 0x03
     ee2:	28 2f       	mov	r18, r24
     ee4:	30 e0       	ldi	r19, 0x00	; 0
     ee6:	81 e0       	ldi	r24, 0x01	; 1
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	02 2e       	mov	r0, r18
     eec:	02 c0       	rjmp	.+4      	; 0xef2 <DIO_U8SetPinDir+0x1e6>
     eee:	88 0f       	add	r24, r24
     ef0:	99 1f       	adc	r25, r25
     ef2:	0a 94       	dec	r0
     ef4:	e2 f7       	brpl	.-8      	; 0xeee <DIO_U8SetPinDir+0x1e2>
     ef6:	80 95       	com	r24
     ef8:	84 23       	and	r24, r20
     efa:	8c 93       	st	X, r24
     efc:	02 c0       	rjmp	.+4      	; 0xf02 <DIO_U8SetPinDir+0x1f6>

			}
		}
		else
		{
			Local_Status=RT_NOK;
     efe:	81 e0       	ldi	r24, 0x01	; 1
     f00:	89 83       	std	Y+1, r24	; 0x01
{
	Local_Status=RT_NOK;
}


	return Local_Status;
     f02:	89 81       	ldd	r24, Y+1	; 0x01

}
     f04:	28 96       	adiw	r28, 0x08	; 8
     f06:	0f b6       	in	r0, 0x3f	; 63
     f08:	f8 94       	cli
     f0a:	de bf       	out	0x3e, r29	; 62
     f0c:	0f be       	out	0x3f, r0	; 63
     f0e:	cd bf       	out	0x3d, r28	; 61
     f10:	cf 91       	pop	r28
     f12:	df 91       	pop	r29
     f14:	08 95       	ret

00000f16 <DIO_U8SetPinVal>:

u8 DIO_U8SetPinVal(enum PORTS Copy_u8PortNo,enum PINS  Copy_u8PinNo,u8 Copy_Val)

{
     f16:	df 93       	push	r29
     f18:	cf 93       	push	r28
     f1a:	cd b7       	in	r28, 0x3d	; 61
     f1c:	de b7       	in	r29, 0x3e	; 62
     f1e:	28 97       	sbiw	r28, 0x08	; 8
     f20:	0f b6       	in	r0, 0x3f	; 63
     f22:	f8 94       	cli
     f24:	de bf       	out	0x3e, r29	; 62
     f26:	0f be       	out	0x3f, r0	; 63
     f28:	cd bf       	out	0x3d, r28	; 61
     f2a:	8a 83       	std	Y+2, r24	; 0x02
     f2c:	6b 83       	std	Y+3, r22	; 0x03
     f2e:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_Status=RT_OK;
     f30:	19 82       	std	Y+1, r1	; 0x01
if(Copy_u8PortNo>=0||Copy_u8PortNo<=3)
{
	if(Copy_u8PinNo>=0||Copy_u8PinNo<=7)
	{
		if(Copy_Val == HIGH)
     f32:	8c 81       	ldd	r24, Y+4	; 0x04
     f34:	81 30       	cpi	r24, 0x01	; 1
     f36:	09 f0       	breq	.+2      	; 0xf3a <DIO_U8SetPinVal+0x24>
     f38:	6f c0       	rjmp	.+222    	; 0x1018 <DIO_U8SetPinVal+0x102>
		{
			switch(Copy_u8PortNo)
     f3a:	8a 81       	ldd	r24, Y+2	; 0x02
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	38 87       	std	Y+8, r19	; 0x08
     f42:	2f 83       	std	Y+7, r18	; 0x07
     f44:	8f 81       	ldd	r24, Y+7	; 0x07
     f46:	98 85       	ldd	r25, Y+8	; 0x08
     f48:	81 30       	cpi	r24, 0x01	; 1
     f4a:	91 05       	cpc	r25, r1
     f4c:	49 f1       	breq	.+82     	; 0xfa0 <DIO_U8SetPinVal+0x8a>
     f4e:	2f 81       	ldd	r18, Y+7	; 0x07
     f50:	38 85       	ldd	r19, Y+8	; 0x08
     f52:	22 30       	cpi	r18, 0x02	; 2
     f54:	31 05       	cpc	r19, r1
     f56:	2c f4       	brge	.+10     	; 0xf62 <DIO_U8SetPinVal+0x4c>
     f58:	8f 81       	ldd	r24, Y+7	; 0x07
     f5a:	98 85       	ldd	r25, Y+8	; 0x08
     f5c:	00 97       	sbiw	r24, 0x00	; 0
     f5e:	61 f0       	breq	.+24     	; 0xf78 <DIO_U8SetPinVal+0x62>
     f60:	d5 c0       	rjmp	.+426    	; 0x110c <DIO_U8SetPinVal+0x1f6>
     f62:	2f 81       	ldd	r18, Y+7	; 0x07
     f64:	38 85       	ldd	r19, Y+8	; 0x08
     f66:	22 30       	cpi	r18, 0x02	; 2
     f68:	31 05       	cpc	r19, r1
     f6a:	71 f1       	breq	.+92     	; 0xfc8 <DIO_U8SetPinVal+0xb2>
     f6c:	8f 81       	ldd	r24, Y+7	; 0x07
     f6e:	98 85       	ldd	r25, Y+8	; 0x08
     f70:	83 30       	cpi	r24, 0x03	; 3
     f72:	91 05       	cpc	r25, r1
     f74:	e9 f1       	breq	.+122    	; 0xff0 <DIO_U8SetPinVal+0xda>
     f76:	ca c0       	rjmp	.+404    	; 0x110c <DIO_U8SetPinVal+0x1f6>
			{
			case 0:
			{
				SetBit(PORTA_REG,Copy_u8PinNo);
     f78:	ab e3       	ldi	r26, 0x3B	; 59
     f7a:	b0 e0       	ldi	r27, 0x00	; 0
     f7c:	eb e3       	ldi	r30, 0x3B	; 59
     f7e:	f0 e0       	ldi	r31, 0x00	; 0
     f80:	80 81       	ld	r24, Z
     f82:	48 2f       	mov	r20, r24
     f84:	8b 81       	ldd	r24, Y+3	; 0x03
     f86:	28 2f       	mov	r18, r24
     f88:	30 e0       	ldi	r19, 0x00	; 0
     f8a:	81 e0       	ldi	r24, 0x01	; 1
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	02 2e       	mov	r0, r18
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <DIO_U8SetPinVal+0x80>
     f92:	88 0f       	add	r24, r24
     f94:	99 1f       	adc	r25, r25
     f96:	0a 94       	dec	r0
     f98:	e2 f7       	brpl	.-8      	; 0xf92 <DIO_U8SetPinVal+0x7c>
     f9a:	84 2b       	or	r24, r20
     f9c:	8c 93       	st	X, r24
     f9e:	b6 c0       	rjmp	.+364    	; 0x110c <DIO_U8SetPinVal+0x1f6>
				break;
			}
			case 1:
			{
				SetBit(PORTB_REG,Copy_u8PinNo);
     fa0:	a8 e3       	ldi	r26, 0x38	; 56
     fa2:	b0 e0       	ldi	r27, 0x00	; 0
     fa4:	e8 e3       	ldi	r30, 0x38	; 56
     fa6:	f0 e0       	ldi	r31, 0x00	; 0
     fa8:	80 81       	ld	r24, Z
     faa:	48 2f       	mov	r20, r24
     fac:	8b 81       	ldd	r24, Y+3	; 0x03
     fae:	28 2f       	mov	r18, r24
     fb0:	30 e0       	ldi	r19, 0x00	; 0
     fb2:	81 e0       	ldi	r24, 0x01	; 1
     fb4:	90 e0       	ldi	r25, 0x00	; 0
     fb6:	02 2e       	mov	r0, r18
     fb8:	02 c0       	rjmp	.+4      	; 0xfbe <DIO_U8SetPinVal+0xa8>
     fba:	88 0f       	add	r24, r24
     fbc:	99 1f       	adc	r25, r25
     fbe:	0a 94       	dec	r0
     fc0:	e2 f7       	brpl	.-8      	; 0xfba <DIO_U8SetPinVal+0xa4>
     fc2:	84 2b       	or	r24, r20
     fc4:	8c 93       	st	X, r24
     fc6:	a2 c0       	rjmp	.+324    	; 0x110c <DIO_U8SetPinVal+0x1f6>
				break;
			}
			case 2:
			{
				SetBit(PORTC_REG,Copy_u8PinNo);
     fc8:	a5 e3       	ldi	r26, 0x35	; 53
     fca:	b0 e0       	ldi	r27, 0x00	; 0
     fcc:	e5 e3       	ldi	r30, 0x35	; 53
     fce:	f0 e0       	ldi	r31, 0x00	; 0
     fd0:	80 81       	ld	r24, Z
     fd2:	48 2f       	mov	r20, r24
     fd4:	8b 81       	ldd	r24, Y+3	; 0x03
     fd6:	28 2f       	mov	r18, r24
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	81 e0       	ldi	r24, 0x01	; 1
     fdc:	90 e0       	ldi	r25, 0x00	; 0
     fde:	02 2e       	mov	r0, r18
     fe0:	02 c0       	rjmp	.+4      	; 0xfe6 <DIO_U8SetPinVal+0xd0>
     fe2:	88 0f       	add	r24, r24
     fe4:	99 1f       	adc	r25, r25
     fe6:	0a 94       	dec	r0
     fe8:	e2 f7       	brpl	.-8      	; 0xfe2 <DIO_U8SetPinVal+0xcc>
     fea:	84 2b       	or	r24, r20
     fec:	8c 93       	st	X, r24
     fee:	8e c0       	rjmp	.+284    	; 0x110c <DIO_U8SetPinVal+0x1f6>
				break;
			}
			case 3:
			{
				SetBit(PORTD_REG,Copy_u8PinNo);
     ff0:	a2 e3       	ldi	r26, 0x32	; 50
     ff2:	b0 e0       	ldi	r27, 0x00	; 0
     ff4:	e2 e3       	ldi	r30, 0x32	; 50
     ff6:	f0 e0       	ldi	r31, 0x00	; 0
     ff8:	80 81       	ld	r24, Z
     ffa:	48 2f       	mov	r20, r24
     ffc:	8b 81       	ldd	r24, Y+3	; 0x03
     ffe:	28 2f       	mov	r18, r24
    1000:	30 e0       	ldi	r19, 0x00	; 0
    1002:	81 e0       	ldi	r24, 0x01	; 1
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	02 2e       	mov	r0, r18
    1008:	02 c0       	rjmp	.+4      	; 0x100e <DIO_U8SetPinVal+0xf8>
    100a:	88 0f       	add	r24, r24
    100c:	99 1f       	adc	r25, r25
    100e:	0a 94       	dec	r0
    1010:	e2 f7       	brpl	.-8      	; 0x100a <DIO_U8SetPinVal+0xf4>
    1012:	84 2b       	or	r24, r20
    1014:	8c 93       	st	X, r24
    1016:	7a c0       	rjmp	.+244    	; 0x110c <DIO_U8SetPinVal+0x1f6>
				break;
			}

			}
		}
		else if(Copy_Val==LOW)
    1018:	8c 81       	ldd	r24, Y+4	; 0x04
    101a:	88 23       	and	r24, r24
    101c:	09 f0       	breq	.+2      	; 0x1020 <DIO_U8SetPinVal+0x10a>
    101e:	74 c0       	rjmp	.+232    	; 0x1108 <DIO_U8SetPinVal+0x1f2>
		{
			switch(Copy_u8PortNo)
    1020:	8a 81       	ldd	r24, Y+2	; 0x02
    1022:	28 2f       	mov	r18, r24
    1024:	30 e0       	ldi	r19, 0x00	; 0
    1026:	3e 83       	std	Y+6, r19	; 0x06
    1028:	2d 83       	std	Y+5, r18	; 0x05
    102a:	8d 81       	ldd	r24, Y+5	; 0x05
    102c:	9e 81       	ldd	r25, Y+6	; 0x06
    102e:	81 30       	cpi	r24, 0x01	; 1
    1030:	91 05       	cpc	r25, r1
    1032:	59 f1       	breq	.+86     	; 0x108a <DIO_U8SetPinVal+0x174>
    1034:	2d 81       	ldd	r18, Y+5	; 0x05
    1036:	3e 81       	ldd	r19, Y+6	; 0x06
    1038:	22 30       	cpi	r18, 0x02	; 2
    103a:	31 05       	cpc	r19, r1
    103c:	2c f4       	brge	.+10     	; 0x1048 <DIO_U8SetPinVal+0x132>
    103e:	8d 81       	ldd	r24, Y+5	; 0x05
    1040:	9e 81       	ldd	r25, Y+6	; 0x06
    1042:	00 97       	sbiw	r24, 0x00	; 0
    1044:	69 f0       	breq	.+26     	; 0x1060 <DIO_U8SetPinVal+0x14a>
    1046:	62 c0       	rjmp	.+196    	; 0x110c <DIO_U8SetPinVal+0x1f6>
    1048:	2d 81       	ldd	r18, Y+5	; 0x05
    104a:	3e 81       	ldd	r19, Y+6	; 0x06
    104c:	22 30       	cpi	r18, 0x02	; 2
    104e:	31 05       	cpc	r19, r1
    1050:	89 f1       	breq	.+98     	; 0x10b4 <DIO_U8SetPinVal+0x19e>
    1052:	8d 81       	ldd	r24, Y+5	; 0x05
    1054:	9e 81       	ldd	r25, Y+6	; 0x06
    1056:	83 30       	cpi	r24, 0x03	; 3
    1058:	91 05       	cpc	r25, r1
    105a:	09 f4       	brne	.+2      	; 0x105e <DIO_U8SetPinVal+0x148>
    105c:	40 c0       	rjmp	.+128    	; 0x10de <DIO_U8SetPinVal+0x1c8>
    105e:	56 c0       	rjmp	.+172    	; 0x110c <DIO_U8SetPinVal+0x1f6>
			{
				case 0:
				{
					ClearBit(PORTA_REG,Copy_u8PinNo);
    1060:	ab e3       	ldi	r26, 0x3B	; 59
    1062:	b0 e0       	ldi	r27, 0x00	; 0
    1064:	eb e3       	ldi	r30, 0x3B	; 59
    1066:	f0 e0       	ldi	r31, 0x00	; 0
    1068:	80 81       	ld	r24, Z
    106a:	48 2f       	mov	r20, r24
    106c:	8b 81       	ldd	r24, Y+3	; 0x03
    106e:	28 2f       	mov	r18, r24
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	81 e0       	ldi	r24, 0x01	; 1
    1074:	90 e0       	ldi	r25, 0x00	; 0
    1076:	02 2e       	mov	r0, r18
    1078:	02 c0       	rjmp	.+4      	; 0x107e <DIO_U8SetPinVal+0x168>
    107a:	88 0f       	add	r24, r24
    107c:	99 1f       	adc	r25, r25
    107e:	0a 94       	dec	r0
    1080:	e2 f7       	brpl	.-8      	; 0x107a <DIO_U8SetPinVal+0x164>
    1082:	80 95       	com	r24
    1084:	84 23       	and	r24, r20
    1086:	8c 93       	st	X, r24
    1088:	41 c0       	rjmp	.+130    	; 0x110c <DIO_U8SetPinVal+0x1f6>
					break;
				}
				case 1:
				{
					ClearBit(PORTB_REG,Copy_u8PinNo);
    108a:	a8 e3       	ldi	r26, 0x38	; 56
    108c:	b0 e0       	ldi	r27, 0x00	; 0
    108e:	e8 e3       	ldi	r30, 0x38	; 56
    1090:	f0 e0       	ldi	r31, 0x00	; 0
    1092:	80 81       	ld	r24, Z
    1094:	48 2f       	mov	r20, r24
    1096:	8b 81       	ldd	r24, Y+3	; 0x03
    1098:	28 2f       	mov	r18, r24
    109a:	30 e0       	ldi	r19, 0x00	; 0
    109c:	81 e0       	ldi	r24, 0x01	; 1
    109e:	90 e0       	ldi	r25, 0x00	; 0
    10a0:	02 2e       	mov	r0, r18
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <DIO_U8SetPinVal+0x192>
    10a4:	88 0f       	add	r24, r24
    10a6:	99 1f       	adc	r25, r25
    10a8:	0a 94       	dec	r0
    10aa:	e2 f7       	brpl	.-8      	; 0x10a4 <DIO_U8SetPinVal+0x18e>
    10ac:	80 95       	com	r24
    10ae:	84 23       	and	r24, r20
    10b0:	8c 93       	st	X, r24
    10b2:	2c c0       	rjmp	.+88     	; 0x110c <DIO_U8SetPinVal+0x1f6>
					break;
				}
				case 2:
				{
					ClearBit(PORTC_REG,Copy_u8PinNo);
    10b4:	a5 e3       	ldi	r26, 0x35	; 53
    10b6:	b0 e0       	ldi	r27, 0x00	; 0
    10b8:	e5 e3       	ldi	r30, 0x35	; 53
    10ba:	f0 e0       	ldi	r31, 0x00	; 0
    10bc:	80 81       	ld	r24, Z
    10be:	48 2f       	mov	r20, r24
    10c0:	8b 81       	ldd	r24, Y+3	; 0x03
    10c2:	28 2f       	mov	r18, r24
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	81 e0       	ldi	r24, 0x01	; 1
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	02 2e       	mov	r0, r18
    10cc:	02 c0       	rjmp	.+4      	; 0x10d2 <DIO_U8SetPinVal+0x1bc>
    10ce:	88 0f       	add	r24, r24
    10d0:	99 1f       	adc	r25, r25
    10d2:	0a 94       	dec	r0
    10d4:	e2 f7       	brpl	.-8      	; 0x10ce <DIO_U8SetPinVal+0x1b8>
    10d6:	80 95       	com	r24
    10d8:	84 23       	and	r24, r20
    10da:	8c 93       	st	X, r24
    10dc:	17 c0       	rjmp	.+46     	; 0x110c <DIO_U8SetPinVal+0x1f6>
					break;
				}
				case 3:
				{
					ClearBit(PORTD_REG,Copy_u8PinNo);
    10de:	a2 e3       	ldi	r26, 0x32	; 50
    10e0:	b0 e0       	ldi	r27, 0x00	; 0
    10e2:	e2 e3       	ldi	r30, 0x32	; 50
    10e4:	f0 e0       	ldi	r31, 0x00	; 0
    10e6:	80 81       	ld	r24, Z
    10e8:	48 2f       	mov	r20, r24
    10ea:	8b 81       	ldd	r24, Y+3	; 0x03
    10ec:	28 2f       	mov	r18, r24
    10ee:	30 e0       	ldi	r19, 0x00	; 0
    10f0:	81 e0       	ldi	r24, 0x01	; 1
    10f2:	90 e0       	ldi	r25, 0x00	; 0
    10f4:	02 2e       	mov	r0, r18
    10f6:	02 c0       	rjmp	.+4      	; 0x10fc <DIO_U8SetPinVal+0x1e6>
    10f8:	88 0f       	add	r24, r24
    10fa:	99 1f       	adc	r25, r25
    10fc:	0a 94       	dec	r0
    10fe:	e2 f7       	brpl	.-8      	; 0x10f8 <DIO_U8SetPinVal+0x1e2>
    1100:	80 95       	com	r24
    1102:	84 23       	and	r24, r20
    1104:	8c 93       	st	X, r24
    1106:	02 c0       	rjmp	.+4      	; 0x110c <DIO_U8SetPinVal+0x1f6>

			}
		}
		else
		{
			Local_Status=RT_NOK;
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	89 83       	std	Y+1, r24	; 0x01
{
	Local_Status=RT_NOK;
}


	return Local_Status;
    110c:	89 81       	ldd	r24, Y+1	; 0x01
}
    110e:	28 96       	adiw	r28, 0x08	; 8
    1110:	0f b6       	in	r0, 0x3f	; 63
    1112:	f8 94       	cli
    1114:	de bf       	out	0x3e, r29	; 62
    1116:	0f be       	out	0x3f, r0	; 63
    1118:	cd bf       	out	0x3d, r28	; 61
    111a:	cf 91       	pop	r28
    111c:	df 91       	pop	r29
    111e:	08 95       	ret

00001120 <DIO_U8GetPinVal>:

u8 DIO_U8GetPinVal(enum PORTS Copy_u8PortNo,enum PINS  Copy_u8PinNo, u8* u8_Val)
{
    1120:	df 93       	push	r29
    1122:	cf 93       	push	r28
    1124:	cd b7       	in	r28, 0x3d	; 61
    1126:	de b7       	in	r29, 0x3e	; 62
    1128:	27 97       	sbiw	r28, 0x07	; 7
    112a:	0f b6       	in	r0, 0x3f	; 63
    112c:	f8 94       	cli
    112e:	de bf       	out	0x3e, r29	; 62
    1130:	0f be       	out	0x3f, r0	; 63
    1132:	cd bf       	out	0x3d, r28	; 61
    1134:	8a 83       	std	Y+2, r24	; 0x02
    1136:	6b 83       	std	Y+3, r22	; 0x03
    1138:	5d 83       	std	Y+5, r21	; 0x05
    113a:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_Status=RT_OK;
    113c:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8PortNo>=0||Copy_u8PortNo<=3)
	{
		if(Copy_u8PinNo>=0||Copy_u8PinNo<=7)
		{

				switch(Copy_u8PortNo)
    113e:	8a 81       	ldd	r24, Y+2	; 0x02
    1140:	28 2f       	mov	r18, r24
    1142:	30 e0       	ldi	r19, 0x00	; 0
    1144:	3f 83       	std	Y+7, r19	; 0x07
    1146:	2e 83       	std	Y+6, r18	; 0x06
    1148:	4e 81       	ldd	r20, Y+6	; 0x06
    114a:	5f 81       	ldd	r21, Y+7	; 0x07
    114c:	41 30       	cpi	r20, 0x01	; 1
    114e:	51 05       	cpc	r21, r1
    1150:	59 f1       	breq	.+86     	; 0x11a8 <DIO_U8GetPinVal+0x88>
    1152:	8e 81       	ldd	r24, Y+6	; 0x06
    1154:	9f 81       	ldd	r25, Y+7	; 0x07
    1156:	82 30       	cpi	r24, 0x02	; 2
    1158:	91 05       	cpc	r25, r1
    115a:	34 f4       	brge	.+12     	; 0x1168 <DIO_U8GetPinVal+0x48>
    115c:	2e 81       	ldd	r18, Y+6	; 0x06
    115e:	3f 81       	ldd	r19, Y+7	; 0x07
    1160:	21 15       	cp	r18, r1
    1162:	31 05       	cpc	r19, r1
    1164:	69 f0       	breq	.+26     	; 0x1180 <DIO_U8GetPinVal+0x60>
    1166:	5b c0       	rjmp	.+182    	; 0x121e <DIO_U8GetPinVal+0xfe>
    1168:	4e 81       	ldd	r20, Y+6	; 0x06
    116a:	5f 81       	ldd	r21, Y+7	; 0x07
    116c:	42 30       	cpi	r20, 0x02	; 2
    116e:	51 05       	cpc	r21, r1
    1170:	79 f1       	breq	.+94     	; 0x11d0 <DIO_U8GetPinVal+0xb0>
    1172:	8e 81       	ldd	r24, Y+6	; 0x06
    1174:	9f 81       	ldd	r25, Y+7	; 0x07
    1176:	83 30       	cpi	r24, 0x03	; 3
    1178:	91 05       	cpc	r25, r1
    117a:	09 f4       	brne	.+2      	; 0x117e <DIO_U8GetPinVal+0x5e>
    117c:	3d c0       	rjmp	.+122    	; 0x11f8 <DIO_U8GetPinVal+0xd8>
    117e:	4f c0       	rjmp	.+158    	; 0x121e <DIO_U8GetPinVal+0xfe>
				{
				case 0:
				{
					*u8_Val=GetBit(PINA_REG,Copy_u8PinNo);
    1180:	e9 e3       	ldi	r30, 0x39	; 57
    1182:	f0 e0       	ldi	r31, 0x00	; 0
    1184:	80 81       	ld	r24, Z
    1186:	28 2f       	mov	r18, r24
    1188:	30 e0       	ldi	r19, 0x00	; 0
    118a:	8b 81       	ldd	r24, Y+3	; 0x03
    118c:	88 2f       	mov	r24, r24
    118e:	90 e0       	ldi	r25, 0x00	; 0
    1190:	a9 01       	movw	r20, r18
    1192:	02 c0       	rjmp	.+4      	; 0x1198 <DIO_U8GetPinVal+0x78>
    1194:	55 95       	asr	r21
    1196:	47 95       	ror	r20
    1198:	8a 95       	dec	r24
    119a:	e2 f7       	brpl	.-8      	; 0x1194 <DIO_U8GetPinVal+0x74>
    119c:	ca 01       	movw	r24, r20
    119e:	81 70       	andi	r24, 0x01	; 1
    11a0:	ec 81       	ldd	r30, Y+4	; 0x04
    11a2:	fd 81       	ldd	r31, Y+5	; 0x05
    11a4:	80 83       	st	Z, r24
    11a6:	3b c0       	rjmp	.+118    	; 0x121e <DIO_U8GetPinVal+0xfe>
					break;
				}
				case 1:
				{
					*u8_Val=GetBit(PINB_REG,Copy_u8PinNo);
    11a8:	e6 e3       	ldi	r30, 0x36	; 54
    11aa:	f0 e0       	ldi	r31, 0x00	; 0
    11ac:	80 81       	ld	r24, Z
    11ae:	28 2f       	mov	r18, r24
    11b0:	30 e0       	ldi	r19, 0x00	; 0
    11b2:	8b 81       	ldd	r24, Y+3	; 0x03
    11b4:	88 2f       	mov	r24, r24
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	a9 01       	movw	r20, r18
    11ba:	02 c0       	rjmp	.+4      	; 0x11c0 <DIO_U8GetPinVal+0xa0>
    11bc:	55 95       	asr	r21
    11be:	47 95       	ror	r20
    11c0:	8a 95       	dec	r24
    11c2:	e2 f7       	brpl	.-8      	; 0x11bc <DIO_U8GetPinVal+0x9c>
    11c4:	ca 01       	movw	r24, r20
    11c6:	81 70       	andi	r24, 0x01	; 1
    11c8:	ec 81       	ldd	r30, Y+4	; 0x04
    11ca:	fd 81       	ldd	r31, Y+5	; 0x05
    11cc:	80 83       	st	Z, r24
    11ce:	27 c0       	rjmp	.+78     	; 0x121e <DIO_U8GetPinVal+0xfe>
					break;
				}
				case 2:
				{
					*u8_Val=GetBit(PINC_REG,Copy_u8PinNo);
    11d0:	e3 e3       	ldi	r30, 0x33	; 51
    11d2:	f0 e0       	ldi	r31, 0x00	; 0
    11d4:	80 81       	ld	r24, Z
    11d6:	28 2f       	mov	r18, r24
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	8b 81       	ldd	r24, Y+3	; 0x03
    11dc:	88 2f       	mov	r24, r24
    11de:	90 e0       	ldi	r25, 0x00	; 0
    11e0:	a9 01       	movw	r20, r18
    11e2:	02 c0       	rjmp	.+4      	; 0x11e8 <DIO_U8GetPinVal+0xc8>
    11e4:	55 95       	asr	r21
    11e6:	47 95       	ror	r20
    11e8:	8a 95       	dec	r24
    11ea:	e2 f7       	brpl	.-8      	; 0x11e4 <DIO_U8GetPinVal+0xc4>
    11ec:	ca 01       	movw	r24, r20
    11ee:	81 70       	andi	r24, 0x01	; 1
    11f0:	ec 81       	ldd	r30, Y+4	; 0x04
    11f2:	fd 81       	ldd	r31, Y+5	; 0x05
    11f4:	80 83       	st	Z, r24
    11f6:	13 c0       	rjmp	.+38     	; 0x121e <DIO_U8GetPinVal+0xfe>
					break;
				}
				case 3:
				{
					*u8_Val=GetBit(PIND_REG,Copy_u8PinNo);
    11f8:	e0 e3       	ldi	r30, 0x30	; 48
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	80 81       	ld	r24, Z
    11fe:	28 2f       	mov	r18, r24
    1200:	30 e0       	ldi	r19, 0x00	; 0
    1202:	8b 81       	ldd	r24, Y+3	; 0x03
    1204:	88 2f       	mov	r24, r24
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	a9 01       	movw	r20, r18
    120a:	02 c0       	rjmp	.+4      	; 0x1210 <DIO_U8GetPinVal+0xf0>
    120c:	55 95       	asr	r21
    120e:	47 95       	ror	r20
    1210:	8a 95       	dec	r24
    1212:	e2 f7       	brpl	.-8      	; 0x120c <DIO_U8GetPinVal+0xec>
    1214:	ca 01       	movw	r24, r20
    1216:	81 70       	andi	r24, 0x01	; 1
    1218:	ec 81       	ldd	r30, Y+4	; 0x04
    121a:	fd 81       	ldd	r31, Y+5	; 0x05
    121c:	80 83       	st	Z, r24
	{
		Local_Status=RT_NOK;
	}


		return Local_Status;
    121e:	89 81       	ldd	r24, Y+1	; 0x01
}
    1220:	27 96       	adiw	r28, 0x07	; 7
    1222:	0f b6       	in	r0, 0x3f	; 63
    1224:	f8 94       	cli
    1226:	de bf       	out	0x3e, r29	; 62
    1228:	0f be       	out	0x3f, r0	; 63
    122a:	cd bf       	out	0x3d, r28	; 61
    122c:	cf 91       	pop	r28
    122e:	df 91       	pop	r29
    1230:	08 95       	ret

00001232 <main>:




int main(void)
{
    1232:	0f 93       	push	r16
    1234:	1f 93       	push	r17
    1236:	df 93       	push	r29
    1238:	cf 93       	push	r28
    123a:	cd b7       	in	r28, 0x3d	; 61
    123c:	de b7       	in	r29, 0x3e	; 62
    123e:	c2 50       	subi	r28, 0x02	; 2
    1240:	d1 40       	sbci	r29, 0x01	; 1
    1242:	0f b6       	in	r0, 0x3f	; 63
    1244:	f8 94       	cli
    1246:	de bf       	out	0x3e, r29	; 62
    1248:	0f be       	out	0x3f, r0	; 63
    124a:	cd bf       	out	0x3d, r28	; 61
u8 mm;
PORT_VoidInit();
    124c:	0e 94 a0 17 	call	0x2f40	; 0x2f40 <PORT_VoidInit>
SetBit(PORTD_REG,PIN0);
    1250:	a2 e3       	ldi	r26, 0x32	; 50
    1252:	b0 e0       	ldi	r27, 0x00	; 0
    1254:	e2 e3       	ldi	r30, 0x32	; 50
    1256:	f0 e0       	ldi	r31, 0x00	; 0
    1258:	80 81       	ld	r24, Z
    125a:	81 60       	ori	r24, 0x01	; 1
    125c:	8c 93       	st	X, r24
SetBit(PORTD_REG,PIN1);
    125e:	a2 e3       	ldi	r26, 0x32	; 50
    1260:	b0 e0       	ldi	r27, 0x00	; 0
    1262:	e2 e3       	ldi	r30, 0x32	; 50
    1264:	f0 e0       	ldi	r31, 0x00	; 0
    1266:	80 81       	ld	r24, Z
    1268:	82 60       	ori	r24, 0x02	; 2
    126a:	8c 93       	st	X, r24
u8 CounterUp=0;
    126c:	fe 01       	movw	r30, r28
    126e:	ee 50       	subi	r30, 0x0E	; 14
    1270:	ff 4f       	sbci	r31, 0xFF	; 255
    1272:	10 82       	st	Z, r1
u8 CounterDown=10;
    1274:	fe 01       	movw	r30, r28
    1276:	ef 50       	subi	r30, 0x0F	; 15
    1278:	ff 4f       	sbci	r31, 0xFF	; 255
    127a:	8a e0       	ldi	r24, 0x0A	; 10
    127c:	80 83       	st	Z, r24
u8 Counter=-1;
    127e:	fe 01       	movw	r30, r28
    1280:	e0 51       	subi	r30, 0x10	; 16
    1282:	ff 4f       	sbci	r31, 0xFF	; 255
    1284:	8f ef       	ldi	r24, 0xFF	; 255
    1286:	80 83       	st	Z, r24
u8 arr[]= {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0xFF,0x6F};
    1288:	ce 01       	movw	r24, r28
    128a:	8c 50       	subi	r24, 0x0C	; 12
    128c:	9f 4f       	sbci	r25, 0xFF	; 255
    128e:	c2 50       	subi	r28, 0x02	; 2
    1290:	df 4f       	sbci	r29, 0xFF	; 255
    1292:	99 83       	std	Y+1, r25	; 0x01
    1294:	88 83       	st	Y, r24
    1296:	ce 5f       	subi	r28, 0xFE	; 254
    1298:	d0 40       	sbci	r29, 0x00	; 0
    129a:	88 e6       	ldi	r24, 0x68	; 104
    129c:	90 e0       	ldi	r25, 0x00	; 0
    129e:	c0 50       	subi	r28, 0x00	; 0
    12a0:	df 4f       	sbci	r29, 0xFF	; 255
    12a2:	99 83       	std	Y+1, r25	; 0x01
    12a4:	88 83       	st	Y, r24
    12a6:	c0 50       	subi	r28, 0x00	; 0
    12a8:	d1 40       	sbci	r29, 0x01	; 1
    12aa:	9a e0       	ldi	r25, 0x0A	; 10
    12ac:	ce 5f       	subi	r28, 0xFE	; 254
    12ae:	de 4f       	sbci	r29, 0xFE	; 254
    12b0:	98 83       	st	Y, r25
    12b2:	c2 50       	subi	r28, 0x02	; 2
    12b4:	d1 40       	sbci	r29, 0x01	; 1
    12b6:	c0 50       	subi	r28, 0x00	; 0
    12b8:	df 4f       	sbci	r29, 0xFF	; 255
    12ba:	e8 81       	ld	r30, Y
    12bc:	f9 81       	ldd	r31, Y+1	; 0x01
    12be:	c0 50       	subi	r28, 0x00	; 0
    12c0:	d1 40       	sbci	r29, 0x01	; 1
    12c2:	00 80       	ld	r0, Z
    12c4:	c0 50       	subi	r28, 0x00	; 0
    12c6:	df 4f       	sbci	r29, 0xFF	; 255
    12c8:	88 81       	ld	r24, Y
    12ca:	99 81       	ldd	r25, Y+1	; 0x01
    12cc:	c0 50       	subi	r28, 0x00	; 0
    12ce:	d1 40       	sbci	r29, 0x01	; 1
    12d0:	01 96       	adiw	r24, 0x01	; 1
    12d2:	c0 50       	subi	r28, 0x00	; 0
    12d4:	df 4f       	sbci	r29, 0xFF	; 255
    12d6:	99 83       	std	Y+1, r25	; 0x01
    12d8:	88 83       	st	Y, r24
    12da:	c0 50       	subi	r28, 0x00	; 0
    12dc:	d1 40       	sbci	r29, 0x01	; 1
    12de:	c2 50       	subi	r28, 0x02	; 2
    12e0:	df 4f       	sbci	r29, 0xFF	; 255
    12e2:	e8 81       	ld	r30, Y
    12e4:	f9 81       	ldd	r31, Y+1	; 0x01
    12e6:	ce 5f       	subi	r28, 0xFE	; 254
    12e8:	d0 40       	sbci	r29, 0x00	; 0
    12ea:	00 82       	st	Z, r0
    12ec:	c2 50       	subi	r28, 0x02	; 2
    12ee:	df 4f       	sbci	r29, 0xFF	; 255
    12f0:	88 81       	ld	r24, Y
    12f2:	99 81       	ldd	r25, Y+1	; 0x01
    12f4:	ce 5f       	subi	r28, 0xFE	; 254
    12f6:	d0 40       	sbci	r29, 0x00	; 0
    12f8:	01 96       	adiw	r24, 0x01	; 1
    12fa:	c2 50       	subi	r28, 0x02	; 2
    12fc:	df 4f       	sbci	r29, 0xFF	; 255
    12fe:	99 83       	std	Y+1, r25	; 0x01
    1300:	88 83       	st	Y, r24
    1302:	ce 5f       	subi	r28, 0xFE	; 254
    1304:	d0 40       	sbci	r29, 0x00	; 0
    1306:	ce 5f       	subi	r28, 0xFE	; 254
    1308:	de 4f       	sbci	r29, 0xFE	; 254
    130a:	98 81       	ld	r25, Y
    130c:	c2 50       	subi	r28, 0x02	; 2
    130e:	d1 40       	sbci	r29, 0x01	; 1
    1310:	91 50       	subi	r25, 0x01	; 1
    1312:	ce 5f       	subi	r28, 0xFE	; 254
    1314:	de 4f       	sbci	r29, 0xFE	; 254
    1316:	98 83       	st	Y, r25
    1318:	c2 50       	subi	r28, 0x02	; 2
    131a:	d1 40       	sbci	r29, 0x01	; 1
    131c:	ce 5f       	subi	r28, 0xFE	; 254
    131e:	de 4f       	sbci	r29, 0xFE	; 254
    1320:	e8 81       	ld	r30, Y
    1322:	c2 50       	subi	r28, 0x02	; 2
    1324:	d1 40       	sbci	r29, 0x01	; 1
    1326:	ee 23       	and	r30, r30
    1328:	31 f6       	brne	.-116    	; 0x12b6 <main+0x84>
    132a:	eb c1       	rjmp	.+982    	; 0x1702 <main+0x4d0>

	while(1)
	{

		while(GetBit(PINA_REG,PIN0)&&GetBit(PINA_REG,PIN1)&&GetBit(PINA_REG,PIN5)&&(!GetBit(PINA_REG,PIN2)))
		{CounterUp++;
    132c:	de 01       	movw	r26, r28
    132e:	ae 50       	subi	r26, 0x0E	; 14
    1330:	bf 4f       	sbci	r27, 0xFF	; 255
    1332:	fe 01       	movw	r30, r28
    1334:	ee 50       	subi	r30, 0x0E	; 14
    1336:	ff 4f       	sbci	r31, 0xFF	; 255
    1338:	80 81       	ld	r24, Z
    133a:	8f 5f       	subi	r24, 0xFF	; 255
    133c:	8c 93       	st	X, r24
		CounterDown--;
    133e:	de 01       	movw	r26, r28
    1340:	af 50       	subi	r26, 0x0F	; 15
    1342:	bf 4f       	sbci	r27, 0xFF	; 255
    1344:	fe 01       	movw	r30, r28
    1346:	ef 50       	subi	r30, 0x0F	; 15
    1348:	ff 4f       	sbci	r31, 0xFF	; 255
    134a:	80 81       	ld	r24, Z
    134c:	81 50       	subi	r24, 0x01	; 1
    134e:	8c 93       	st	X, r24
			for(u8 l=0;l<30;l++)
    1350:	fe 01       	movw	r30, r28
    1352:	e1 51       	subi	r30, 0x11	; 17
    1354:	ff 4f       	sbci	r31, 0xFF	; 255
    1356:	10 82       	st	Z, r1
    1358:	cd c1       	rjmp	.+922    	; 0x16f4 <main+0x4c2>
    135a:	fe 01       	movw	r30, r28
    135c:	e3 52       	subi	r30, 0x23	; 35
    135e:	ff 4f       	sbci	r31, 0xFF	; 255
    1360:	80 e0       	ldi	r24, 0x00	; 0
    1362:	90 e0       	ldi	r25, 0x00	; 0
    1364:	a0 e2       	ldi	r26, 0x20	; 32
    1366:	b1 e4       	ldi	r27, 0x41	; 65
    1368:	80 83       	st	Z, r24
    136a:	91 83       	std	Z+1, r25	; 0x01
    136c:	a2 83       	std	Z+2, r26	; 0x02
    136e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1370:	8e 01       	movw	r16, r28
    1372:	07 52       	subi	r16, 0x27	; 39
    1374:	1f 4f       	sbci	r17, 0xFF	; 255
    1376:	fe 01       	movw	r30, r28
    1378:	e3 52       	subi	r30, 0x23	; 35
    137a:	ff 4f       	sbci	r31, 0xFF	; 255
    137c:	60 81       	ld	r22, Z
    137e:	71 81       	ldd	r23, Z+1	; 0x01
    1380:	82 81       	ldd	r24, Z+2	; 0x02
    1382:	93 81       	ldd	r25, Z+3	; 0x03
    1384:	20 e0       	ldi	r18, 0x00	; 0
    1386:	30 e0       	ldi	r19, 0x00	; 0
    1388:	4a ef       	ldi	r20, 0xFA	; 250
    138a:	54 e4       	ldi	r21, 0x44	; 68
    138c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1390:	dc 01       	movw	r26, r24
    1392:	cb 01       	movw	r24, r22
    1394:	f8 01       	movw	r30, r16
    1396:	80 83       	st	Z, r24
    1398:	91 83       	std	Z+1, r25	; 0x01
    139a:	a2 83       	std	Z+2, r26	; 0x02
    139c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    139e:	fe 01       	movw	r30, r28
    13a0:	e7 52       	subi	r30, 0x27	; 39
    13a2:	ff 4f       	sbci	r31, 0xFF	; 255
    13a4:	60 81       	ld	r22, Z
    13a6:	71 81       	ldd	r23, Z+1	; 0x01
    13a8:	82 81       	ldd	r24, Z+2	; 0x02
    13aa:	93 81       	ldd	r25, Z+3	; 0x03
    13ac:	20 e0       	ldi	r18, 0x00	; 0
    13ae:	30 e0       	ldi	r19, 0x00	; 0
    13b0:	40 e8       	ldi	r20, 0x80	; 128
    13b2:	5f e3       	ldi	r21, 0x3F	; 63
    13b4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    13b8:	88 23       	and	r24, r24
    13ba:	44 f4       	brge	.+16     	; 0x13cc <main+0x19a>
		__ticks = 1;
    13bc:	fe 01       	movw	r30, r28
    13be:	e9 52       	subi	r30, 0x29	; 41
    13c0:	ff 4f       	sbci	r31, 0xFF	; 255
    13c2:	81 e0       	ldi	r24, 0x01	; 1
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	91 83       	std	Z+1, r25	; 0x01
    13c8:	80 83       	st	Z, r24
    13ca:	64 c0       	rjmp	.+200    	; 0x1494 <main+0x262>
	else if (__tmp > 65535)
    13cc:	fe 01       	movw	r30, r28
    13ce:	e7 52       	subi	r30, 0x27	; 39
    13d0:	ff 4f       	sbci	r31, 0xFF	; 255
    13d2:	60 81       	ld	r22, Z
    13d4:	71 81       	ldd	r23, Z+1	; 0x01
    13d6:	82 81       	ldd	r24, Z+2	; 0x02
    13d8:	93 81       	ldd	r25, Z+3	; 0x03
    13da:	20 e0       	ldi	r18, 0x00	; 0
    13dc:	3f ef       	ldi	r19, 0xFF	; 255
    13de:	4f e7       	ldi	r20, 0x7F	; 127
    13e0:	57 e4       	ldi	r21, 0x47	; 71
    13e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    13e6:	18 16       	cp	r1, r24
    13e8:	0c f0       	brlt	.+2      	; 0x13ec <main+0x1ba>
    13ea:	43 c0       	rjmp	.+134    	; 0x1472 <main+0x240>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    13ec:	fe 01       	movw	r30, r28
    13ee:	e3 52       	subi	r30, 0x23	; 35
    13f0:	ff 4f       	sbci	r31, 0xFF	; 255
    13f2:	60 81       	ld	r22, Z
    13f4:	71 81       	ldd	r23, Z+1	; 0x01
    13f6:	82 81       	ldd	r24, Z+2	; 0x02
    13f8:	93 81       	ldd	r25, Z+3	; 0x03
    13fa:	20 e0       	ldi	r18, 0x00	; 0
    13fc:	30 e0       	ldi	r19, 0x00	; 0
    13fe:	40 e2       	ldi	r20, 0x20	; 32
    1400:	51 e4       	ldi	r21, 0x41	; 65
    1402:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1406:	dc 01       	movw	r26, r24
    1408:	cb 01       	movw	r24, r22
    140a:	8e 01       	movw	r16, r28
    140c:	09 52       	subi	r16, 0x29	; 41
    140e:	1f 4f       	sbci	r17, 0xFF	; 255
    1410:	bc 01       	movw	r22, r24
    1412:	cd 01       	movw	r24, r26
    1414:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1418:	dc 01       	movw	r26, r24
    141a:	cb 01       	movw	r24, r22
    141c:	f8 01       	movw	r30, r16
    141e:	91 83       	std	Z+1, r25	; 0x01
    1420:	80 83       	st	Z, r24
    1422:	1f c0       	rjmp	.+62     	; 0x1462 <main+0x230>
    1424:	fe 01       	movw	r30, r28
    1426:	eb 52       	subi	r30, 0x2B	; 43
    1428:	ff 4f       	sbci	r31, 0xFF	; 255
    142a:	88 ec       	ldi	r24, 0xC8	; 200
    142c:	90 e0       	ldi	r25, 0x00	; 0
    142e:	91 83       	std	Z+1, r25	; 0x01
    1430:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    1432:	fe 01       	movw	r30, r28
    1434:	eb 52       	subi	r30, 0x2B	; 43
    1436:	ff 4f       	sbci	r31, 0xFF	; 255
    1438:	80 81       	ld	r24, Z
    143a:	91 81       	ldd	r25, Z+1	; 0x01
    143c:	01 97       	sbiw	r24, 0x01	; 1
    143e:	f1 f7       	brne	.-4      	; 0x143c <main+0x20a>
    1440:	fe 01       	movw	r30, r28
    1442:	eb 52       	subi	r30, 0x2B	; 43
    1444:	ff 4f       	sbci	r31, 0xFF	; 255
    1446:	91 83       	std	Z+1, r25	; 0x01
    1448:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    144a:	de 01       	movw	r26, r28
    144c:	a9 52       	subi	r26, 0x29	; 41
    144e:	bf 4f       	sbci	r27, 0xFF	; 255
    1450:	fe 01       	movw	r30, r28
    1452:	e9 52       	subi	r30, 0x29	; 41
    1454:	ff 4f       	sbci	r31, 0xFF	; 255
    1456:	80 81       	ld	r24, Z
    1458:	91 81       	ldd	r25, Z+1	; 0x01
    145a:	01 97       	sbiw	r24, 0x01	; 1
    145c:	11 96       	adiw	r26, 0x01	; 1
    145e:	9c 93       	st	X, r25
    1460:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1462:	fe 01       	movw	r30, r28
    1464:	e9 52       	subi	r30, 0x29	; 41
    1466:	ff 4f       	sbci	r31, 0xFF	; 255
    1468:	80 81       	ld	r24, Z
    146a:	91 81       	ldd	r25, Z+1	; 0x01
    146c:	00 97       	sbiw	r24, 0x00	; 0
    146e:	d1 f6       	brne	.-76     	; 0x1424 <main+0x1f2>
    1470:	27 c0       	rjmp	.+78     	; 0x14c0 <main+0x28e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1472:	8e 01       	movw	r16, r28
    1474:	09 52       	subi	r16, 0x29	; 41
    1476:	1f 4f       	sbci	r17, 0xFF	; 255
    1478:	fe 01       	movw	r30, r28
    147a:	e7 52       	subi	r30, 0x27	; 39
    147c:	ff 4f       	sbci	r31, 0xFF	; 255
    147e:	60 81       	ld	r22, Z
    1480:	71 81       	ldd	r23, Z+1	; 0x01
    1482:	82 81       	ldd	r24, Z+2	; 0x02
    1484:	93 81       	ldd	r25, Z+3	; 0x03
    1486:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    148a:	dc 01       	movw	r26, r24
    148c:	cb 01       	movw	r24, r22
    148e:	f8 01       	movw	r30, r16
    1490:	91 83       	std	Z+1, r25	; 0x01
    1492:	80 83       	st	Z, r24
    1494:	de 01       	movw	r26, r28
    1496:	ad 52       	subi	r26, 0x2D	; 45
    1498:	bf 4f       	sbci	r27, 0xFF	; 255
    149a:	fe 01       	movw	r30, r28
    149c:	e9 52       	subi	r30, 0x29	; 41
    149e:	ff 4f       	sbci	r31, 0xFF	; 255
    14a0:	80 81       	ld	r24, Z
    14a2:	91 81       	ldd	r25, Z+1	; 0x01
    14a4:	8d 93       	st	X+, r24
    14a6:	9c 93       	st	X, r25
    14a8:	fe 01       	movw	r30, r28
    14aa:	ed 52       	subi	r30, 0x2D	; 45
    14ac:	ff 4f       	sbci	r31, 0xFF	; 255
    14ae:	80 81       	ld	r24, Z
    14b0:	91 81       	ldd	r25, Z+1	; 0x01
    14b2:	01 97       	sbiw	r24, 0x01	; 1
    14b4:	f1 f7       	brne	.-4      	; 0x14b2 <main+0x280>
    14b6:	fe 01       	movw	r30, r28
    14b8:	ed 52       	subi	r30, 0x2D	; 45
    14ba:	ff 4f       	sbci	r31, 0xFF	; 255
    14bc:	91 83       	std	Z+1, r25	; 0x01
    14be:	80 83       	st	Z, r24
			{
				_delay_ms(10);

							ClearBit(PORTD_REG,PIN0);
    14c0:	a2 e3       	ldi	r26, 0x32	; 50
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	e2 e3       	ldi	r30, 0x32	; 50
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	8e 7f       	andi	r24, 0xFE	; 254
    14cc:	8c 93       	st	X, r24
							SetBit(PORTD_REG,PIN1);
    14ce:	a2 e3       	ldi	r26, 0x32	; 50
    14d0:	b0 e0       	ldi	r27, 0x00	; 0
    14d2:	e2 e3       	ldi	r30, 0x32	; 50
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	82 60       	ori	r24, 0x02	; 2
    14da:	8c 93       	st	X, r24
							mm=DIO_U8SetPortVal(PORTC,arr[CounterUp-1]);
    14dc:	fe 01       	movw	r30, r28
    14de:	ee 50       	subi	r30, 0x0E	; 14
    14e0:	ff 4f       	sbci	r31, 0xFF	; 255
    14e2:	80 81       	ld	r24, Z
    14e4:	88 2f       	mov	r24, r24
    14e6:	90 e0       	ldi	r25, 0x00	; 0
    14e8:	9c 01       	movw	r18, r24
    14ea:	21 50       	subi	r18, 0x01	; 1
    14ec:	30 40       	sbci	r19, 0x00	; 0
    14ee:	ce 01       	movw	r24, r28
    14f0:	8c 50       	subi	r24, 0x0C	; 12
    14f2:	9f 4f       	sbci	r25, 0xFF	; 255
    14f4:	fc 01       	movw	r30, r24
    14f6:	e2 0f       	add	r30, r18
    14f8:	f3 1f       	adc	r31, r19
    14fa:	90 81       	ld	r25, Z
    14fc:	82 e0       	ldi	r24, 0x02	; 2
    14fe:	69 2f       	mov	r22, r25
    1500:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    1504:	fe 01       	movw	r30, r28
    1506:	ed 50       	subi	r30, 0x0D	; 13
    1508:	ff 4f       	sbci	r31, 0xFF	; 255
    150a:	80 83       	st	Z, r24
							//_delay_ms(500);
							if(CounterUp==10)
    150c:	fe 01       	movw	r30, r28
    150e:	ee 50       	subi	r30, 0x0E	; 14
    1510:	ff 4f       	sbci	r31, 0xFF	; 255
    1512:	80 81       	ld	r24, Z
    1514:	8a 30       	cpi	r24, 0x0A	; 10
    1516:	21 f4       	brne	.+8      	; 0x1520 <main+0x2ee>
							{
								CounterUp=0;
    1518:	fe 01       	movw	r30, r28
    151a:	ee 50       	subi	r30, 0x0E	; 14
    151c:	ff 4f       	sbci	r31, 0xFF	; 255
    151e:	10 82       	st	Z, r1
    1520:	fe 01       	movw	r30, r28
    1522:	e1 53       	subi	r30, 0x31	; 49
    1524:	ff 4f       	sbci	r31, 0xFF	; 255
    1526:	80 e0       	ldi	r24, 0x00	; 0
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	a0 e2       	ldi	r26, 0x20	; 32
    152c:	b1 e4       	ldi	r27, 0x41	; 65
    152e:	80 83       	st	Z, r24
    1530:	91 83       	std	Z+1, r25	; 0x01
    1532:	a2 83       	std	Z+2, r26	; 0x02
    1534:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1536:	8e 01       	movw	r16, r28
    1538:	05 53       	subi	r16, 0x35	; 53
    153a:	1f 4f       	sbci	r17, 0xFF	; 255
    153c:	fe 01       	movw	r30, r28
    153e:	e1 53       	subi	r30, 0x31	; 49
    1540:	ff 4f       	sbci	r31, 0xFF	; 255
    1542:	60 81       	ld	r22, Z
    1544:	71 81       	ldd	r23, Z+1	; 0x01
    1546:	82 81       	ldd	r24, Z+2	; 0x02
    1548:	93 81       	ldd	r25, Z+3	; 0x03
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	4a ef       	ldi	r20, 0xFA	; 250
    1550:	54 e4       	ldi	r21, 0x44	; 68
    1552:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1556:	dc 01       	movw	r26, r24
    1558:	cb 01       	movw	r24, r22
    155a:	f8 01       	movw	r30, r16
    155c:	80 83       	st	Z, r24
    155e:	91 83       	std	Z+1, r25	; 0x01
    1560:	a2 83       	std	Z+2, r26	; 0x02
    1562:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1564:	fe 01       	movw	r30, r28
    1566:	e5 53       	subi	r30, 0x35	; 53
    1568:	ff 4f       	sbci	r31, 0xFF	; 255
    156a:	60 81       	ld	r22, Z
    156c:	71 81       	ldd	r23, Z+1	; 0x01
    156e:	82 81       	ldd	r24, Z+2	; 0x02
    1570:	93 81       	ldd	r25, Z+3	; 0x03
    1572:	20 e0       	ldi	r18, 0x00	; 0
    1574:	30 e0       	ldi	r19, 0x00	; 0
    1576:	40 e8       	ldi	r20, 0x80	; 128
    1578:	5f e3       	ldi	r21, 0x3F	; 63
    157a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    157e:	88 23       	and	r24, r24
    1580:	44 f4       	brge	.+16     	; 0x1592 <main+0x360>
		__ticks = 1;
    1582:	fe 01       	movw	r30, r28
    1584:	e7 53       	subi	r30, 0x37	; 55
    1586:	ff 4f       	sbci	r31, 0xFF	; 255
    1588:	81 e0       	ldi	r24, 0x01	; 1
    158a:	90 e0       	ldi	r25, 0x00	; 0
    158c:	91 83       	std	Z+1, r25	; 0x01
    158e:	80 83       	st	Z, r24
    1590:	64 c0       	rjmp	.+200    	; 0x165a <main+0x428>
	else if (__tmp > 65535)
    1592:	fe 01       	movw	r30, r28
    1594:	e5 53       	subi	r30, 0x35	; 53
    1596:	ff 4f       	sbci	r31, 0xFF	; 255
    1598:	60 81       	ld	r22, Z
    159a:	71 81       	ldd	r23, Z+1	; 0x01
    159c:	82 81       	ldd	r24, Z+2	; 0x02
    159e:	93 81       	ldd	r25, Z+3	; 0x03
    15a0:	20 e0       	ldi	r18, 0x00	; 0
    15a2:	3f ef       	ldi	r19, 0xFF	; 255
    15a4:	4f e7       	ldi	r20, 0x7F	; 127
    15a6:	57 e4       	ldi	r21, 0x47	; 71
    15a8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    15ac:	18 16       	cp	r1, r24
    15ae:	0c f0       	brlt	.+2      	; 0x15b2 <main+0x380>
    15b0:	43 c0       	rjmp	.+134    	; 0x1638 <main+0x406>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    15b2:	fe 01       	movw	r30, r28
    15b4:	e1 53       	subi	r30, 0x31	; 49
    15b6:	ff 4f       	sbci	r31, 0xFF	; 255
    15b8:	60 81       	ld	r22, Z
    15ba:	71 81       	ldd	r23, Z+1	; 0x01
    15bc:	82 81       	ldd	r24, Z+2	; 0x02
    15be:	93 81       	ldd	r25, Z+3	; 0x03
    15c0:	20 e0       	ldi	r18, 0x00	; 0
    15c2:	30 e0       	ldi	r19, 0x00	; 0
    15c4:	40 e2       	ldi	r20, 0x20	; 32
    15c6:	51 e4       	ldi	r21, 0x41	; 65
    15c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    15cc:	dc 01       	movw	r26, r24
    15ce:	cb 01       	movw	r24, r22
    15d0:	8e 01       	movw	r16, r28
    15d2:	07 53       	subi	r16, 0x37	; 55
    15d4:	1f 4f       	sbci	r17, 0xFF	; 255
    15d6:	bc 01       	movw	r22, r24
    15d8:	cd 01       	movw	r24, r26
    15da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15de:	dc 01       	movw	r26, r24
    15e0:	cb 01       	movw	r24, r22
    15e2:	f8 01       	movw	r30, r16
    15e4:	91 83       	std	Z+1, r25	; 0x01
    15e6:	80 83       	st	Z, r24
    15e8:	1f c0       	rjmp	.+62     	; 0x1628 <main+0x3f6>
    15ea:	fe 01       	movw	r30, r28
    15ec:	e9 53       	subi	r30, 0x39	; 57
    15ee:	ff 4f       	sbci	r31, 0xFF	; 255
    15f0:	88 ec       	ldi	r24, 0xC8	; 200
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	91 83       	std	Z+1, r25	; 0x01
    15f6:	80 83       	st	Z, r24
    15f8:	fe 01       	movw	r30, r28
    15fa:	e9 53       	subi	r30, 0x39	; 57
    15fc:	ff 4f       	sbci	r31, 0xFF	; 255
    15fe:	80 81       	ld	r24, Z
    1600:	91 81       	ldd	r25, Z+1	; 0x01
    1602:	01 97       	sbiw	r24, 0x01	; 1
    1604:	f1 f7       	brne	.-4      	; 0x1602 <main+0x3d0>
    1606:	fe 01       	movw	r30, r28
    1608:	e9 53       	subi	r30, 0x39	; 57
    160a:	ff 4f       	sbci	r31, 0xFF	; 255
    160c:	91 83       	std	Z+1, r25	; 0x01
    160e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1610:	de 01       	movw	r26, r28
    1612:	a7 53       	subi	r26, 0x37	; 55
    1614:	bf 4f       	sbci	r27, 0xFF	; 255
    1616:	fe 01       	movw	r30, r28
    1618:	e7 53       	subi	r30, 0x37	; 55
    161a:	ff 4f       	sbci	r31, 0xFF	; 255
    161c:	80 81       	ld	r24, Z
    161e:	91 81       	ldd	r25, Z+1	; 0x01
    1620:	01 97       	sbiw	r24, 0x01	; 1
    1622:	11 96       	adiw	r26, 0x01	; 1
    1624:	9c 93       	st	X, r25
    1626:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1628:	fe 01       	movw	r30, r28
    162a:	e7 53       	subi	r30, 0x37	; 55
    162c:	ff 4f       	sbci	r31, 0xFF	; 255
    162e:	80 81       	ld	r24, Z
    1630:	91 81       	ldd	r25, Z+1	; 0x01
    1632:	00 97       	sbiw	r24, 0x00	; 0
    1634:	d1 f6       	brne	.-76     	; 0x15ea <main+0x3b8>
    1636:	27 c0       	rjmp	.+78     	; 0x1686 <main+0x454>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1638:	8e 01       	movw	r16, r28
    163a:	07 53       	subi	r16, 0x37	; 55
    163c:	1f 4f       	sbci	r17, 0xFF	; 255
    163e:	fe 01       	movw	r30, r28
    1640:	e5 53       	subi	r30, 0x35	; 53
    1642:	ff 4f       	sbci	r31, 0xFF	; 255
    1644:	60 81       	ld	r22, Z
    1646:	71 81       	ldd	r23, Z+1	; 0x01
    1648:	82 81       	ldd	r24, Z+2	; 0x02
    164a:	93 81       	ldd	r25, Z+3	; 0x03
    164c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1650:	dc 01       	movw	r26, r24
    1652:	cb 01       	movw	r24, r22
    1654:	f8 01       	movw	r30, r16
    1656:	91 83       	std	Z+1, r25	; 0x01
    1658:	80 83       	st	Z, r24
    165a:	de 01       	movw	r26, r28
    165c:	ab 53       	subi	r26, 0x3B	; 59
    165e:	bf 4f       	sbci	r27, 0xFF	; 255
    1660:	fe 01       	movw	r30, r28
    1662:	e7 53       	subi	r30, 0x37	; 55
    1664:	ff 4f       	sbci	r31, 0xFF	; 255
    1666:	80 81       	ld	r24, Z
    1668:	91 81       	ldd	r25, Z+1	; 0x01
    166a:	8d 93       	st	X+, r24
    166c:	9c 93       	st	X, r25
    166e:	fe 01       	movw	r30, r28
    1670:	eb 53       	subi	r30, 0x3B	; 59
    1672:	ff 4f       	sbci	r31, 0xFF	; 255
    1674:	80 81       	ld	r24, Z
    1676:	91 81       	ldd	r25, Z+1	; 0x01
    1678:	01 97       	sbiw	r24, 0x01	; 1
    167a:	f1 f7       	brne	.-4      	; 0x1678 <main+0x446>
    167c:	fe 01       	movw	r30, r28
    167e:	eb 53       	subi	r30, 0x3B	; 59
    1680:	ff 4f       	sbci	r31, 0xFF	; 255
    1682:	91 83       	std	Z+1, r25	; 0x01
    1684:	80 83       	st	Z, r24
							}
				_delay_ms(10);

							ClearBit(PORTD_REG,PIN1);
    1686:	a2 e3       	ldi	r26, 0x32	; 50
    1688:	b0 e0       	ldi	r27, 0x00	; 0
    168a:	e2 e3       	ldi	r30, 0x32	; 50
    168c:	f0 e0       	ldi	r31, 0x00	; 0
    168e:	80 81       	ld	r24, Z
    1690:	8d 7f       	andi	r24, 0xFD	; 253
    1692:	8c 93       	st	X, r24
							SetBit(PORTD_REG,PIN0);
    1694:	a2 e3       	ldi	r26, 0x32	; 50
    1696:	b0 e0       	ldi	r27, 0x00	; 0
    1698:	e2 e3       	ldi	r30, 0x32	; 50
    169a:	f0 e0       	ldi	r31, 0x00	; 0
    169c:	80 81       	ld	r24, Z
    169e:	81 60       	ori	r24, 0x01	; 1
    16a0:	8c 93       	st	X, r24
							mm=DIO_U8SetPortVal(PORTC,arr[CounterDown]);
    16a2:	fe 01       	movw	r30, r28
    16a4:	ef 50       	subi	r30, 0x0F	; 15
    16a6:	ff 4f       	sbci	r31, 0xFF	; 255
    16a8:	80 81       	ld	r24, Z
    16aa:	28 2f       	mov	r18, r24
    16ac:	30 e0       	ldi	r19, 0x00	; 0
    16ae:	ce 01       	movw	r24, r28
    16b0:	8c 50       	subi	r24, 0x0C	; 12
    16b2:	9f 4f       	sbci	r25, 0xFF	; 255
    16b4:	fc 01       	movw	r30, r24
    16b6:	e2 0f       	add	r30, r18
    16b8:	f3 1f       	adc	r31, r19
    16ba:	90 81       	ld	r25, Z
    16bc:	82 e0       	ldi	r24, 0x02	; 2
    16be:	69 2f       	mov	r22, r25
    16c0:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    16c4:	fe 01       	movw	r30, r28
    16c6:	ed 50       	subi	r30, 0x0D	; 13
    16c8:	ff 4f       	sbci	r31, 0xFF	; 255
    16ca:	80 83       	st	Z, r24
							//_delay_ms(500);
							if(CounterDown==0)
    16cc:	fe 01       	movw	r30, r28
    16ce:	ef 50       	subi	r30, 0x0F	; 15
    16d0:	ff 4f       	sbci	r31, 0xFF	; 255
    16d2:	80 81       	ld	r24, Z
    16d4:	88 23       	and	r24, r24
    16d6:	29 f4       	brne	.+10     	; 0x16e2 <main+0x4b0>
							{
								CounterDown=10;
    16d8:	fe 01       	movw	r30, r28
    16da:	ef 50       	subi	r30, 0x0F	; 15
    16dc:	ff 4f       	sbci	r31, 0xFF	; 255
    16de:	8a e0       	ldi	r24, 0x0A	; 10
    16e0:	80 83       	st	Z, r24
	{

		while(GetBit(PINA_REG,PIN0)&&GetBit(PINA_REG,PIN1)&&GetBit(PINA_REG,PIN5)&&(!GetBit(PINA_REG,PIN2)))
		{CounterUp++;
		CounterDown--;
			for(u8 l=0;l<30;l++)
    16e2:	de 01       	movw	r26, r28
    16e4:	a1 51       	subi	r26, 0x11	; 17
    16e6:	bf 4f       	sbci	r27, 0xFF	; 255
    16e8:	fe 01       	movw	r30, r28
    16ea:	e1 51       	subi	r30, 0x11	; 17
    16ec:	ff 4f       	sbci	r31, 0xFF	; 255
    16ee:	80 81       	ld	r24, Z
    16f0:	8f 5f       	subi	r24, 0xFF	; 255
    16f2:	8c 93       	st	X, r24
    16f4:	fe 01       	movw	r30, r28
    16f6:	e1 51       	subi	r30, 0x11	; 17
    16f8:	ff 4f       	sbci	r31, 0xFF	; 255
    16fa:	80 81       	ld	r24, Z
    16fc:	8e 31       	cpi	r24, 0x1E	; 30
    16fe:	08 f4       	brcc	.+2      	; 0x1702 <main+0x4d0>
    1700:	2c ce       	rjmp	.-936    	; 0x135a <main+0x128>
u8 arr[]= {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0xFF,0x6F};

	while(1)
	{

		while(GetBit(PINA_REG,PIN0)&&GetBit(PINA_REG,PIN1)&&GetBit(PINA_REG,PIN5)&&(!GetBit(PINA_REG,PIN2)))
    1702:	e9 e3       	ldi	r30, 0x39	; 57
    1704:	f0 e0       	ldi	r31, 0x00	; 0
    1706:	80 81       	ld	r24, Z
    1708:	88 2f       	mov	r24, r24
    170a:	90 e0       	ldi	r25, 0x00	; 0
    170c:	81 70       	andi	r24, 0x01	; 1
    170e:	90 70       	andi	r25, 0x00	; 0
    1710:	98 2f       	mov	r25, r24
    1712:	81 e0       	ldi	r24, 0x01	; 1
    1714:	89 27       	eor	r24, r25
    1716:	88 23       	and	r24, r24
    1718:	41 f5       	brne	.+80     	; 0x176a <main+0x538>
    171a:	e9 e3       	ldi	r30, 0x39	; 57
    171c:	f0 e0       	ldi	r31, 0x00	; 0
    171e:	80 81       	ld	r24, Z
    1720:	86 95       	lsr	r24
    1722:	88 2f       	mov	r24, r24
    1724:	90 e0       	ldi	r25, 0x00	; 0
    1726:	81 70       	andi	r24, 0x01	; 1
    1728:	90 70       	andi	r25, 0x00	; 0
    172a:	98 2f       	mov	r25, r24
    172c:	81 e0       	ldi	r24, 0x01	; 1
    172e:	89 27       	eor	r24, r25
    1730:	88 23       	and	r24, r24
    1732:	d9 f4       	brne	.+54     	; 0x176a <main+0x538>
    1734:	e9 e3       	ldi	r30, 0x39	; 57
    1736:	f0 e0       	ldi	r31, 0x00	; 0
    1738:	80 81       	ld	r24, Z
    173a:	82 95       	swap	r24
    173c:	86 95       	lsr	r24
    173e:	87 70       	andi	r24, 0x07	; 7
    1740:	88 2f       	mov	r24, r24
    1742:	90 e0       	ldi	r25, 0x00	; 0
    1744:	81 70       	andi	r24, 0x01	; 1
    1746:	90 70       	andi	r25, 0x00	; 0
    1748:	98 2f       	mov	r25, r24
    174a:	81 e0       	ldi	r24, 0x01	; 1
    174c:	89 27       	eor	r24, r25
    174e:	88 23       	and	r24, r24
    1750:	61 f4       	brne	.+24     	; 0x176a <main+0x538>
    1752:	e9 e3       	ldi	r30, 0x39	; 57
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	80 81       	ld	r24, Z
    1758:	86 95       	lsr	r24
    175a:	86 95       	lsr	r24
    175c:	88 2f       	mov	r24, r24
    175e:	90 e0       	ldi	r25, 0x00	; 0
    1760:	81 70       	andi	r24, 0x01	; 1
    1762:	90 70       	andi	r25, 0x00	; 0
    1764:	00 97       	sbiw	r24, 0x00	; 0
    1766:	09 f4       	brne	.+2      	; 0x176a <main+0x538>
    1768:	e1 cd       	rjmp	.-1086   	; 0x132c <main+0xfa>
								CounterDown=10;
							}

			}
		}
		if(GetBit(PINA_REG,PIN0)&&(!GetBit(PINA_REG,PIN2))&&GetBit(PINA_REG,PIN5)&&(!GetBit(PINA_REG,PIN1)))
    176a:	e9 e3       	ldi	r30, 0x39	; 57
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	80 81       	ld	r24, Z
    1770:	88 2f       	mov	r24, r24
    1772:	90 e0       	ldi	r25, 0x00	; 0
    1774:	81 70       	andi	r24, 0x01	; 1
    1776:	90 70       	andi	r25, 0x00	; 0
    1778:	88 23       	and	r24, r24
    177a:	09 f4       	brne	.+2      	; 0x177e <main+0x54c>
    177c:	11 c1       	rjmp	.+546    	; 0x19a0 <main+0x76e>
    177e:	e9 e3       	ldi	r30, 0x39	; 57
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	80 81       	ld	r24, Z
    1784:	86 95       	lsr	r24
    1786:	86 95       	lsr	r24
    1788:	88 2f       	mov	r24, r24
    178a:	90 e0       	ldi	r25, 0x00	; 0
    178c:	81 70       	andi	r24, 0x01	; 1
    178e:	90 70       	andi	r25, 0x00	; 0
    1790:	00 97       	sbiw	r24, 0x00	; 0
    1792:	09 f0       	breq	.+2      	; 0x1796 <main+0x564>
    1794:	05 c1       	rjmp	.+522    	; 0x19a0 <main+0x76e>
    1796:	e9 e3       	ldi	r30, 0x39	; 57
    1798:	f0 e0       	ldi	r31, 0x00	; 0
    179a:	80 81       	ld	r24, Z
    179c:	82 95       	swap	r24
    179e:	86 95       	lsr	r24
    17a0:	87 70       	andi	r24, 0x07	; 7
    17a2:	88 2f       	mov	r24, r24
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	81 70       	andi	r24, 0x01	; 1
    17a8:	90 70       	andi	r25, 0x00	; 0
    17aa:	88 23       	and	r24, r24
    17ac:	09 f4       	brne	.+2      	; 0x17b0 <main+0x57e>
    17ae:	f8 c0       	rjmp	.+496    	; 0x19a0 <main+0x76e>
    17b0:	e9 e3       	ldi	r30, 0x39	; 57
    17b2:	f0 e0       	ldi	r31, 0x00	; 0
    17b4:	80 81       	ld	r24, Z
    17b6:	86 95       	lsr	r24
    17b8:	88 2f       	mov	r24, r24
    17ba:	90 e0       	ldi	r25, 0x00	; 0
    17bc:	81 70       	andi	r24, 0x01	; 1
    17be:	90 70       	andi	r25, 0x00	; 0
    17c0:	00 97       	sbiw	r24, 0x00	; 0
    17c2:	09 f0       	breq	.+2      	; 0x17c6 <main+0x594>
    17c4:	ed c0       	rjmp	.+474    	; 0x19a0 <main+0x76e>
		{



			CounterUp++;
    17c6:	de 01       	movw	r26, r28
    17c8:	ae 50       	subi	r26, 0x0E	; 14
    17ca:	bf 4f       	sbci	r27, 0xFF	; 255
    17cc:	fe 01       	movw	r30, r28
    17ce:	ee 50       	subi	r30, 0x0E	; 14
    17d0:	ff 4f       	sbci	r31, 0xFF	; 255
    17d2:	80 81       	ld	r24, Z
    17d4:	8f 5f       	subi	r24, 0xFF	; 255
    17d6:	8c 93       	st	X, r24
			ClearBit(PORTD_REG,PIN0);
    17d8:	a2 e3       	ldi	r26, 0x32	; 50
    17da:	b0 e0       	ldi	r27, 0x00	; 0
    17dc:	e2 e3       	ldi	r30, 0x32	; 50
    17de:	f0 e0       	ldi	r31, 0x00	; 0
    17e0:	80 81       	ld	r24, Z
    17e2:	8e 7f       	andi	r24, 0xFE	; 254
    17e4:	8c 93       	st	X, r24
			SetBit(PORTD_REG,PIN1);
    17e6:	a2 e3       	ldi	r26, 0x32	; 50
    17e8:	b0 e0       	ldi	r27, 0x00	; 0
    17ea:	e2 e3       	ldi	r30, 0x32	; 50
    17ec:	f0 e0       	ldi	r31, 0x00	; 0
    17ee:	80 81       	ld	r24, Z
    17f0:	82 60       	ori	r24, 0x02	; 2
    17f2:	8c 93       	st	X, r24
			mm=DIO_U8SetPortVal(PORTC,arr[CounterUp-1]);
    17f4:	fe 01       	movw	r30, r28
    17f6:	ee 50       	subi	r30, 0x0E	; 14
    17f8:	ff 4f       	sbci	r31, 0xFF	; 255
    17fa:	80 81       	ld	r24, Z
    17fc:	88 2f       	mov	r24, r24
    17fe:	90 e0       	ldi	r25, 0x00	; 0
    1800:	9c 01       	movw	r18, r24
    1802:	21 50       	subi	r18, 0x01	; 1
    1804:	30 40       	sbci	r19, 0x00	; 0
    1806:	ce 01       	movw	r24, r28
    1808:	8c 50       	subi	r24, 0x0C	; 12
    180a:	9f 4f       	sbci	r25, 0xFF	; 255
    180c:	fc 01       	movw	r30, r24
    180e:	e2 0f       	add	r30, r18
    1810:	f3 1f       	adc	r31, r19
    1812:	90 81       	ld	r25, Z
    1814:	82 e0       	ldi	r24, 0x02	; 2
    1816:	69 2f       	mov	r22, r25
    1818:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    181c:	fe 01       	movw	r30, r28
    181e:	ed 50       	subi	r30, 0x0D	; 13
    1820:	ff 4f       	sbci	r31, 0xFF	; 255
    1822:	80 83       	st	Z, r24
    1824:	fe 01       	movw	r30, r28
    1826:	ef 53       	subi	r30, 0x3F	; 63
    1828:	ff 4f       	sbci	r31, 0xFF	; 255
    182a:	80 e0       	ldi	r24, 0x00	; 0
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	aa ef       	ldi	r26, 0xFA	; 250
    1830:	b3 e4       	ldi	r27, 0x43	; 67
    1832:	80 83       	st	Z, r24
    1834:	91 83       	std	Z+1, r25	; 0x01
    1836:	a2 83       	std	Z+2, r26	; 0x02
    1838:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    183a:	8e 01       	movw	r16, r28
    183c:	03 54       	subi	r16, 0x43	; 67
    183e:	1f 4f       	sbci	r17, 0xFF	; 255
    1840:	fe 01       	movw	r30, r28
    1842:	ef 53       	subi	r30, 0x3F	; 63
    1844:	ff 4f       	sbci	r31, 0xFF	; 255
    1846:	60 81       	ld	r22, Z
    1848:	71 81       	ldd	r23, Z+1	; 0x01
    184a:	82 81       	ldd	r24, Z+2	; 0x02
    184c:	93 81       	ldd	r25, Z+3	; 0x03
    184e:	20 e0       	ldi	r18, 0x00	; 0
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	4a ef       	ldi	r20, 0xFA	; 250
    1854:	54 e4       	ldi	r21, 0x44	; 68
    1856:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    185a:	dc 01       	movw	r26, r24
    185c:	cb 01       	movw	r24, r22
    185e:	f8 01       	movw	r30, r16
    1860:	80 83       	st	Z, r24
    1862:	91 83       	std	Z+1, r25	; 0x01
    1864:	a2 83       	std	Z+2, r26	; 0x02
    1866:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1868:	fe 01       	movw	r30, r28
    186a:	e3 54       	subi	r30, 0x43	; 67
    186c:	ff 4f       	sbci	r31, 0xFF	; 255
    186e:	60 81       	ld	r22, Z
    1870:	71 81       	ldd	r23, Z+1	; 0x01
    1872:	82 81       	ldd	r24, Z+2	; 0x02
    1874:	93 81       	ldd	r25, Z+3	; 0x03
    1876:	20 e0       	ldi	r18, 0x00	; 0
    1878:	30 e0       	ldi	r19, 0x00	; 0
    187a:	40 e8       	ldi	r20, 0x80	; 128
    187c:	5f e3       	ldi	r21, 0x3F	; 63
    187e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1882:	88 23       	and	r24, r24
    1884:	44 f4       	brge	.+16     	; 0x1896 <main+0x664>
		__ticks = 1;
    1886:	fe 01       	movw	r30, r28
    1888:	e5 54       	subi	r30, 0x45	; 69
    188a:	ff 4f       	sbci	r31, 0xFF	; 255
    188c:	81 e0       	ldi	r24, 0x01	; 1
    188e:	90 e0       	ldi	r25, 0x00	; 0
    1890:	91 83       	std	Z+1, r25	; 0x01
    1892:	80 83       	st	Z, r24
    1894:	64 c0       	rjmp	.+200    	; 0x195e <main+0x72c>
	else if (__tmp > 65535)
    1896:	fe 01       	movw	r30, r28
    1898:	e3 54       	subi	r30, 0x43	; 67
    189a:	ff 4f       	sbci	r31, 0xFF	; 255
    189c:	60 81       	ld	r22, Z
    189e:	71 81       	ldd	r23, Z+1	; 0x01
    18a0:	82 81       	ldd	r24, Z+2	; 0x02
    18a2:	93 81       	ldd	r25, Z+3	; 0x03
    18a4:	20 e0       	ldi	r18, 0x00	; 0
    18a6:	3f ef       	ldi	r19, 0xFF	; 255
    18a8:	4f e7       	ldi	r20, 0x7F	; 127
    18aa:	57 e4       	ldi	r21, 0x47	; 71
    18ac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    18b0:	18 16       	cp	r1, r24
    18b2:	0c f0       	brlt	.+2      	; 0x18b6 <main+0x684>
    18b4:	43 c0       	rjmp	.+134    	; 0x193c <main+0x70a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    18b6:	fe 01       	movw	r30, r28
    18b8:	ef 53       	subi	r30, 0x3F	; 63
    18ba:	ff 4f       	sbci	r31, 0xFF	; 255
    18bc:	60 81       	ld	r22, Z
    18be:	71 81       	ldd	r23, Z+1	; 0x01
    18c0:	82 81       	ldd	r24, Z+2	; 0x02
    18c2:	93 81       	ldd	r25, Z+3	; 0x03
    18c4:	20 e0       	ldi	r18, 0x00	; 0
    18c6:	30 e0       	ldi	r19, 0x00	; 0
    18c8:	40 e2       	ldi	r20, 0x20	; 32
    18ca:	51 e4       	ldi	r21, 0x41	; 65
    18cc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    18d0:	dc 01       	movw	r26, r24
    18d2:	cb 01       	movw	r24, r22
    18d4:	8e 01       	movw	r16, r28
    18d6:	05 54       	subi	r16, 0x45	; 69
    18d8:	1f 4f       	sbci	r17, 0xFF	; 255
    18da:	bc 01       	movw	r22, r24
    18dc:	cd 01       	movw	r24, r26
    18de:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18e2:	dc 01       	movw	r26, r24
    18e4:	cb 01       	movw	r24, r22
    18e6:	f8 01       	movw	r30, r16
    18e8:	91 83       	std	Z+1, r25	; 0x01
    18ea:	80 83       	st	Z, r24
    18ec:	1f c0       	rjmp	.+62     	; 0x192c <main+0x6fa>
    18ee:	fe 01       	movw	r30, r28
    18f0:	e7 54       	subi	r30, 0x47	; 71
    18f2:	ff 4f       	sbci	r31, 0xFF	; 255
    18f4:	88 ec       	ldi	r24, 0xC8	; 200
    18f6:	90 e0       	ldi	r25, 0x00	; 0
    18f8:	91 83       	std	Z+1, r25	; 0x01
    18fa:	80 83       	st	Z, r24
    18fc:	fe 01       	movw	r30, r28
    18fe:	e7 54       	subi	r30, 0x47	; 71
    1900:	ff 4f       	sbci	r31, 0xFF	; 255
    1902:	80 81       	ld	r24, Z
    1904:	91 81       	ldd	r25, Z+1	; 0x01
    1906:	01 97       	sbiw	r24, 0x01	; 1
    1908:	f1 f7       	brne	.-4      	; 0x1906 <main+0x6d4>
    190a:	fe 01       	movw	r30, r28
    190c:	e7 54       	subi	r30, 0x47	; 71
    190e:	ff 4f       	sbci	r31, 0xFF	; 255
    1910:	91 83       	std	Z+1, r25	; 0x01
    1912:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1914:	de 01       	movw	r26, r28
    1916:	a5 54       	subi	r26, 0x45	; 69
    1918:	bf 4f       	sbci	r27, 0xFF	; 255
    191a:	fe 01       	movw	r30, r28
    191c:	e5 54       	subi	r30, 0x45	; 69
    191e:	ff 4f       	sbci	r31, 0xFF	; 255
    1920:	80 81       	ld	r24, Z
    1922:	91 81       	ldd	r25, Z+1	; 0x01
    1924:	01 97       	sbiw	r24, 0x01	; 1
    1926:	11 96       	adiw	r26, 0x01	; 1
    1928:	9c 93       	st	X, r25
    192a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    192c:	fe 01       	movw	r30, r28
    192e:	e5 54       	subi	r30, 0x45	; 69
    1930:	ff 4f       	sbci	r31, 0xFF	; 255
    1932:	80 81       	ld	r24, Z
    1934:	91 81       	ldd	r25, Z+1	; 0x01
    1936:	00 97       	sbiw	r24, 0x00	; 0
    1938:	d1 f6       	brne	.-76     	; 0x18ee <main+0x6bc>
    193a:	28 c0       	rjmp	.+80     	; 0x198c <main+0x75a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    193c:	8e 01       	movw	r16, r28
    193e:	05 54       	subi	r16, 0x45	; 69
    1940:	1f 4f       	sbci	r17, 0xFF	; 255
    1942:	fe 01       	movw	r30, r28
    1944:	e3 54       	subi	r30, 0x43	; 67
    1946:	ff 4f       	sbci	r31, 0xFF	; 255
    1948:	60 81       	ld	r22, Z
    194a:	71 81       	ldd	r23, Z+1	; 0x01
    194c:	82 81       	ldd	r24, Z+2	; 0x02
    194e:	93 81       	ldd	r25, Z+3	; 0x03
    1950:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1954:	dc 01       	movw	r26, r24
    1956:	cb 01       	movw	r24, r22
    1958:	f8 01       	movw	r30, r16
    195a:	91 83       	std	Z+1, r25	; 0x01
    195c:	80 83       	st	Z, r24
    195e:	de 01       	movw	r26, r28
    1960:	a9 54       	subi	r26, 0x49	; 73
    1962:	bf 4f       	sbci	r27, 0xFF	; 255
    1964:	fe 01       	movw	r30, r28
    1966:	e5 54       	subi	r30, 0x45	; 69
    1968:	ff 4f       	sbci	r31, 0xFF	; 255
    196a:	80 81       	ld	r24, Z
    196c:	91 81       	ldd	r25, Z+1	; 0x01
    196e:	11 96       	adiw	r26, 0x01	; 1
    1970:	9c 93       	st	X, r25
    1972:	8e 93       	st	-X, r24
    1974:	fe 01       	movw	r30, r28
    1976:	e9 54       	subi	r30, 0x49	; 73
    1978:	ff 4f       	sbci	r31, 0xFF	; 255
    197a:	80 81       	ld	r24, Z
    197c:	91 81       	ldd	r25, Z+1	; 0x01
    197e:	01 97       	sbiw	r24, 0x01	; 1
    1980:	f1 f7       	brne	.-4      	; 0x197e <main+0x74c>
    1982:	fe 01       	movw	r30, r28
    1984:	e9 54       	subi	r30, 0x49	; 73
    1986:	ff 4f       	sbci	r31, 0xFF	; 255
    1988:	91 83       	std	Z+1, r25	; 0x01
    198a:	80 83       	st	Z, r24
			_delay_ms(500);
			if(CounterUp==10)
    198c:	fe 01       	movw	r30, r28
    198e:	ee 50       	subi	r30, 0x0E	; 14
    1990:	ff 4f       	sbci	r31, 0xFF	; 255
    1992:	80 81       	ld	r24, Z
    1994:	8a 30       	cpi	r24, 0x0A	; 10
    1996:	21 f4       	brne	.+8      	; 0x19a0 <main+0x76e>
			{
				CounterUp=0;
    1998:	fe 01       	movw	r30, r28
    199a:	ee 50       	subi	r30, 0x0E	; 14
    199c:	ff 4f       	sbci	r31, 0xFF	; 255
    199e:	10 82       	st	Z, r1
			}

		}

		if(GetBit(PINA_REG,PIN1)&&(!GetBit(PINA_REG,PIN2))&&GetBit(PINA_REG,PIN5)&&(!GetBit(PINA_REG,PIN0)))
    19a0:	e9 e3       	ldi	r30, 0x39	; 57
    19a2:	f0 e0       	ldi	r31, 0x00	; 0
    19a4:	80 81       	ld	r24, Z
    19a6:	86 95       	lsr	r24
    19a8:	88 2f       	mov	r24, r24
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	81 70       	andi	r24, 0x01	; 1
    19ae:	90 70       	andi	r25, 0x00	; 0
    19b0:	88 23       	and	r24, r24
    19b2:	09 f4       	brne	.+2      	; 0x19b6 <main+0x784>
    19b4:	15 c1       	rjmp	.+554    	; 0x1be0 <main+0x9ae>
    19b6:	e9 e3       	ldi	r30, 0x39	; 57
    19b8:	f0 e0       	ldi	r31, 0x00	; 0
    19ba:	80 81       	ld	r24, Z
    19bc:	86 95       	lsr	r24
    19be:	86 95       	lsr	r24
    19c0:	88 2f       	mov	r24, r24
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	81 70       	andi	r24, 0x01	; 1
    19c6:	90 70       	andi	r25, 0x00	; 0
    19c8:	00 97       	sbiw	r24, 0x00	; 0
    19ca:	09 f0       	breq	.+2      	; 0x19ce <main+0x79c>
    19cc:	09 c1       	rjmp	.+530    	; 0x1be0 <main+0x9ae>
    19ce:	e9 e3       	ldi	r30, 0x39	; 57
    19d0:	f0 e0       	ldi	r31, 0x00	; 0
    19d2:	80 81       	ld	r24, Z
    19d4:	82 95       	swap	r24
    19d6:	86 95       	lsr	r24
    19d8:	87 70       	andi	r24, 0x07	; 7
    19da:	88 2f       	mov	r24, r24
    19dc:	90 e0       	ldi	r25, 0x00	; 0
    19de:	81 70       	andi	r24, 0x01	; 1
    19e0:	90 70       	andi	r25, 0x00	; 0
    19e2:	88 23       	and	r24, r24
    19e4:	09 f4       	brne	.+2      	; 0x19e8 <main+0x7b6>
    19e6:	fc c0       	rjmp	.+504    	; 0x1be0 <main+0x9ae>
    19e8:	e9 e3       	ldi	r30, 0x39	; 57
    19ea:	f0 e0       	ldi	r31, 0x00	; 0
    19ec:	80 81       	ld	r24, Z
    19ee:	88 2f       	mov	r24, r24
    19f0:	90 e0       	ldi	r25, 0x00	; 0
    19f2:	81 70       	andi	r24, 0x01	; 1
    19f4:	90 70       	andi	r25, 0x00	; 0
    19f6:	00 97       	sbiw	r24, 0x00	; 0
    19f8:	09 f0       	breq	.+2      	; 0x19fc <main+0x7ca>
    19fa:	f2 c0       	rjmp	.+484    	; 0x1be0 <main+0x9ae>
			{
			SetBit(PORTB_REG,PIN0);
    19fc:	a8 e3       	ldi	r26, 0x38	; 56
    19fe:	b0 e0       	ldi	r27, 0x00	; 0
    1a00:	e8 e3       	ldi	r30, 0x38	; 56
    1a02:	f0 e0       	ldi	r31, 0x00	; 0
    1a04:	80 81       	ld	r24, Z
    1a06:	81 60       	ori	r24, 0x01	; 1
    1a08:	8c 93       	st	X, r24
			CounterDown--;
    1a0a:	de 01       	movw	r26, r28
    1a0c:	af 50       	subi	r26, 0x0F	; 15
    1a0e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a10:	fe 01       	movw	r30, r28
    1a12:	ef 50       	subi	r30, 0x0F	; 15
    1a14:	ff 4f       	sbci	r31, 0xFF	; 255
    1a16:	80 81       	ld	r24, Z
    1a18:	81 50       	subi	r24, 0x01	; 1
    1a1a:	8c 93       	st	X, r24
					ClearBit(PORTD_REG,PIN1);
    1a1c:	a2 e3       	ldi	r26, 0x32	; 50
    1a1e:	b0 e0       	ldi	r27, 0x00	; 0
    1a20:	e2 e3       	ldi	r30, 0x32	; 50
    1a22:	f0 e0       	ldi	r31, 0x00	; 0
    1a24:	80 81       	ld	r24, Z
    1a26:	8d 7f       	andi	r24, 0xFD	; 253
    1a28:	8c 93       	st	X, r24
					SetBit(PORTD_REG,PIN0);
    1a2a:	a2 e3       	ldi	r26, 0x32	; 50
    1a2c:	b0 e0       	ldi	r27, 0x00	; 0
    1a2e:	e2 e3       	ldi	r30, 0x32	; 50
    1a30:	f0 e0       	ldi	r31, 0x00	; 0
    1a32:	80 81       	ld	r24, Z
    1a34:	81 60       	ori	r24, 0x01	; 1
    1a36:	8c 93       	st	X, r24
					mm=DIO_U8SetPortVal(PORTC,arr[CounterDown]);
    1a38:	fe 01       	movw	r30, r28
    1a3a:	ef 50       	subi	r30, 0x0F	; 15
    1a3c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a3e:	80 81       	ld	r24, Z
    1a40:	28 2f       	mov	r18, r24
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	ce 01       	movw	r24, r28
    1a46:	8c 50       	subi	r24, 0x0C	; 12
    1a48:	9f 4f       	sbci	r25, 0xFF	; 255
    1a4a:	fc 01       	movw	r30, r24
    1a4c:	e2 0f       	add	r30, r18
    1a4e:	f3 1f       	adc	r31, r19
    1a50:	90 81       	ld	r25, Z
    1a52:	82 e0       	ldi	r24, 0x02	; 2
    1a54:	69 2f       	mov	r22, r25
    1a56:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    1a5a:	fe 01       	movw	r30, r28
    1a5c:	ed 50       	subi	r30, 0x0D	; 13
    1a5e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a60:	80 83       	st	Z, r24
    1a62:	fe 01       	movw	r30, r28
    1a64:	ed 54       	subi	r30, 0x4D	; 77
    1a66:	ff 4f       	sbci	r31, 0xFF	; 255
    1a68:	80 e0       	ldi	r24, 0x00	; 0
    1a6a:	90 e0       	ldi	r25, 0x00	; 0
    1a6c:	aa ef       	ldi	r26, 0xFA	; 250
    1a6e:	b3 e4       	ldi	r27, 0x43	; 67
    1a70:	80 83       	st	Z, r24
    1a72:	91 83       	std	Z+1, r25	; 0x01
    1a74:	a2 83       	std	Z+2, r26	; 0x02
    1a76:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1a78:	8e 01       	movw	r16, r28
    1a7a:	01 55       	subi	r16, 0x51	; 81
    1a7c:	1f 4f       	sbci	r17, 0xFF	; 255
    1a7e:	fe 01       	movw	r30, r28
    1a80:	ed 54       	subi	r30, 0x4D	; 77
    1a82:	ff 4f       	sbci	r31, 0xFF	; 255
    1a84:	60 81       	ld	r22, Z
    1a86:	71 81       	ldd	r23, Z+1	; 0x01
    1a88:	82 81       	ldd	r24, Z+2	; 0x02
    1a8a:	93 81       	ldd	r25, Z+3	; 0x03
    1a8c:	20 e0       	ldi	r18, 0x00	; 0
    1a8e:	30 e0       	ldi	r19, 0x00	; 0
    1a90:	4a ef       	ldi	r20, 0xFA	; 250
    1a92:	54 e4       	ldi	r21, 0x44	; 68
    1a94:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1a98:	dc 01       	movw	r26, r24
    1a9a:	cb 01       	movw	r24, r22
    1a9c:	f8 01       	movw	r30, r16
    1a9e:	80 83       	st	Z, r24
    1aa0:	91 83       	std	Z+1, r25	; 0x01
    1aa2:	a2 83       	std	Z+2, r26	; 0x02
    1aa4:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1aa6:	fe 01       	movw	r30, r28
    1aa8:	e1 55       	subi	r30, 0x51	; 81
    1aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    1aac:	60 81       	ld	r22, Z
    1aae:	71 81       	ldd	r23, Z+1	; 0x01
    1ab0:	82 81       	ldd	r24, Z+2	; 0x02
    1ab2:	93 81       	ldd	r25, Z+3	; 0x03
    1ab4:	20 e0       	ldi	r18, 0x00	; 0
    1ab6:	30 e0       	ldi	r19, 0x00	; 0
    1ab8:	40 e8       	ldi	r20, 0x80	; 128
    1aba:	5f e3       	ldi	r21, 0x3F	; 63
    1abc:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ac0:	88 23       	and	r24, r24
    1ac2:	44 f4       	brge	.+16     	; 0x1ad4 <main+0x8a2>
		__ticks = 1;
    1ac4:	fe 01       	movw	r30, r28
    1ac6:	e3 55       	subi	r30, 0x53	; 83
    1ac8:	ff 4f       	sbci	r31, 0xFF	; 255
    1aca:	81 e0       	ldi	r24, 0x01	; 1
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	91 83       	std	Z+1, r25	; 0x01
    1ad0:	80 83       	st	Z, r24
    1ad2:	64 c0       	rjmp	.+200    	; 0x1b9c <main+0x96a>
	else if (__tmp > 65535)
    1ad4:	fe 01       	movw	r30, r28
    1ad6:	e1 55       	subi	r30, 0x51	; 81
    1ad8:	ff 4f       	sbci	r31, 0xFF	; 255
    1ada:	60 81       	ld	r22, Z
    1adc:	71 81       	ldd	r23, Z+1	; 0x01
    1ade:	82 81       	ldd	r24, Z+2	; 0x02
    1ae0:	93 81       	ldd	r25, Z+3	; 0x03
    1ae2:	20 e0       	ldi	r18, 0x00	; 0
    1ae4:	3f ef       	ldi	r19, 0xFF	; 255
    1ae6:	4f e7       	ldi	r20, 0x7F	; 127
    1ae8:	57 e4       	ldi	r21, 0x47	; 71
    1aea:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1aee:	18 16       	cp	r1, r24
    1af0:	0c f0       	brlt	.+2      	; 0x1af4 <main+0x8c2>
    1af2:	43 c0       	rjmp	.+134    	; 0x1b7a <main+0x948>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1af4:	fe 01       	movw	r30, r28
    1af6:	ed 54       	subi	r30, 0x4D	; 77
    1af8:	ff 4f       	sbci	r31, 0xFF	; 255
    1afa:	60 81       	ld	r22, Z
    1afc:	71 81       	ldd	r23, Z+1	; 0x01
    1afe:	82 81       	ldd	r24, Z+2	; 0x02
    1b00:	93 81       	ldd	r25, Z+3	; 0x03
    1b02:	20 e0       	ldi	r18, 0x00	; 0
    1b04:	30 e0       	ldi	r19, 0x00	; 0
    1b06:	40 e2       	ldi	r20, 0x20	; 32
    1b08:	51 e4       	ldi	r21, 0x41	; 65
    1b0a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b0e:	dc 01       	movw	r26, r24
    1b10:	cb 01       	movw	r24, r22
    1b12:	8e 01       	movw	r16, r28
    1b14:	03 55       	subi	r16, 0x53	; 83
    1b16:	1f 4f       	sbci	r17, 0xFF	; 255
    1b18:	bc 01       	movw	r22, r24
    1b1a:	cd 01       	movw	r24, r26
    1b1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b20:	dc 01       	movw	r26, r24
    1b22:	cb 01       	movw	r24, r22
    1b24:	f8 01       	movw	r30, r16
    1b26:	91 83       	std	Z+1, r25	; 0x01
    1b28:	80 83       	st	Z, r24
    1b2a:	1f c0       	rjmp	.+62     	; 0x1b6a <main+0x938>
    1b2c:	fe 01       	movw	r30, r28
    1b2e:	e5 55       	subi	r30, 0x55	; 85
    1b30:	ff 4f       	sbci	r31, 0xFF	; 255
    1b32:	88 ec       	ldi	r24, 0xC8	; 200
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	91 83       	std	Z+1, r25	; 0x01
    1b38:	80 83       	st	Z, r24
    1b3a:	fe 01       	movw	r30, r28
    1b3c:	e5 55       	subi	r30, 0x55	; 85
    1b3e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b40:	80 81       	ld	r24, Z
    1b42:	91 81       	ldd	r25, Z+1	; 0x01
    1b44:	01 97       	sbiw	r24, 0x01	; 1
    1b46:	f1 f7       	brne	.-4      	; 0x1b44 <main+0x912>
    1b48:	fe 01       	movw	r30, r28
    1b4a:	e5 55       	subi	r30, 0x55	; 85
    1b4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b4e:	91 83       	std	Z+1, r25	; 0x01
    1b50:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b52:	de 01       	movw	r26, r28
    1b54:	a3 55       	subi	r26, 0x53	; 83
    1b56:	bf 4f       	sbci	r27, 0xFF	; 255
    1b58:	fe 01       	movw	r30, r28
    1b5a:	e3 55       	subi	r30, 0x53	; 83
    1b5c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b5e:	80 81       	ld	r24, Z
    1b60:	91 81       	ldd	r25, Z+1	; 0x01
    1b62:	01 97       	sbiw	r24, 0x01	; 1
    1b64:	11 96       	adiw	r26, 0x01	; 1
    1b66:	9c 93       	st	X, r25
    1b68:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1b6a:	fe 01       	movw	r30, r28
    1b6c:	e3 55       	subi	r30, 0x53	; 83
    1b6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1b70:	80 81       	ld	r24, Z
    1b72:	91 81       	ldd	r25, Z+1	; 0x01
    1b74:	00 97       	sbiw	r24, 0x00	; 0
    1b76:	d1 f6       	brne	.-76     	; 0x1b2c <main+0x8fa>
    1b78:	28 c0       	rjmp	.+80     	; 0x1bca <main+0x998>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1b7a:	8e 01       	movw	r16, r28
    1b7c:	03 55       	subi	r16, 0x53	; 83
    1b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    1b80:	fe 01       	movw	r30, r28
    1b82:	e1 55       	subi	r30, 0x51	; 81
    1b84:	ff 4f       	sbci	r31, 0xFF	; 255
    1b86:	60 81       	ld	r22, Z
    1b88:	71 81       	ldd	r23, Z+1	; 0x01
    1b8a:	82 81       	ldd	r24, Z+2	; 0x02
    1b8c:	93 81       	ldd	r25, Z+3	; 0x03
    1b8e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b92:	dc 01       	movw	r26, r24
    1b94:	cb 01       	movw	r24, r22
    1b96:	f8 01       	movw	r30, r16
    1b98:	91 83       	std	Z+1, r25	; 0x01
    1b9a:	80 83       	st	Z, r24
    1b9c:	de 01       	movw	r26, r28
    1b9e:	a7 55       	subi	r26, 0x57	; 87
    1ba0:	bf 4f       	sbci	r27, 0xFF	; 255
    1ba2:	fe 01       	movw	r30, r28
    1ba4:	e3 55       	subi	r30, 0x53	; 83
    1ba6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ba8:	80 81       	ld	r24, Z
    1baa:	91 81       	ldd	r25, Z+1	; 0x01
    1bac:	11 96       	adiw	r26, 0x01	; 1
    1bae:	9c 93       	st	X, r25
    1bb0:	8e 93       	st	-X, r24
    1bb2:	fe 01       	movw	r30, r28
    1bb4:	e7 55       	subi	r30, 0x57	; 87
    1bb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1bb8:	80 81       	ld	r24, Z
    1bba:	91 81       	ldd	r25, Z+1	; 0x01
    1bbc:	01 97       	sbiw	r24, 0x01	; 1
    1bbe:	f1 f7       	brne	.-4      	; 0x1bbc <main+0x98a>
    1bc0:	fe 01       	movw	r30, r28
    1bc2:	e7 55       	subi	r30, 0x57	; 87
    1bc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc6:	91 83       	std	Z+1, r25	; 0x01
    1bc8:	80 83       	st	Z, r24
					_delay_ms(500);
					if(CounterDown==0)
    1bca:	fe 01       	movw	r30, r28
    1bcc:	ef 50       	subi	r30, 0x0F	; 15
    1bce:	ff 4f       	sbci	r31, 0xFF	; 255
    1bd0:	80 81       	ld	r24, Z
    1bd2:	88 23       	and	r24, r24
    1bd4:	29 f4       	brne	.+10     	; 0x1be0 <main+0x9ae>
					{
						CounterDown=10;
    1bd6:	fe 01       	movw	r30, r28
    1bd8:	ef 50       	subi	r30, 0x0F	; 15
    1bda:	ff 4f       	sbci	r31, 0xFF	; 255
    1bdc:	8a e0       	ldi	r24, 0x0A	; 10
    1bde:	80 83       	st	Z, r24
			        }
			}

			if((GetBit(PINA_REG,PIN2)||(GetBit(PINA_REG,PIN2)&&GetBit(PINA_REG,PIN0))||(GetBit(PINA_REG,PIN2)&&GetBit(PINA_REG,PIN1)))&&GetBit(PINA_REG,PIN5))
    1be0:	e9 e3       	ldi	r30, 0x39	; 57
    1be2:	f0 e0       	ldi	r31, 0x00	; 0
    1be4:	80 81       	ld	r24, Z
    1be6:	86 95       	lsr	r24
    1be8:	86 95       	lsr	r24
    1bea:	88 2f       	mov	r24, r24
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	81 70       	andi	r24, 0x01	; 1
    1bf0:	90 70       	andi	r25, 0x00	; 0
    1bf2:	88 23       	and	r24, r24
    1bf4:	89 f5       	brne	.+98     	; 0x1c58 <main+0xa26>
    1bf6:	e9 e3       	ldi	r30, 0x39	; 57
    1bf8:	f0 e0       	ldi	r31, 0x00	; 0
    1bfa:	80 81       	ld	r24, Z
    1bfc:	86 95       	lsr	r24
    1bfe:	86 95       	lsr	r24
    1c00:	88 2f       	mov	r24, r24
    1c02:	90 e0       	ldi	r25, 0x00	; 0
    1c04:	81 70       	andi	r24, 0x01	; 1
    1c06:	90 70       	andi	r25, 0x00	; 0
    1c08:	98 2f       	mov	r25, r24
    1c0a:	81 e0       	ldi	r24, 0x01	; 1
    1c0c:	89 27       	eor	r24, r25
    1c0e:	88 23       	and	r24, r24
    1c10:	49 f4       	brne	.+18     	; 0x1c24 <main+0x9f2>
    1c12:	e9 e3       	ldi	r30, 0x39	; 57
    1c14:	f0 e0       	ldi	r31, 0x00	; 0
    1c16:	80 81       	ld	r24, Z
    1c18:	88 2f       	mov	r24, r24
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	81 70       	andi	r24, 0x01	; 1
    1c1e:	90 70       	andi	r25, 0x00	; 0
    1c20:	88 23       	and	r24, r24
    1c22:	d1 f4       	brne	.+52     	; 0x1c58 <main+0xa26>
    1c24:	e9 e3       	ldi	r30, 0x39	; 57
    1c26:	f0 e0       	ldi	r31, 0x00	; 0
    1c28:	80 81       	ld	r24, Z
    1c2a:	86 95       	lsr	r24
    1c2c:	86 95       	lsr	r24
    1c2e:	88 2f       	mov	r24, r24
    1c30:	90 e0       	ldi	r25, 0x00	; 0
    1c32:	81 70       	andi	r24, 0x01	; 1
    1c34:	90 70       	andi	r25, 0x00	; 0
    1c36:	98 2f       	mov	r25, r24
    1c38:	81 e0       	ldi	r24, 0x01	; 1
    1c3a:	89 27       	eor	r24, r25
    1c3c:	88 23       	and	r24, r24
    1c3e:	09 f0       	breq	.+2      	; 0x1c42 <main+0xa10>
    1c40:	13 c2       	rjmp	.+1062   	; 0x2068 <main+0xe36>
    1c42:	e9 e3       	ldi	r30, 0x39	; 57
    1c44:	f0 e0       	ldi	r31, 0x00	; 0
    1c46:	80 81       	ld	r24, Z
    1c48:	86 95       	lsr	r24
    1c4a:	88 2f       	mov	r24, r24
    1c4c:	90 e0       	ldi	r25, 0x00	; 0
    1c4e:	81 70       	andi	r24, 0x01	; 1
    1c50:	90 70       	andi	r25, 0x00	; 0
    1c52:	88 23       	and	r24, r24
    1c54:	09 f4       	brne	.+2      	; 0x1c58 <main+0xa26>
    1c56:	08 c2       	rjmp	.+1040   	; 0x2068 <main+0xe36>
    1c58:	e9 e3       	ldi	r30, 0x39	; 57
    1c5a:	f0 e0       	ldi	r31, 0x00	; 0
    1c5c:	80 81       	ld	r24, Z
    1c5e:	82 95       	swap	r24
    1c60:	86 95       	lsr	r24
    1c62:	87 70       	andi	r24, 0x07	; 7
    1c64:	88 2f       	mov	r24, r24
    1c66:	90 e0       	ldi	r25, 0x00	; 0
    1c68:	81 70       	andi	r24, 0x01	; 1
    1c6a:	90 70       	andi	r25, 0x00	; 0
    1c6c:	88 23       	and	r24, r24
    1c6e:	09 f4       	brne	.+2      	; 0x1c72 <main+0xa40>
    1c70:	fb c1       	rjmp	.+1014   	; 0x2068 <main+0xe36>
			{

				for(int j=0 ;j<10;j++)
    1c72:	fe 01       	movw	r30, r28
    1c74:	e3 51       	subi	r30, 0x13	; 19
    1c76:	ff 4f       	sbci	r31, 0xFF	; 255
    1c78:	11 82       	std	Z+1, r1	; 0x01
    1c7a:	10 82       	st	Z, r1
    1c7c:	ec c1       	rjmp	.+984    	; 0x2056 <main+0xe24>
				{


					for(int i=0 ;i<10;i++)
    1c7e:	fe 01       	movw	r30, r28
    1c80:	e5 51       	subi	r30, 0x15	; 21
    1c82:	ff 4f       	sbci	r31, 0xFF	; 255
    1c84:	11 82       	std	Z+1, r1	; 0x01
    1c86:	10 82       	st	Z, r1
    1c88:	d1 c1       	rjmp	.+930    	; 0x202c <main+0xdfa>
					{
								for(int k=0;k<30;k++)
    1c8a:	fe 01       	movw	r30, r28
    1c8c:	e7 51       	subi	r30, 0x17	; 23
    1c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    1c90:	11 82       	std	Z+1, r1	; 0x01
    1c92:	10 82       	st	Z, r1
    1c94:	b6 c1       	rjmp	.+876    	; 0x2002 <main+0xdd0>
									{
									ClearBit(PORTD_REG,PIN1);
    1c96:	a2 e3       	ldi	r26, 0x32	; 50
    1c98:	b0 e0       	ldi	r27, 0x00	; 0
    1c9a:	e2 e3       	ldi	r30, 0x32	; 50
    1c9c:	f0 e0       	ldi	r31, 0x00	; 0
    1c9e:	80 81       	ld	r24, Z
    1ca0:	8d 7f       	andi	r24, 0xFD	; 253
    1ca2:	8c 93       	st	X, r24
									SetBit(PORTD_REG,PIN0);
    1ca4:	a2 e3       	ldi	r26, 0x32	; 50
    1ca6:	b0 e0       	ldi	r27, 0x00	; 0
    1ca8:	e2 e3       	ldi	r30, 0x32	; 50
    1caa:	f0 e0       	ldi	r31, 0x00	; 0
    1cac:	80 81       	ld	r24, Z
    1cae:	81 60       	ori	r24, 0x01	; 1
    1cb0:	8c 93       	st	X, r24
									mm=DIO_U8SetPortVal(PORTC,arr[j]);
    1cb2:	fe 01       	movw	r30, r28
    1cb4:	e3 51       	subi	r30, 0x13	; 19
    1cb6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cb8:	20 81       	ld	r18, Z
    1cba:	31 81       	ldd	r19, Z+1	; 0x01
    1cbc:	ce 01       	movw	r24, r28
    1cbe:	8c 50       	subi	r24, 0x0C	; 12
    1cc0:	9f 4f       	sbci	r25, 0xFF	; 255
    1cc2:	fc 01       	movw	r30, r24
    1cc4:	e2 0f       	add	r30, r18
    1cc6:	f3 1f       	adc	r31, r19
    1cc8:	90 81       	ld	r25, Z
    1cca:	82 e0       	ldi	r24, 0x02	; 2
    1ccc:	69 2f       	mov	r22, r25
    1cce:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    1cd2:	fe 01       	movw	r30, r28
    1cd4:	ed 50       	subi	r30, 0x0D	; 13
    1cd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1cd8:	80 83       	st	Z, r24
    1cda:	fe 01       	movw	r30, r28
    1cdc:	eb 55       	subi	r30, 0x5B	; 91
    1cde:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce0:	80 e0       	ldi	r24, 0x00	; 0
    1ce2:	90 e0       	ldi	r25, 0x00	; 0
    1ce4:	a0 e2       	ldi	r26, 0x20	; 32
    1ce6:	b1 e4       	ldi	r27, 0x41	; 65
    1ce8:	80 83       	st	Z, r24
    1cea:	91 83       	std	Z+1, r25	; 0x01
    1cec:	a2 83       	std	Z+2, r26	; 0x02
    1cee:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1cf0:	8e 01       	movw	r16, r28
    1cf2:	0f 55       	subi	r16, 0x5F	; 95
    1cf4:	1f 4f       	sbci	r17, 0xFF	; 255
    1cf6:	fe 01       	movw	r30, r28
    1cf8:	eb 55       	subi	r30, 0x5B	; 91
    1cfa:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfc:	60 81       	ld	r22, Z
    1cfe:	71 81       	ldd	r23, Z+1	; 0x01
    1d00:	82 81       	ldd	r24, Z+2	; 0x02
    1d02:	93 81       	ldd	r25, Z+3	; 0x03
    1d04:	20 e0       	ldi	r18, 0x00	; 0
    1d06:	30 e0       	ldi	r19, 0x00	; 0
    1d08:	4a ef       	ldi	r20, 0xFA	; 250
    1d0a:	54 e4       	ldi	r21, 0x44	; 68
    1d0c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d10:	dc 01       	movw	r26, r24
    1d12:	cb 01       	movw	r24, r22
    1d14:	f8 01       	movw	r30, r16
    1d16:	80 83       	st	Z, r24
    1d18:	91 83       	std	Z+1, r25	; 0x01
    1d1a:	a2 83       	std	Z+2, r26	; 0x02
    1d1c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1d1e:	fe 01       	movw	r30, r28
    1d20:	ef 55       	subi	r30, 0x5F	; 95
    1d22:	ff 4f       	sbci	r31, 0xFF	; 255
    1d24:	60 81       	ld	r22, Z
    1d26:	71 81       	ldd	r23, Z+1	; 0x01
    1d28:	82 81       	ldd	r24, Z+2	; 0x02
    1d2a:	93 81       	ldd	r25, Z+3	; 0x03
    1d2c:	20 e0       	ldi	r18, 0x00	; 0
    1d2e:	30 e0       	ldi	r19, 0x00	; 0
    1d30:	40 e8       	ldi	r20, 0x80	; 128
    1d32:	5f e3       	ldi	r21, 0x3F	; 63
    1d34:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1d38:	88 23       	and	r24, r24
    1d3a:	44 f4       	brge	.+16     	; 0x1d4c <main+0xb1a>
		__ticks = 1;
    1d3c:	fe 01       	movw	r30, r28
    1d3e:	e1 56       	subi	r30, 0x61	; 97
    1d40:	ff 4f       	sbci	r31, 0xFF	; 255
    1d42:	81 e0       	ldi	r24, 0x01	; 1
    1d44:	90 e0       	ldi	r25, 0x00	; 0
    1d46:	91 83       	std	Z+1, r25	; 0x01
    1d48:	80 83       	st	Z, r24
    1d4a:	64 c0       	rjmp	.+200    	; 0x1e14 <main+0xbe2>
	else if (__tmp > 65535)
    1d4c:	fe 01       	movw	r30, r28
    1d4e:	ef 55       	subi	r30, 0x5F	; 95
    1d50:	ff 4f       	sbci	r31, 0xFF	; 255
    1d52:	60 81       	ld	r22, Z
    1d54:	71 81       	ldd	r23, Z+1	; 0x01
    1d56:	82 81       	ldd	r24, Z+2	; 0x02
    1d58:	93 81       	ldd	r25, Z+3	; 0x03
    1d5a:	20 e0       	ldi	r18, 0x00	; 0
    1d5c:	3f ef       	ldi	r19, 0xFF	; 255
    1d5e:	4f e7       	ldi	r20, 0x7F	; 127
    1d60:	57 e4       	ldi	r21, 0x47	; 71
    1d62:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1d66:	18 16       	cp	r1, r24
    1d68:	0c f0       	brlt	.+2      	; 0x1d6c <main+0xb3a>
    1d6a:	43 c0       	rjmp	.+134    	; 0x1df2 <main+0xbc0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1d6c:	fe 01       	movw	r30, r28
    1d6e:	eb 55       	subi	r30, 0x5B	; 91
    1d70:	ff 4f       	sbci	r31, 0xFF	; 255
    1d72:	60 81       	ld	r22, Z
    1d74:	71 81       	ldd	r23, Z+1	; 0x01
    1d76:	82 81       	ldd	r24, Z+2	; 0x02
    1d78:	93 81       	ldd	r25, Z+3	; 0x03
    1d7a:	20 e0       	ldi	r18, 0x00	; 0
    1d7c:	30 e0       	ldi	r19, 0x00	; 0
    1d7e:	40 e2       	ldi	r20, 0x20	; 32
    1d80:	51 e4       	ldi	r21, 0x41	; 65
    1d82:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1d86:	dc 01       	movw	r26, r24
    1d88:	cb 01       	movw	r24, r22
    1d8a:	8e 01       	movw	r16, r28
    1d8c:	01 56       	subi	r16, 0x61	; 97
    1d8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d90:	bc 01       	movw	r22, r24
    1d92:	cd 01       	movw	r24, r26
    1d94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d98:	dc 01       	movw	r26, r24
    1d9a:	cb 01       	movw	r24, r22
    1d9c:	f8 01       	movw	r30, r16
    1d9e:	91 83       	std	Z+1, r25	; 0x01
    1da0:	80 83       	st	Z, r24
    1da2:	1f c0       	rjmp	.+62     	; 0x1de2 <main+0xbb0>
    1da4:	fe 01       	movw	r30, r28
    1da6:	e3 56       	subi	r30, 0x63	; 99
    1da8:	ff 4f       	sbci	r31, 0xFF	; 255
    1daa:	88 ec       	ldi	r24, 0xC8	; 200
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	91 83       	std	Z+1, r25	; 0x01
    1db0:	80 83       	st	Z, r24
    1db2:	fe 01       	movw	r30, r28
    1db4:	e3 56       	subi	r30, 0x63	; 99
    1db6:	ff 4f       	sbci	r31, 0xFF	; 255
    1db8:	80 81       	ld	r24, Z
    1dba:	91 81       	ldd	r25, Z+1	; 0x01
    1dbc:	01 97       	sbiw	r24, 0x01	; 1
    1dbe:	f1 f7       	brne	.-4      	; 0x1dbc <main+0xb8a>
    1dc0:	fe 01       	movw	r30, r28
    1dc2:	e3 56       	subi	r30, 0x63	; 99
    1dc4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dc6:	91 83       	std	Z+1, r25	; 0x01
    1dc8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1dca:	de 01       	movw	r26, r28
    1dcc:	a1 56       	subi	r26, 0x61	; 97
    1dce:	bf 4f       	sbci	r27, 0xFF	; 255
    1dd0:	fe 01       	movw	r30, r28
    1dd2:	e1 56       	subi	r30, 0x61	; 97
    1dd4:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd6:	80 81       	ld	r24, Z
    1dd8:	91 81       	ldd	r25, Z+1	; 0x01
    1dda:	01 97       	sbiw	r24, 0x01	; 1
    1ddc:	11 96       	adiw	r26, 0x01	; 1
    1dde:	9c 93       	st	X, r25
    1de0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1de2:	fe 01       	movw	r30, r28
    1de4:	e1 56       	subi	r30, 0x61	; 97
    1de6:	ff 4f       	sbci	r31, 0xFF	; 255
    1de8:	80 81       	ld	r24, Z
    1dea:	91 81       	ldd	r25, Z+1	; 0x01
    1dec:	00 97       	sbiw	r24, 0x00	; 0
    1dee:	d1 f6       	brne	.-76     	; 0x1da4 <main+0xb72>
    1df0:	27 c0       	rjmp	.+78     	; 0x1e40 <main+0xc0e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1df2:	8e 01       	movw	r16, r28
    1df4:	01 56       	subi	r16, 0x61	; 97
    1df6:	1f 4f       	sbci	r17, 0xFF	; 255
    1df8:	fe 01       	movw	r30, r28
    1dfa:	ef 55       	subi	r30, 0x5F	; 95
    1dfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1dfe:	60 81       	ld	r22, Z
    1e00:	71 81       	ldd	r23, Z+1	; 0x01
    1e02:	82 81       	ldd	r24, Z+2	; 0x02
    1e04:	93 81       	ldd	r25, Z+3	; 0x03
    1e06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e0a:	dc 01       	movw	r26, r24
    1e0c:	cb 01       	movw	r24, r22
    1e0e:	f8 01       	movw	r30, r16
    1e10:	91 83       	std	Z+1, r25	; 0x01
    1e12:	80 83       	st	Z, r24
    1e14:	de 01       	movw	r26, r28
    1e16:	a5 56       	subi	r26, 0x65	; 101
    1e18:	bf 4f       	sbci	r27, 0xFF	; 255
    1e1a:	fe 01       	movw	r30, r28
    1e1c:	e1 56       	subi	r30, 0x61	; 97
    1e1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1e20:	80 81       	ld	r24, Z
    1e22:	91 81       	ldd	r25, Z+1	; 0x01
    1e24:	8d 93       	st	X+, r24
    1e26:	9c 93       	st	X, r25
    1e28:	fe 01       	movw	r30, r28
    1e2a:	e5 56       	subi	r30, 0x65	; 101
    1e2c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e2e:	80 81       	ld	r24, Z
    1e30:	91 81       	ldd	r25, Z+1	; 0x01
    1e32:	01 97       	sbiw	r24, 0x01	; 1
    1e34:	f1 f7       	brne	.-4      	; 0x1e32 <main+0xc00>
    1e36:	fe 01       	movw	r30, r28
    1e38:	e5 56       	subi	r30, 0x65	; 101
    1e3a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e3c:	91 83       	std	Z+1, r25	; 0x01
    1e3e:	80 83       	st	Z, r24
									_delay_ms(10);
									ClearBit(PORTD_REG,PIN0);
    1e40:	a2 e3       	ldi	r26, 0x32	; 50
    1e42:	b0 e0       	ldi	r27, 0x00	; 0
    1e44:	e2 e3       	ldi	r30, 0x32	; 50
    1e46:	f0 e0       	ldi	r31, 0x00	; 0
    1e48:	80 81       	ld	r24, Z
    1e4a:	8e 7f       	andi	r24, 0xFE	; 254
    1e4c:	8c 93       	st	X, r24
									SetBit(PORTD_REG,PIN1);
    1e4e:	a2 e3       	ldi	r26, 0x32	; 50
    1e50:	b0 e0       	ldi	r27, 0x00	; 0
    1e52:	e2 e3       	ldi	r30, 0x32	; 50
    1e54:	f0 e0       	ldi	r31, 0x00	; 0
    1e56:	80 81       	ld	r24, Z
    1e58:	82 60       	ori	r24, 0x02	; 2
    1e5a:	8c 93       	st	X, r24
									mm=DIO_U8SetPortVal(PORTC,arr[i]);
    1e5c:	fe 01       	movw	r30, r28
    1e5e:	e5 51       	subi	r30, 0x15	; 21
    1e60:	ff 4f       	sbci	r31, 0xFF	; 255
    1e62:	20 81       	ld	r18, Z
    1e64:	31 81       	ldd	r19, Z+1	; 0x01
    1e66:	ce 01       	movw	r24, r28
    1e68:	8c 50       	subi	r24, 0x0C	; 12
    1e6a:	9f 4f       	sbci	r25, 0xFF	; 255
    1e6c:	fc 01       	movw	r30, r24
    1e6e:	e2 0f       	add	r30, r18
    1e70:	f3 1f       	adc	r31, r19
    1e72:	90 81       	ld	r25, Z
    1e74:	82 e0       	ldi	r24, 0x02	; 2
    1e76:	69 2f       	mov	r22, r25
    1e78:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    1e7c:	fe 01       	movw	r30, r28
    1e7e:	ed 50       	subi	r30, 0x0D	; 13
    1e80:	ff 4f       	sbci	r31, 0xFF	; 255
    1e82:	80 83       	st	Z, r24
    1e84:	fe 01       	movw	r30, r28
    1e86:	e9 56       	subi	r30, 0x69	; 105
    1e88:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8a:	80 e0       	ldi	r24, 0x00	; 0
    1e8c:	90 e0       	ldi	r25, 0x00	; 0
    1e8e:	a0 e2       	ldi	r26, 0x20	; 32
    1e90:	b1 e4       	ldi	r27, 0x41	; 65
    1e92:	80 83       	st	Z, r24
    1e94:	91 83       	std	Z+1, r25	; 0x01
    1e96:	a2 83       	std	Z+2, r26	; 0x02
    1e98:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1e9a:	8e 01       	movw	r16, r28
    1e9c:	0d 56       	subi	r16, 0x6D	; 109
    1e9e:	1f 4f       	sbci	r17, 0xFF	; 255
    1ea0:	fe 01       	movw	r30, r28
    1ea2:	e9 56       	subi	r30, 0x69	; 105
    1ea4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ea6:	60 81       	ld	r22, Z
    1ea8:	71 81       	ldd	r23, Z+1	; 0x01
    1eaa:	82 81       	ldd	r24, Z+2	; 0x02
    1eac:	93 81       	ldd	r25, Z+3	; 0x03
    1eae:	20 e0       	ldi	r18, 0x00	; 0
    1eb0:	30 e0       	ldi	r19, 0x00	; 0
    1eb2:	4a ef       	ldi	r20, 0xFA	; 250
    1eb4:	54 e4       	ldi	r21, 0x44	; 68
    1eb6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1eba:	dc 01       	movw	r26, r24
    1ebc:	cb 01       	movw	r24, r22
    1ebe:	f8 01       	movw	r30, r16
    1ec0:	80 83       	st	Z, r24
    1ec2:	91 83       	std	Z+1, r25	; 0x01
    1ec4:	a2 83       	std	Z+2, r26	; 0x02
    1ec6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ec8:	fe 01       	movw	r30, r28
    1eca:	ed 56       	subi	r30, 0x6D	; 109
    1ecc:	ff 4f       	sbci	r31, 0xFF	; 255
    1ece:	60 81       	ld	r22, Z
    1ed0:	71 81       	ldd	r23, Z+1	; 0x01
    1ed2:	82 81       	ldd	r24, Z+2	; 0x02
    1ed4:	93 81       	ldd	r25, Z+3	; 0x03
    1ed6:	20 e0       	ldi	r18, 0x00	; 0
    1ed8:	30 e0       	ldi	r19, 0x00	; 0
    1eda:	40 e8       	ldi	r20, 0x80	; 128
    1edc:	5f e3       	ldi	r21, 0x3F	; 63
    1ede:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1ee2:	88 23       	and	r24, r24
    1ee4:	44 f4       	brge	.+16     	; 0x1ef6 <main+0xcc4>
		__ticks = 1;
    1ee6:	fe 01       	movw	r30, r28
    1ee8:	ef 56       	subi	r30, 0x6F	; 111
    1eea:	ff 4f       	sbci	r31, 0xFF	; 255
    1eec:	81 e0       	ldi	r24, 0x01	; 1
    1eee:	90 e0       	ldi	r25, 0x00	; 0
    1ef0:	91 83       	std	Z+1, r25	; 0x01
    1ef2:	80 83       	st	Z, r24
    1ef4:	64 c0       	rjmp	.+200    	; 0x1fbe <main+0xd8c>
	else if (__tmp > 65535)
    1ef6:	fe 01       	movw	r30, r28
    1ef8:	ed 56       	subi	r30, 0x6D	; 109
    1efa:	ff 4f       	sbci	r31, 0xFF	; 255
    1efc:	60 81       	ld	r22, Z
    1efe:	71 81       	ldd	r23, Z+1	; 0x01
    1f00:	82 81       	ldd	r24, Z+2	; 0x02
    1f02:	93 81       	ldd	r25, Z+3	; 0x03
    1f04:	20 e0       	ldi	r18, 0x00	; 0
    1f06:	3f ef       	ldi	r19, 0xFF	; 255
    1f08:	4f e7       	ldi	r20, 0x7F	; 127
    1f0a:	57 e4       	ldi	r21, 0x47	; 71
    1f0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1f10:	18 16       	cp	r1, r24
    1f12:	0c f0       	brlt	.+2      	; 0x1f16 <main+0xce4>
    1f14:	43 c0       	rjmp	.+134    	; 0x1f9c <main+0xd6a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1f16:	fe 01       	movw	r30, r28
    1f18:	e9 56       	subi	r30, 0x69	; 105
    1f1a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f1c:	60 81       	ld	r22, Z
    1f1e:	71 81       	ldd	r23, Z+1	; 0x01
    1f20:	82 81       	ldd	r24, Z+2	; 0x02
    1f22:	93 81       	ldd	r25, Z+3	; 0x03
    1f24:	20 e0       	ldi	r18, 0x00	; 0
    1f26:	30 e0       	ldi	r19, 0x00	; 0
    1f28:	40 e2       	ldi	r20, 0x20	; 32
    1f2a:	51 e4       	ldi	r21, 0x41	; 65
    1f2c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f30:	dc 01       	movw	r26, r24
    1f32:	cb 01       	movw	r24, r22
    1f34:	8e 01       	movw	r16, r28
    1f36:	0f 56       	subi	r16, 0x6F	; 111
    1f38:	1f 4f       	sbci	r17, 0xFF	; 255
    1f3a:	bc 01       	movw	r22, r24
    1f3c:	cd 01       	movw	r24, r26
    1f3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1f42:	dc 01       	movw	r26, r24
    1f44:	cb 01       	movw	r24, r22
    1f46:	f8 01       	movw	r30, r16
    1f48:	91 83       	std	Z+1, r25	; 0x01
    1f4a:	80 83       	st	Z, r24
    1f4c:	1f c0       	rjmp	.+62     	; 0x1f8c <main+0xd5a>
    1f4e:	fe 01       	movw	r30, r28
    1f50:	e1 57       	subi	r30, 0x71	; 113
    1f52:	ff 4f       	sbci	r31, 0xFF	; 255
    1f54:	88 ec       	ldi	r24, 0xC8	; 200
    1f56:	90 e0       	ldi	r25, 0x00	; 0
    1f58:	91 83       	std	Z+1, r25	; 0x01
    1f5a:	80 83       	st	Z, r24
    1f5c:	fe 01       	movw	r30, r28
    1f5e:	e1 57       	subi	r30, 0x71	; 113
    1f60:	ff 4f       	sbci	r31, 0xFF	; 255
    1f62:	80 81       	ld	r24, Z
    1f64:	91 81       	ldd	r25, Z+1	; 0x01
    1f66:	01 97       	sbiw	r24, 0x01	; 1
    1f68:	f1 f7       	brne	.-4      	; 0x1f66 <main+0xd34>
    1f6a:	fe 01       	movw	r30, r28
    1f6c:	e1 57       	subi	r30, 0x71	; 113
    1f6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f70:	91 83       	std	Z+1, r25	; 0x01
    1f72:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1f74:	de 01       	movw	r26, r28
    1f76:	af 56       	subi	r26, 0x6F	; 111
    1f78:	bf 4f       	sbci	r27, 0xFF	; 255
    1f7a:	fe 01       	movw	r30, r28
    1f7c:	ef 56       	subi	r30, 0x6F	; 111
    1f7e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f80:	80 81       	ld	r24, Z
    1f82:	91 81       	ldd	r25, Z+1	; 0x01
    1f84:	01 97       	sbiw	r24, 0x01	; 1
    1f86:	11 96       	adiw	r26, 0x01	; 1
    1f88:	9c 93       	st	X, r25
    1f8a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1f8c:	fe 01       	movw	r30, r28
    1f8e:	ef 56       	subi	r30, 0x6F	; 111
    1f90:	ff 4f       	sbci	r31, 0xFF	; 255
    1f92:	80 81       	ld	r24, Z
    1f94:	91 81       	ldd	r25, Z+1	; 0x01
    1f96:	00 97       	sbiw	r24, 0x00	; 0
    1f98:	d1 f6       	brne	.-76     	; 0x1f4e <main+0xd1c>
    1f9a:	27 c0       	rjmp	.+78     	; 0x1fea <main+0xdb8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1f9c:	8e 01       	movw	r16, r28
    1f9e:	0f 56       	subi	r16, 0x6F	; 111
    1fa0:	1f 4f       	sbci	r17, 0xFF	; 255
    1fa2:	fe 01       	movw	r30, r28
    1fa4:	ed 56       	subi	r30, 0x6D	; 109
    1fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fa8:	60 81       	ld	r22, Z
    1faa:	71 81       	ldd	r23, Z+1	; 0x01
    1fac:	82 81       	ldd	r24, Z+2	; 0x02
    1fae:	93 81       	ldd	r25, Z+3	; 0x03
    1fb0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fb4:	dc 01       	movw	r26, r24
    1fb6:	cb 01       	movw	r24, r22
    1fb8:	f8 01       	movw	r30, r16
    1fba:	91 83       	std	Z+1, r25	; 0x01
    1fbc:	80 83       	st	Z, r24
    1fbe:	de 01       	movw	r26, r28
    1fc0:	a3 57       	subi	r26, 0x73	; 115
    1fc2:	bf 4f       	sbci	r27, 0xFF	; 255
    1fc4:	fe 01       	movw	r30, r28
    1fc6:	ef 56       	subi	r30, 0x6F	; 111
    1fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fca:	80 81       	ld	r24, Z
    1fcc:	91 81       	ldd	r25, Z+1	; 0x01
    1fce:	8d 93       	st	X+, r24
    1fd0:	9c 93       	st	X, r25
    1fd2:	fe 01       	movw	r30, r28
    1fd4:	e3 57       	subi	r30, 0x73	; 115
    1fd6:	ff 4f       	sbci	r31, 0xFF	; 255
    1fd8:	80 81       	ld	r24, Z
    1fda:	91 81       	ldd	r25, Z+1	; 0x01
    1fdc:	01 97       	sbiw	r24, 0x01	; 1
    1fde:	f1 f7       	brne	.-4      	; 0x1fdc <main+0xdaa>
    1fe0:	fe 01       	movw	r30, r28
    1fe2:	e3 57       	subi	r30, 0x73	; 115
    1fe4:	ff 4f       	sbci	r31, 0xFF	; 255
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	80 83       	st	Z, r24
				{


					for(int i=0 ;i<10;i++)
					{
								for(int k=0;k<30;k++)
    1fea:	de 01       	movw	r26, r28
    1fec:	a7 51       	subi	r26, 0x17	; 23
    1fee:	bf 4f       	sbci	r27, 0xFF	; 255
    1ff0:	fe 01       	movw	r30, r28
    1ff2:	e7 51       	subi	r30, 0x17	; 23
    1ff4:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff6:	80 81       	ld	r24, Z
    1ff8:	91 81       	ldd	r25, Z+1	; 0x01
    1ffa:	01 96       	adiw	r24, 0x01	; 1
    1ffc:	11 96       	adiw	r26, 0x01	; 1
    1ffe:	9c 93       	st	X, r25
    2000:	8e 93       	st	-X, r24
    2002:	fe 01       	movw	r30, r28
    2004:	e7 51       	subi	r30, 0x17	; 23
    2006:	ff 4f       	sbci	r31, 0xFF	; 255
    2008:	80 81       	ld	r24, Z
    200a:	91 81       	ldd	r25, Z+1	; 0x01
    200c:	8e 31       	cpi	r24, 0x1E	; 30
    200e:	91 05       	cpc	r25, r1
    2010:	0c f4       	brge	.+2      	; 0x2014 <main+0xde2>
    2012:	41 ce       	rjmp	.-894    	; 0x1c96 <main+0xa64>

				for(int j=0 ;j<10;j++)
				{


					for(int i=0 ;i<10;i++)
    2014:	de 01       	movw	r26, r28
    2016:	a5 51       	subi	r26, 0x15	; 21
    2018:	bf 4f       	sbci	r27, 0xFF	; 255
    201a:	fe 01       	movw	r30, r28
    201c:	e5 51       	subi	r30, 0x15	; 21
    201e:	ff 4f       	sbci	r31, 0xFF	; 255
    2020:	80 81       	ld	r24, Z
    2022:	91 81       	ldd	r25, Z+1	; 0x01
    2024:	01 96       	adiw	r24, 0x01	; 1
    2026:	11 96       	adiw	r26, 0x01	; 1
    2028:	9c 93       	st	X, r25
    202a:	8e 93       	st	-X, r24
    202c:	fe 01       	movw	r30, r28
    202e:	e5 51       	subi	r30, 0x15	; 21
    2030:	ff 4f       	sbci	r31, 0xFF	; 255
    2032:	80 81       	ld	r24, Z
    2034:	91 81       	ldd	r25, Z+1	; 0x01
    2036:	8a 30       	cpi	r24, 0x0A	; 10
    2038:	91 05       	cpc	r25, r1
    203a:	0c f4       	brge	.+2      	; 0x203e <main+0xe0c>
    203c:	26 ce       	rjmp	.-948    	; 0x1c8a <main+0xa58>
			}

			if((GetBit(PINA_REG,PIN2)||(GetBit(PINA_REG,PIN2)&&GetBit(PINA_REG,PIN0))||(GetBit(PINA_REG,PIN2)&&GetBit(PINA_REG,PIN1)))&&GetBit(PINA_REG,PIN5))
			{

				for(int j=0 ;j<10;j++)
    203e:	de 01       	movw	r26, r28
    2040:	a3 51       	subi	r26, 0x13	; 19
    2042:	bf 4f       	sbci	r27, 0xFF	; 255
    2044:	fe 01       	movw	r30, r28
    2046:	e3 51       	subi	r30, 0x13	; 19
    2048:	ff 4f       	sbci	r31, 0xFF	; 255
    204a:	80 81       	ld	r24, Z
    204c:	91 81       	ldd	r25, Z+1	; 0x01
    204e:	01 96       	adiw	r24, 0x01	; 1
    2050:	11 96       	adiw	r26, 0x01	; 1
    2052:	9c 93       	st	X, r25
    2054:	8e 93       	st	-X, r24
    2056:	fe 01       	movw	r30, r28
    2058:	e3 51       	subi	r30, 0x13	; 19
    205a:	ff 4f       	sbci	r31, 0xFF	; 255
    205c:	80 81       	ld	r24, Z
    205e:	91 81       	ldd	r25, Z+1	; 0x01
    2060:	8a 30       	cpi	r24, 0x0A	; 10
    2062:	91 05       	cpc	r25, r1
    2064:	0c f4       	brge	.+2      	; 0x2068 <main+0xe36>
    2066:	0b ce       	rjmp	.-1002   	; 0x1c7e <main+0xa4c>

					 }

				}
	    }
			if(GetBit(PINA_REG,PIN3)&&(!GetBit(PINA_REG,PIN4))&&GetBit(PINA_REG,PIN5))
    2068:	e9 e3       	ldi	r30, 0x39	; 57
    206a:	f0 e0       	ldi	r31, 0x00	; 0
    206c:	80 81       	ld	r24, Z
    206e:	86 95       	lsr	r24
    2070:	86 95       	lsr	r24
    2072:	86 95       	lsr	r24
    2074:	88 2f       	mov	r24, r24
    2076:	90 e0       	ldi	r25, 0x00	; 0
    2078:	81 70       	andi	r24, 0x01	; 1
    207a:	90 70       	andi	r25, 0x00	; 0
    207c:	88 23       	and	r24, r24
    207e:	09 f4       	brne	.+2      	; 0x2082 <main+0xe50>
    2080:	56 c3       	rjmp	.+1708   	; 0x272e <main+0x14fc>
    2082:	e9 e3       	ldi	r30, 0x39	; 57
    2084:	f0 e0       	ldi	r31, 0x00	; 0
    2086:	80 81       	ld	r24, Z
    2088:	82 95       	swap	r24
    208a:	8f 70       	andi	r24, 0x0F	; 15
    208c:	88 2f       	mov	r24, r24
    208e:	90 e0       	ldi	r25, 0x00	; 0
    2090:	81 70       	andi	r24, 0x01	; 1
    2092:	90 70       	andi	r25, 0x00	; 0
    2094:	00 97       	sbiw	r24, 0x00	; 0
    2096:	09 f0       	breq	.+2      	; 0x209a <main+0xe68>
    2098:	4a c3       	rjmp	.+1684   	; 0x272e <main+0x14fc>
    209a:	e9 e3       	ldi	r30, 0x39	; 57
    209c:	f0 e0       	ldi	r31, 0x00	; 0
    209e:	80 81       	ld	r24, Z
    20a0:	82 95       	swap	r24
    20a2:	86 95       	lsr	r24
    20a4:	87 70       	andi	r24, 0x07	; 7
    20a6:	88 2f       	mov	r24, r24
    20a8:	90 e0       	ldi	r25, 0x00	; 0
    20aa:	81 70       	andi	r24, 0x01	; 1
    20ac:	90 70       	andi	r25, 0x00	; 0
    20ae:	88 23       	and	r24, r24
    20b0:	09 f4       	brne	.+2      	; 0x20b4 <main+0xe82>
    20b2:	3d c3       	rjmp	.+1658   	; 0x272e <main+0x14fc>
			{Counter=-1;
    20b4:	fe 01       	movw	r30, r28
    20b6:	e0 51       	subi	r30, 0x10	; 16
    20b8:	ff 4f       	sbci	r31, 0xFF	; 255
    20ba:	8f ef       	ldi	r24, 0xFF	; 255
    20bc:	80 83       	st	Z, r24
				for(int i=0;i<2;i++)
    20be:	fe 01       	movw	r30, r28
    20c0:	e9 51       	subi	r30, 0x19	; 25
    20c2:	ff 4f       	sbci	r31, 0xFF	; 255
    20c4:	11 82       	std	Z+1, r1	; 0x01
    20c6:	10 82       	st	Z, r1
    20c8:	75 c2       	rjmp	.+1258   	; 0x25b4 <main+0x1382>
				{
					while(Counter!=9)
					{
						Counter++;
    20ca:	de 01       	movw	r26, r28
    20cc:	a0 51       	subi	r26, 0x10	; 16
    20ce:	bf 4f       	sbci	r27, 0xFF	; 255
    20d0:	fe 01       	movw	r30, r28
    20d2:	e0 51       	subi	r30, 0x10	; 16
    20d4:	ff 4f       	sbci	r31, 0xFF	; 255
    20d6:	80 81       	ld	r24, Z
    20d8:	8f 5f       	subi	r24, 0xFF	; 255
    20da:	8c 93       	st	X, r24
						mm=DIO_U8SetPortVal(PORTB,1<<Counter);
    20dc:	fe 01       	movw	r30, r28
    20de:	e0 51       	subi	r30, 0x10	; 16
    20e0:	ff 4f       	sbci	r31, 0xFF	; 255
    20e2:	80 81       	ld	r24, Z
    20e4:	28 2f       	mov	r18, r24
    20e6:	30 e0       	ldi	r19, 0x00	; 0
    20e8:	81 e0       	ldi	r24, 0x01	; 1
    20ea:	90 e0       	ldi	r25, 0x00	; 0
    20ec:	02 c0       	rjmp	.+4      	; 0x20f2 <main+0xec0>
    20ee:	88 0f       	add	r24, r24
    20f0:	99 1f       	adc	r25, r25
    20f2:	2a 95       	dec	r18
    20f4:	e2 f7       	brpl	.-8      	; 0x20ee <main+0xebc>
    20f6:	98 2f       	mov	r25, r24
    20f8:	81 e0       	ldi	r24, 0x01	; 1
    20fa:	69 2f       	mov	r22, r25
    20fc:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    2100:	fe 01       	movw	r30, r28
    2102:	ed 50       	subi	r30, 0x0D	; 13
    2104:	ff 4f       	sbci	r31, 0xFF	; 255
    2106:	80 83       	st	Z, r24
    2108:	fe 01       	movw	r30, r28
    210a:	e7 57       	subi	r30, 0x77	; 119
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	80 e0       	ldi	r24, 0x00	; 0
    2110:	90 e0       	ldi	r25, 0x00	; 0
    2112:	a8 e4       	ldi	r26, 0x48	; 72
    2114:	b3 e4       	ldi	r27, 0x43	; 67
    2116:	80 83       	st	Z, r24
    2118:	91 83       	std	Z+1, r25	; 0x01
    211a:	a2 83       	std	Z+2, r26	; 0x02
    211c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    211e:	8e 01       	movw	r16, r28
    2120:	0b 57       	subi	r16, 0x7B	; 123
    2122:	1f 4f       	sbci	r17, 0xFF	; 255
    2124:	fe 01       	movw	r30, r28
    2126:	e7 57       	subi	r30, 0x77	; 119
    2128:	ff 4f       	sbci	r31, 0xFF	; 255
    212a:	60 81       	ld	r22, Z
    212c:	71 81       	ldd	r23, Z+1	; 0x01
    212e:	82 81       	ldd	r24, Z+2	; 0x02
    2130:	93 81       	ldd	r25, Z+3	; 0x03
    2132:	20 e0       	ldi	r18, 0x00	; 0
    2134:	30 e0       	ldi	r19, 0x00	; 0
    2136:	4a ef       	ldi	r20, 0xFA	; 250
    2138:	54 e4       	ldi	r21, 0x44	; 68
    213a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    213e:	dc 01       	movw	r26, r24
    2140:	cb 01       	movw	r24, r22
    2142:	f8 01       	movw	r30, r16
    2144:	80 83       	st	Z, r24
    2146:	91 83       	std	Z+1, r25	; 0x01
    2148:	a2 83       	std	Z+2, r26	; 0x02
    214a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    214c:	fe 01       	movw	r30, r28
    214e:	eb 57       	subi	r30, 0x7B	; 123
    2150:	ff 4f       	sbci	r31, 0xFF	; 255
    2152:	60 81       	ld	r22, Z
    2154:	71 81       	ldd	r23, Z+1	; 0x01
    2156:	82 81       	ldd	r24, Z+2	; 0x02
    2158:	93 81       	ldd	r25, Z+3	; 0x03
    215a:	20 e0       	ldi	r18, 0x00	; 0
    215c:	30 e0       	ldi	r19, 0x00	; 0
    215e:	40 e8       	ldi	r20, 0x80	; 128
    2160:	5f e3       	ldi	r21, 0x3F	; 63
    2162:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2166:	88 23       	and	r24, r24
    2168:	44 f4       	brge	.+16     	; 0x217a <main+0xf48>
		__ticks = 1;
    216a:	fe 01       	movw	r30, r28
    216c:	ed 57       	subi	r30, 0x7D	; 125
    216e:	ff 4f       	sbci	r31, 0xFF	; 255
    2170:	81 e0       	ldi	r24, 0x01	; 1
    2172:	90 e0       	ldi	r25, 0x00	; 0
    2174:	91 83       	std	Z+1, r25	; 0x01
    2176:	80 83       	st	Z, r24
    2178:	64 c0       	rjmp	.+200    	; 0x2242 <main+0x1010>
	else if (__tmp > 65535)
    217a:	fe 01       	movw	r30, r28
    217c:	eb 57       	subi	r30, 0x7B	; 123
    217e:	ff 4f       	sbci	r31, 0xFF	; 255
    2180:	60 81       	ld	r22, Z
    2182:	71 81       	ldd	r23, Z+1	; 0x01
    2184:	82 81       	ldd	r24, Z+2	; 0x02
    2186:	93 81       	ldd	r25, Z+3	; 0x03
    2188:	20 e0       	ldi	r18, 0x00	; 0
    218a:	3f ef       	ldi	r19, 0xFF	; 255
    218c:	4f e7       	ldi	r20, 0x7F	; 127
    218e:	57 e4       	ldi	r21, 0x47	; 71
    2190:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2194:	18 16       	cp	r1, r24
    2196:	0c f0       	brlt	.+2      	; 0x219a <main+0xf68>
    2198:	43 c0       	rjmp	.+134    	; 0x2220 <main+0xfee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    219a:	fe 01       	movw	r30, r28
    219c:	e7 57       	subi	r30, 0x77	; 119
    219e:	ff 4f       	sbci	r31, 0xFF	; 255
    21a0:	60 81       	ld	r22, Z
    21a2:	71 81       	ldd	r23, Z+1	; 0x01
    21a4:	82 81       	ldd	r24, Z+2	; 0x02
    21a6:	93 81       	ldd	r25, Z+3	; 0x03
    21a8:	20 e0       	ldi	r18, 0x00	; 0
    21aa:	30 e0       	ldi	r19, 0x00	; 0
    21ac:	40 e2       	ldi	r20, 0x20	; 32
    21ae:	51 e4       	ldi	r21, 0x41	; 65
    21b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    21b4:	dc 01       	movw	r26, r24
    21b6:	cb 01       	movw	r24, r22
    21b8:	8e 01       	movw	r16, r28
    21ba:	0d 57       	subi	r16, 0x7D	; 125
    21bc:	1f 4f       	sbci	r17, 0xFF	; 255
    21be:	bc 01       	movw	r22, r24
    21c0:	cd 01       	movw	r24, r26
    21c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21c6:	dc 01       	movw	r26, r24
    21c8:	cb 01       	movw	r24, r22
    21ca:	f8 01       	movw	r30, r16
    21cc:	91 83       	std	Z+1, r25	; 0x01
    21ce:	80 83       	st	Z, r24
    21d0:	1f c0       	rjmp	.+62     	; 0x2210 <main+0xfde>
    21d2:	fe 01       	movw	r30, r28
    21d4:	ef 57       	subi	r30, 0x7F	; 127
    21d6:	ff 4f       	sbci	r31, 0xFF	; 255
    21d8:	88 ec       	ldi	r24, 0xC8	; 200
    21da:	90 e0       	ldi	r25, 0x00	; 0
    21dc:	91 83       	std	Z+1, r25	; 0x01
    21de:	80 83       	st	Z, r24
    21e0:	fe 01       	movw	r30, r28
    21e2:	ef 57       	subi	r30, 0x7F	; 127
    21e4:	ff 4f       	sbci	r31, 0xFF	; 255
    21e6:	80 81       	ld	r24, Z
    21e8:	91 81       	ldd	r25, Z+1	; 0x01
    21ea:	01 97       	sbiw	r24, 0x01	; 1
    21ec:	f1 f7       	brne	.-4      	; 0x21ea <main+0xfb8>
    21ee:	fe 01       	movw	r30, r28
    21f0:	ef 57       	subi	r30, 0x7F	; 127
    21f2:	ff 4f       	sbci	r31, 0xFF	; 255
    21f4:	91 83       	std	Z+1, r25	; 0x01
    21f6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    21f8:	de 01       	movw	r26, r28
    21fa:	ad 57       	subi	r26, 0x7D	; 125
    21fc:	bf 4f       	sbci	r27, 0xFF	; 255
    21fe:	fe 01       	movw	r30, r28
    2200:	ed 57       	subi	r30, 0x7D	; 125
    2202:	ff 4f       	sbci	r31, 0xFF	; 255
    2204:	80 81       	ld	r24, Z
    2206:	91 81       	ldd	r25, Z+1	; 0x01
    2208:	01 97       	sbiw	r24, 0x01	; 1
    220a:	11 96       	adiw	r26, 0x01	; 1
    220c:	9c 93       	st	X, r25
    220e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2210:	fe 01       	movw	r30, r28
    2212:	ed 57       	subi	r30, 0x7D	; 125
    2214:	ff 4f       	sbci	r31, 0xFF	; 255
    2216:	80 81       	ld	r24, Z
    2218:	91 81       	ldd	r25, Z+1	; 0x01
    221a:	00 97       	sbiw	r24, 0x00	; 0
    221c:	d1 f6       	brne	.-76     	; 0x21d2 <main+0xfa0>
    221e:	28 c0       	rjmp	.+80     	; 0x2270 <main+0x103e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2220:	8e 01       	movw	r16, r28
    2222:	0d 57       	subi	r16, 0x7D	; 125
    2224:	1f 4f       	sbci	r17, 0xFF	; 255
    2226:	fe 01       	movw	r30, r28
    2228:	eb 57       	subi	r30, 0x7B	; 123
    222a:	ff 4f       	sbci	r31, 0xFF	; 255
    222c:	60 81       	ld	r22, Z
    222e:	71 81       	ldd	r23, Z+1	; 0x01
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	93 81       	ldd	r25, Z+3	; 0x03
    2234:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2238:	dc 01       	movw	r26, r24
    223a:	cb 01       	movw	r24, r22
    223c:	f8 01       	movw	r30, r16
    223e:	91 83       	std	Z+1, r25	; 0x01
    2240:	80 83       	st	Z, r24
    2242:	de 01       	movw	r26, r28
    2244:	a1 58       	subi	r26, 0x81	; 129
    2246:	bf 4f       	sbci	r27, 0xFF	; 255
    2248:	fe 01       	movw	r30, r28
    224a:	ed 57       	subi	r30, 0x7D	; 125
    224c:	ff 4f       	sbci	r31, 0xFF	; 255
    224e:	80 81       	ld	r24, Z
    2250:	91 81       	ldd	r25, Z+1	; 0x01
    2252:	11 96       	adiw	r26, 0x01	; 1
    2254:	9c 93       	st	X, r25
    2256:	8e 93       	st	-X, r24
    2258:	fe 01       	movw	r30, r28
    225a:	e1 58       	subi	r30, 0x81	; 129
    225c:	ff 4f       	sbci	r31, 0xFF	; 255
    225e:	80 81       	ld	r24, Z
    2260:	91 81       	ldd	r25, Z+1	; 0x01
    2262:	01 97       	sbiw	r24, 0x01	; 1
    2264:	f1 f7       	brne	.-4      	; 0x2262 <main+0x1030>
    2266:	fe 01       	movw	r30, r28
    2268:	e1 58       	subi	r30, 0x81	; 129
    226a:	ff 4f       	sbci	r31, 0xFF	; 255
    226c:	91 83       	std	Z+1, r25	; 0x01
    226e:	80 83       	st	Z, r24
	    }
			if(GetBit(PINA_REG,PIN3)&&(!GetBit(PINA_REG,PIN4))&&GetBit(PINA_REG,PIN5))
			{Counter=-1;
				for(int i=0;i<2;i++)
				{
					while(Counter!=9)
    2270:	fe 01       	movw	r30, r28
    2272:	e0 51       	subi	r30, 0x10	; 16
    2274:	ff 4f       	sbci	r31, 0xFF	; 255
    2276:	80 81       	ld	r24, Z
    2278:	89 30       	cpi	r24, 0x09	; 9
    227a:	09 f0       	breq	.+2      	; 0x227e <main+0x104c>
    227c:	26 cf       	rjmp	.-436    	; 0x20ca <main+0xe98>
    227e:	fe 01       	movw	r30, r28
    2280:	e5 58       	subi	r30, 0x85	; 133
    2282:	ff 4f       	sbci	r31, 0xFF	; 255
    2284:	80 e0       	ldi	r24, 0x00	; 0
    2286:	90 e0       	ldi	r25, 0x00	; 0
    2288:	a8 e4       	ldi	r26, 0x48	; 72
    228a:	b3 e4       	ldi	r27, 0x43	; 67
    228c:	80 83       	st	Z, r24
    228e:	91 83       	std	Z+1, r25	; 0x01
    2290:	a2 83       	std	Z+2, r26	; 0x02
    2292:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2294:	8e 01       	movw	r16, r28
    2296:	09 58       	subi	r16, 0x89	; 137
    2298:	1f 4f       	sbci	r17, 0xFF	; 255
    229a:	fe 01       	movw	r30, r28
    229c:	e5 58       	subi	r30, 0x85	; 133
    229e:	ff 4f       	sbci	r31, 0xFF	; 255
    22a0:	60 81       	ld	r22, Z
    22a2:	71 81       	ldd	r23, Z+1	; 0x01
    22a4:	82 81       	ldd	r24, Z+2	; 0x02
    22a6:	93 81       	ldd	r25, Z+3	; 0x03
    22a8:	20 e0       	ldi	r18, 0x00	; 0
    22aa:	30 e0       	ldi	r19, 0x00	; 0
    22ac:	4a ef       	ldi	r20, 0xFA	; 250
    22ae:	54 e4       	ldi	r21, 0x44	; 68
    22b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22b4:	dc 01       	movw	r26, r24
    22b6:	cb 01       	movw	r24, r22
    22b8:	f8 01       	movw	r30, r16
    22ba:	80 83       	st	Z, r24
    22bc:	91 83       	std	Z+1, r25	; 0x01
    22be:	a2 83       	std	Z+2, r26	; 0x02
    22c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    22c2:	fe 01       	movw	r30, r28
    22c4:	e9 58       	subi	r30, 0x89	; 137
    22c6:	ff 4f       	sbci	r31, 0xFF	; 255
    22c8:	60 81       	ld	r22, Z
    22ca:	71 81       	ldd	r23, Z+1	; 0x01
    22cc:	82 81       	ldd	r24, Z+2	; 0x02
    22ce:	93 81       	ldd	r25, Z+3	; 0x03
    22d0:	20 e0       	ldi	r18, 0x00	; 0
    22d2:	30 e0       	ldi	r19, 0x00	; 0
    22d4:	40 e8       	ldi	r20, 0x80	; 128
    22d6:	5f e3       	ldi	r21, 0x3F	; 63
    22d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    22dc:	88 23       	and	r24, r24
    22de:	44 f4       	brge	.+16     	; 0x22f0 <main+0x10be>
		__ticks = 1;
    22e0:	fe 01       	movw	r30, r28
    22e2:	eb 58       	subi	r30, 0x8B	; 139
    22e4:	ff 4f       	sbci	r31, 0xFF	; 255
    22e6:	81 e0       	ldi	r24, 0x01	; 1
    22e8:	90 e0       	ldi	r25, 0x00	; 0
    22ea:	91 83       	std	Z+1, r25	; 0x01
    22ec:	80 83       	st	Z, r24
    22ee:	64 c0       	rjmp	.+200    	; 0x23b8 <main+0x1186>
	else if (__tmp > 65535)
    22f0:	fe 01       	movw	r30, r28
    22f2:	e9 58       	subi	r30, 0x89	; 137
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	60 81       	ld	r22, Z
    22f8:	71 81       	ldd	r23, Z+1	; 0x01
    22fa:	82 81       	ldd	r24, Z+2	; 0x02
    22fc:	93 81       	ldd	r25, Z+3	; 0x03
    22fe:	20 e0       	ldi	r18, 0x00	; 0
    2300:	3f ef       	ldi	r19, 0xFF	; 255
    2302:	4f e7       	ldi	r20, 0x7F	; 127
    2304:	57 e4       	ldi	r21, 0x47	; 71
    2306:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    230a:	18 16       	cp	r1, r24
    230c:	0c f0       	brlt	.+2      	; 0x2310 <main+0x10de>
    230e:	43 c0       	rjmp	.+134    	; 0x2396 <main+0x1164>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2310:	fe 01       	movw	r30, r28
    2312:	e5 58       	subi	r30, 0x85	; 133
    2314:	ff 4f       	sbci	r31, 0xFF	; 255
    2316:	60 81       	ld	r22, Z
    2318:	71 81       	ldd	r23, Z+1	; 0x01
    231a:	82 81       	ldd	r24, Z+2	; 0x02
    231c:	93 81       	ldd	r25, Z+3	; 0x03
    231e:	20 e0       	ldi	r18, 0x00	; 0
    2320:	30 e0       	ldi	r19, 0x00	; 0
    2322:	40 e2       	ldi	r20, 0x20	; 32
    2324:	51 e4       	ldi	r21, 0x41	; 65
    2326:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    232a:	dc 01       	movw	r26, r24
    232c:	cb 01       	movw	r24, r22
    232e:	8e 01       	movw	r16, r28
    2330:	0b 58       	subi	r16, 0x8B	; 139
    2332:	1f 4f       	sbci	r17, 0xFF	; 255
    2334:	bc 01       	movw	r22, r24
    2336:	cd 01       	movw	r24, r26
    2338:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    233c:	dc 01       	movw	r26, r24
    233e:	cb 01       	movw	r24, r22
    2340:	f8 01       	movw	r30, r16
    2342:	91 83       	std	Z+1, r25	; 0x01
    2344:	80 83       	st	Z, r24
    2346:	1f c0       	rjmp	.+62     	; 0x2386 <main+0x1154>
    2348:	fe 01       	movw	r30, r28
    234a:	ed 58       	subi	r30, 0x8D	; 141
    234c:	ff 4f       	sbci	r31, 0xFF	; 255
    234e:	88 ec       	ldi	r24, 0xC8	; 200
    2350:	90 e0       	ldi	r25, 0x00	; 0
    2352:	91 83       	std	Z+1, r25	; 0x01
    2354:	80 83       	st	Z, r24
    2356:	fe 01       	movw	r30, r28
    2358:	ed 58       	subi	r30, 0x8D	; 141
    235a:	ff 4f       	sbci	r31, 0xFF	; 255
    235c:	80 81       	ld	r24, Z
    235e:	91 81       	ldd	r25, Z+1	; 0x01
    2360:	01 97       	sbiw	r24, 0x01	; 1
    2362:	f1 f7       	brne	.-4      	; 0x2360 <main+0x112e>
    2364:	fe 01       	movw	r30, r28
    2366:	ed 58       	subi	r30, 0x8D	; 141
    2368:	ff 4f       	sbci	r31, 0xFF	; 255
    236a:	91 83       	std	Z+1, r25	; 0x01
    236c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    236e:	de 01       	movw	r26, r28
    2370:	ab 58       	subi	r26, 0x8B	; 139
    2372:	bf 4f       	sbci	r27, 0xFF	; 255
    2374:	fe 01       	movw	r30, r28
    2376:	eb 58       	subi	r30, 0x8B	; 139
    2378:	ff 4f       	sbci	r31, 0xFF	; 255
    237a:	80 81       	ld	r24, Z
    237c:	91 81       	ldd	r25, Z+1	; 0x01
    237e:	01 97       	sbiw	r24, 0x01	; 1
    2380:	11 96       	adiw	r26, 0x01	; 1
    2382:	9c 93       	st	X, r25
    2384:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2386:	fe 01       	movw	r30, r28
    2388:	eb 58       	subi	r30, 0x8B	; 139
    238a:	ff 4f       	sbci	r31, 0xFF	; 255
    238c:	80 81       	ld	r24, Z
    238e:	91 81       	ldd	r25, Z+1	; 0x01
    2390:	00 97       	sbiw	r24, 0x00	; 0
    2392:	d1 f6       	brne	.-76     	; 0x2348 <main+0x1116>
    2394:	fc c0       	rjmp	.+504    	; 0x258e <main+0x135c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2396:	8e 01       	movw	r16, r28
    2398:	0b 58       	subi	r16, 0x8B	; 139
    239a:	1f 4f       	sbci	r17, 0xFF	; 255
    239c:	fe 01       	movw	r30, r28
    239e:	e9 58       	subi	r30, 0x89	; 137
    23a0:	ff 4f       	sbci	r31, 0xFF	; 255
    23a2:	60 81       	ld	r22, Z
    23a4:	71 81       	ldd	r23, Z+1	; 0x01
    23a6:	82 81       	ldd	r24, Z+2	; 0x02
    23a8:	93 81       	ldd	r25, Z+3	; 0x03
    23aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    23ae:	dc 01       	movw	r26, r24
    23b0:	cb 01       	movw	r24, r22
    23b2:	f8 01       	movw	r30, r16
    23b4:	91 83       	std	Z+1, r25	; 0x01
    23b6:	80 83       	st	Z, r24
    23b8:	de 01       	movw	r26, r28
    23ba:	af 58       	subi	r26, 0x8F	; 143
    23bc:	bf 4f       	sbci	r27, 0xFF	; 255
    23be:	fe 01       	movw	r30, r28
    23c0:	eb 58       	subi	r30, 0x8B	; 139
    23c2:	ff 4f       	sbci	r31, 0xFF	; 255
    23c4:	80 81       	ld	r24, Z
    23c6:	91 81       	ldd	r25, Z+1	; 0x01
    23c8:	11 96       	adiw	r26, 0x01	; 1
    23ca:	9c 93       	st	X, r25
    23cc:	8e 93       	st	-X, r24
    23ce:	fe 01       	movw	r30, r28
    23d0:	ef 58       	subi	r30, 0x8F	; 143
    23d2:	ff 4f       	sbci	r31, 0xFF	; 255
    23d4:	80 81       	ld	r24, Z
    23d6:	91 81       	ldd	r25, Z+1	; 0x01
    23d8:	01 97       	sbiw	r24, 0x01	; 1
    23da:	f1 f7       	brne	.-4      	; 0x23d8 <main+0x11a6>
    23dc:	fe 01       	movw	r30, r28
    23de:	ef 58       	subi	r30, 0x8F	; 143
    23e0:	ff 4f       	sbci	r31, 0xFF	; 255
    23e2:	91 83       	std	Z+1, r25	; 0x01
    23e4:	80 83       	st	Z, r24
    23e6:	d3 c0       	rjmp	.+422    	; 0x258e <main+0x135c>
					}
					_delay_ms(200);

					while(Counter!=0)
					{
						Counter--;
    23e8:	de 01       	movw	r26, r28
    23ea:	a0 51       	subi	r26, 0x10	; 16
    23ec:	bf 4f       	sbci	r27, 0xFF	; 255
    23ee:	fe 01       	movw	r30, r28
    23f0:	e0 51       	subi	r30, 0x10	; 16
    23f2:	ff 4f       	sbci	r31, 0xFF	; 255
    23f4:	80 81       	ld	r24, Z
    23f6:	81 50       	subi	r24, 0x01	; 1
    23f8:	8c 93       	st	X, r24
						mm=DIO_U8SetPortVal(PORTB,1<<Counter);
    23fa:	fe 01       	movw	r30, r28
    23fc:	e0 51       	subi	r30, 0x10	; 16
    23fe:	ff 4f       	sbci	r31, 0xFF	; 255
    2400:	80 81       	ld	r24, Z
    2402:	28 2f       	mov	r18, r24
    2404:	30 e0       	ldi	r19, 0x00	; 0
    2406:	81 e0       	ldi	r24, 0x01	; 1
    2408:	90 e0       	ldi	r25, 0x00	; 0
    240a:	02 c0       	rjmp	.+4      	; 0x2410 <main+0x11de>
    240c:	88 0f       	add	r24, r24
    240e:	99 1f       	adc	r25, r25
    2410:	2a 95       	dec	r18
    2412:	e2 f7       	brpl	.-8      	; 0x240c <main+0x11da>
    2414:	98 2f       	mov	r25, r24
    2416:	81 e0       	ldi	r24, 0x01	; 1
    2418:	69 2f       	mov	r22, r25
    241a:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    241e:	fe 01       	movw	r30, r28
    2420:	ed 50       	subi	r30, 0x0D	; 13
    2422:	ff 4f       	sbci	r31, 0xFF	; 255
    2424:	80 83       	st	Z, r24
    2426:	fe 01       	movw	r30, r28
    2428:	e3 59       	subi	r30, 0x93	; 147
    242a:	ff 4f       	sbci	r31, 0xFF	; 255
    242c:	80 e0       	ldi	r24, 0x00	; 0
    242e:	90 e0       	ldi	r25, 0x00	; 0
    2430:	a8 e4       	ldi	r26, 0x48	; 72
    2432:	b3 e4       	ldi	r27, 0x43	; 67
    2434:	80 83       	st	Z, r24
    2436:	91 83       	std	Z+1, r25	; 0x01
    2438:	a2 83       	std	Z+2, r26	; 0x02
    243a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    243c:	8e 01       	movw	r16, r28
    243e:	07 59       	subi	r16, 0x97	; 151
    2440:	1f 4f       	sbci	r17, 0xFF	; 255
    2442:	fe 01       	movw	r30, r28
    2444:	e3 59       	subi	r30, 0x93	; 147
    2446:	ff 4f       	sbci	r31, 0xFF	; 255
    2448:	60 81       	ld	r22, Z
    244a:	71 81       	ldd	r23, Z+1	; 0x01
    244c:	82 81       	ldd	r24, Z+2	; 0x02
    244e:	93 81       	ldd	r25, Z+3	; 0x03
    2450:	20 e0       	ldi	r18, 0x00	; 0
    2452:	30 e0       	ldi	r19, 0x00	; 0
    2454:	4a ef       	ldi	r20, 0xFA	; 250
    2456:	54 e4       	ldi	r21, 0x44	; 68
    2458:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    245c:	dc 01       	movw	r26, r24
    245e:	cb 01       	movw	r24, r22
    2460:	f8 01       	movw	r30, r16
    2462:	80 83       	st	Z, r24
    2464:	91 83       	std	Z+1, r25	; 0x01
    2466:	a2 83       	std	Z+2, r26	; 0x02
    2468:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    246a:	fe 01       	movw	r30, r28
    246c:	e7 59       	subi	r30, 0x97	; 151
    246e:	ff 4f       	sbci	r31, 0xFF	; 255
    2470:	60 81       	ld	r22, Z
    2472:	71 81       	ldd	r23, Z+1	; 0x01
    2474:	82 81       	ldd	r24, Z+2	; 0x02
    2476:	93 81       	ldd	r25, Z+3	; 0x03
    2478:	20 e0       	ldi	r18, 0x00	; 0
    247a:	30 e0       	ldi	r19, 0x00	; 0
    247c:	40 e8       	ldi	r20, 0x80	; 128
    247e:	5f e3       	ldi	r21, 0x3F	; 63
    2480:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2484:	88 23       	and	r24, r24
    2486:	44 f4       	brge	.+16     	; 0x2498 <main+0x1266>
		__ticks = 1;
    2488:	fe 01       	movw	r30, r28
    248a:	e9 59       	subi	r30, 0x99	; 153
    248c:	ff 4f       	sbci	r31, 0xFF	; 255
    248e:	81 e0       	ldi	r24, 0x01	; 1
    2490:	90 e0       	ldi	r25, 0x00	; 0
    2492:	91 83       	std	Z+1, r25	; 0x01
    2494:	80 83       	st	Z, r24
    2496:	64 c0       	rjmp	.+200    	; 0x2560 <main+0x132e>
	else if (__tmp > 65535)
    2498:	fe 01       	movw	r30, r28
    249a:	e7 59       	subi	r30, 0x97	; 151
    249c:	ff 4f       	sbci	r31, 0xFF	; 255
    249e:	60 81       	ld	r22, Z
    24a0:	71 81       	ldd	r23, Z+1	; 0x01
    24a2:	82 81       	ldd	r24, Z+2	; 0x02
    24a4:	93 81       	ldd	r25, Z+3	; 0x03
    24a6:	20 e0       	ldi	r18, 0x00	; 0
    24a8:	3f ef       	ldi	r19, 0xFF	; 255
    24aa:	4f e7       	ldi	r20, 0x7F	; 127
    24ac:	57 e4       	ldi	r21, 0x47	; 71
    24ae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    24b2:	18 16       	cp	r1, r24
    24b4:	0c f0       	brlt	.+2      	; 0x24b8 <main+0x1286>
    24b6:	43 c0       	rjmp	.+134    	; 0x253e <main+0x130c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    24b8:	fe 01       	movw	r30, r28
    24ba:	e3 59       	subi	r30, 0x93	; 147
    24bc:	ff 4f       	sbci	r31, 0xFF	; 255
    24be:	60 81       	ld	r22, Z
    24c0:	71 81       	ldd	r23, Z+1	; 0x01
    24c2:	82 81       	ldd	r24, Z+2	; 0x02
    24c4:	93 81       	ldd	r25, Z+3	; 0x03
    24c6:	20 e0       	ldi	r18, 0x00	; 0
    24c8:	30 e0       	ldi	r19, 0x00	; 0
    24ca:	40 e2       	ldi	r20, 0x20	; 32
    24cc:	51 e4       	ldi	r21, 0x41	; 65
    24ce:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    24d2:	dc 01       	movw	r26, r24
    24d4:	cb 01       	movw	r24, r22
    24d6:	8e 01       	movw	r16, r28
    24d8:	09 59       	subi	r16, 0x99	; 153
    24da:	1f 4f       	sbci	r17, 0xFF	; 255
    24dc:	bc 01       	movw	r22, r24
    24de:	cd 01       	movw	r24, r26
    24e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24e4:	dc 01       	movw	r26, r24
    24e6:	cb 01       	movw	r24, r22
    24e8:	f8 01       	movw	r30, r16
    24ea:	91 83       	std	Z+1, r25	; 0x01
    24ec:	80 83       	st	Z, r24
    24ee:	1f c0       	rjmp	.+62     	; 0x252e <main+0x12fc>
    24f0:	fe 01       	movw	r30, r28
    24f2:	eb 59       	subi	r30, 0x9B	; 155
    24f4:	ff 4f       	sbci	r31, 0xFF	; 255
    24f6:	88 ec       	ldi	r24, 0xC8	; 200
    24f8:	90 e0       	ldi	r25, 0x00	; 0
    24fa:	91 83       	std	Z+1, r25	; 0x01
    24fc:	80 83       	st	Z, r24
    24fe:	fe 01       	movw	r30, r28
    2500:	eb 59       	subi	r30, 0x9B	; 155
    2502:	ff 4f       	sbci	r31, 0xFF	; 255
    2504:	80 81       	ld	r24, Z
    2506:	91 81       	ldd	r25, Z+1	; 0x01
    2508:	01 97       	sbiw	r24, 0x01	; 1
    250a:	f1 f7       	brne	.-4      	; 0x2508 <main+0x12d6>
    250c:	fe 01       	movw	r30, r28
    250e:	eb 59       	subi	r30, 0x9B	; 155
    2510:	ff 4f       	sbci	r31, 0xFF	; 255
    2512:	91 83       	std	Z+1, r25	; 0x01
    2514:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2516:	de 01       	movw	r26, r28
    2518:	a9 59       	subi	r26, 0x99	; 153
    251a:	bf 4f       	sbci	r27, 0xFF	; 255
    251c:	fe 01       	movw	r30, r28
    251e:	e9 59       	subi	r30, 0x99	; 153
    2520:	ff 4f       	sbci	r31, 0xFF	; 255
    2522:	80 81       	ld	r24, Z
    2524:	91 81       	ldd	r25, Z+1	; 0x01
    2526:	01 97       	sbiw	r24, 0x01	; 1
    2528:	11 96       	adiw	r26, 0x01	; 1
    252a:	9c 93       	st	X, r25
    252c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    252e:	fe 01       	movw	r30, r28
    2530:	e9 59       	subi	r30, 0x99	; 153
    2532:	ff 4f       	sbci	r31, 0xFF	; 255
    2534:	80 81       	ld	r24, Z
    2536:	91 81       	ldd	r25, Z+1	; 0x01
    2538:	00 97       	sbiw	r24, 0x00	; 0
    253a:	d1 f6       	brne	.-76     	; 0x24f0 <main+0x12be>
    253c:	28 c0       	rjmp	.+80     	; 0x258e <main+0x135c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    253e:	8e 01       	movw	r16, r28
    2540:	09 59       	subi	r16, 0x99	; 153
    2542:	1f 4f       	sbci	r17, 0xFF	; 255
    2544:	fe 01       	movw	r30, r28
    2546:	e7 59       	subi	r30, 0x97	; 151
    2548:	ff 4f       	sbci	r31, 0xFF	; 255
    254a:	60 81       	ld	r22, Z
    254c:	71 81       	ldd	r23, Z+1	; 0x01
    254e:	82 81       	ldd	r24, Z+2	; 0x02
    2550:	93 81       	ldd	r25, Z+3	; 0x03
    2552:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2556:	dc 01       	movw	r26, r24
    2558:	cb 01       	movw	r24, r22
    255a:	f8 01       	movw	r30, r16
    255c:	91 83       	std	Z+1, r25	; 0x01
    255e:	80 83       	st	Z, r24
    2560:	de 01       	movw	r26, r28
    2562:	ad 59       	subi	r26, 0x9D	; 157
    2564:	bf 4f       	sbci	r27, 0xFF	; 255
    2566:	fe 01       	movw	r30, r28
    2568:	e9 59       	subi	r30, 0x99	; 153
    256a:	ff 4f       	sbci	r31, 0xFF	; 255
    256c:	80 81       	ld	r24, Z
    256e:	91 81       	ldd	r25, Z+1	; 0x01
    2570:	11 96       	adiw	r26, 0x01	; 1
    2572:	9c 93       	st	X, r25
    2574:	8e 93       	st	-X, r24
    2576:	fe 01       	movw	r30, r28
    2578:	ed 59       	subi	r30, 0x9D	; 157
    257a:	ff 4f       	sbci	r31, 0xFF	; 255
    257c:	80 81       	ld	r24, Z
    257e:	91 81       	ldd	r25, Z+1	; 0x01
    2580:	01 97       	sbiw	r24, 0x01	; 1
    2582:	f1 f7       	brne	.-4      	; 0x2580 <main+0x134e>
    2584:	fe 01       	movw	r30, r28
    2586:	ed 59       	subi	r30, 0x9D	; 157
    2588:	ff 4f       	sbci	r31, 0xFF	; 255
    258a:	91 83       	std	Z+1, r25	; 0x01
    258c:	80 83       	st	Z, r24
						_delay_ms(200);

					}
					_delay_ms(200);

					while(Counter!=0)
    258e:	fe 01       	movw	r30, r28
    2590:	e0 51       	subi	r30, 0x10	; 16
    2592:	ff 4f       	sbci	r31, 0xFF	; 255
    2594:	80 81       	ld	r24, Z
    2596:	88 23       	and	r24, r24
    2598:	09 f0       	breq	.+2      	; 0x259c <main+0x136a>
    259a:	26 cf       	rjmp	.-436    	; 0x23e8 <main+0x11b6>

				}
	    }
			if(GetBit(PINA_REG,PIN3)&&(!GetBit(PINA_REG,PIN4))&&GetBit(PINA_REG,PIN5))
			{Counter=-1;
				for(int i=0;i<2;i++)
    259c:	de 01       	movw	r26, r28
    259e:	a9 51       	subi	r26, 0x19	; 25
    25a0:	bf 4f       	sbci	r27, 0xFF	; 255
    25a2:	fe 01       	movw	r30, r28
    25a4:	e9 51       	subi	r30, 0x19	; 25
    25a6:	ff 4f       	sbci	r31, 0xFF	; 255
    25a8:	80 81       	ld	r24, Z
    25aa:	91 81       	ldd	r25, Z+1	; 0x01
    25ac:	01 96       	adiw	r24, 0x01	; 1
    25ae:	11 96       	adiw	r26, 0x01	; 1
    25b0:	9c 93       	st	X, r25
    25b2:	8e 93       	st	-X, r24
    25b4:	fe 01       	movw	r30, r28
    25b6:	e9 51       	subi	r30, 0x19	; 25
    25b8:	ff 4f       	sbci	r31, 0xFF	; 255
    25ba:	80 81       	ld	r24, Z
    25bc:	91 81       	ldd	r25, Z+1	; 0x01
    25be:	82 30       	cpi	r24, 0x02	; 2
    25c0:	91 05       	cpc	r25, r1
    25c2:	0c f4       	brge	.+2      	; 0x25c6 <main+0x1394>
    25c4:	55 ce       	rjmp	.-854    	; 0x2270 <main+0x103e>
    25c6:	fe 01       	movw	r30, r28
    25c8:	e1 5a       	subi	r30, 0xA1	; 161
    25ca:	ff 4f       	sbci	r31, 0xFF	; 255
    25cc:	80 e0       	ldi	r24, 0x00	; 0
    25ce:	90 e0       	ldi	r25, 0x00	; 0
    25d0:	a8 ec       	ldi	r26, 0xC8	; 200
    25d2:	b2 e4       	ldi	r27, 0x42	; 66
    25d4:	80 83       	st	Z, r24
    25d6:	91 83       	std	Z+1, r25	; 0x01
    25d8:	a2 83       	std	Z+2, r26	; 0x02
    25da:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    25dc:	8e 01       	movw	r16, r28
    25de:	05 5a       	subi	r16, 0xA5	; 165
    25e0:	1f 4f       	sbci	r17, 0xFF	; 255
    25e2:	fe 01       	movw	r30, r28
    25e4:	e1 5a       	subi	r30, 0xA1	; 161
    25e6:	ff 4f       	sbci	r31, 0xFF	; 255
    25e8:	60 81       	ld	r22, Z
    25ea:	71 81       	ldd	r23, Z+1	; 0x01
    25ec:	82 81       	ldd	r24, Z+2	; 0x02
    25ee:	93 81       	ldd	r25, Z+3	; 0x03
    25f0:	20 e0       	ldi	r18, 0x00	; 0
    25f2:	30 e0       	ldi	r19, 0x00	; 0
    25f4:	4a ef       	ldi	r20, 0xFA	; 250
    25f6:	54 e4       	ldi	r21, 0x44	; 68
    25f8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25fc:	dc 01       	movw	r26, r24
    25fe:	cb 01       	movw	r24, r22
    2600:	f8 01       	movw	r30, r16
    2602:	80 83       	st	Z, r24
    2604:	91 83       	std	Z+1, r25	; 0x01
    2606:	a2 83       	std	Z+2, r26	; 0x02
    2608:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    260a:	fe 01       	movw	r30, r28
    260c:	e5 5a       	subi	r30, 0xA5	; 165
    260e:	ff 4f       	sbci	r31, 0xFF	; 255
    2610:	60 81       	ld	r22, Z
    2612:	71 81       	ldd	r23, Z+1	; 0x01
    2614:	82 81       	ldd	r24, Z+2	; 0x02
    2616:	93 81       	ldd	r25, Z+3	; 0x03
    2618:	20 e0       	ldi	r18, 0x00	; 0
    261a:	30 e0       	ldi	r19, 0x00	; 0
    261c:	40 e8       	ldi	r20, 0x80	; 128
    261e:	5f e3       	ldi	r21, 0x3F	; 63
    2620:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2624:	88 23       	and	r24, r24
    2626:	44 f4       	brge	.+16     	; 0x2638 <main+0x1406>
		__ticks = 1;
    2628:	fe 01       	movw	r30, r28
    262a:	e7 5a       	subi	r30, 0xA7	; 167
    262c:	ff 4f       	sbci	r31, 0xFF	; 255
    262e:	81 e0       	ldi	r24, 0x01	; 1
    2630:	90 e0       	ldi	r25, 0x00	; 0
    2632:	91 83       	std	Z+1, r25	; 0x01
    2634:	80 83       	st	Z, r24
    2636:	64 c0       	rjmp	.+200    	; 0x2700 <main+0x14ce>
	else if (__tmp > 65535)
    2638:	fe 01       	movw	r30, r28
    263a:	e5 5a       	subi	r30, 0xA5	; 165
    263c:	ff 4f       	sbci	r31, 0xFF	; 255
    263e:	60 81       	ld	r22, Z
    2640:	71 81       	ldd	r23, Z+1	; 0x01
    2642:	82 81       	ldd	r24, Z+2	; 0x02
    2644:	93 81       	ldd	r25, Z+3	; 0x03
    2646:	20 e0       	ldi	r18, 0x00	; 0
    2648:	3f ef       	ldi	r19, 0xFF	; 255
    264a:	4f e7       	ldi	r20, 0x7F	; 127
    264c:	57 e4       	ldi	r21, 0x47	; 71
    264e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2652:	18 16       	cp	r1, r24
    2654:	0c f0       	brlt	.+2      	; 0x2658 <main+0x1426>
    2656:	43 c0       	rjmp	.+134    	; 0x26de <main+0x14ac>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2658:	fe 01       	movw	r30, r28
    265a:	e1 5a       	subi	r30, 0xA1	; 161
    265c:	ff 4f       	sbci	r31, 0xFF	; 255
    265e:	60 81       	ld	r22, Z
    2660:	71 81       	ldd	r23, Z+1	; 0x01
    2662:	82 81       	ldd	r24, Z+2	; 0x02
    2664:	93 81       	ldd	r25, Z+3	; 0x03
    2666:	20 e0       	ldi	r18, 0x00	; 0
    2668:	30 e0       	ldi	r19, 0x00	; 0
    266a:	40 e2       	ldi	r20, 0x20	; 32
    266c:	51 e4       	ldi	r21, 0x41	; 65
    266e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2672:	dc 01       	movw	r26, r24
    2674:	cb 01       	movw	r24, r22
    2676:	8e 01       	movw	r16, r28
    2678:	07 5a       	subi	r16, 0xA7	; 167
    267a:	1f 4f       	sbci	r17, 0xFF	; 255
    267c:	bc 01       	movw	r22, r24
    267e:	cd 01       	movw	r24, r26
    2680:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2684:	dc 01       	movw	r26, r24
    2686:	cb 01       	movw	r24, r22
    2688:	f8 01       	movw	r30, r16
    268a:	91 83       	std	Z+1, r25	; 0x01
    268c:	80 83       	st	Z, r24
    268e:	1f c0       	rjmp	.+62     	; 0x26ce <main+0x149c>
    2690:	fe 01       	movw	r30, r28
    2692:	e9 5a       	subi	r30, 0xA9	; 169
    2694:	ff 4f       	sbci	r31, 0xFF	; 255
    2696:	88 ec       	ldi	r24, 0xC8	; 200
    2698:	90 e0       	ldi	r25, 0x00	; 0
    269a:	91 83       	std	Z+1, r25	; 0x01
    269c:	80 83       	st	Z, r24
    269e:	fe 01       	movw	r30, r28
    26a0:	e9 5a       	subi	r30, 0xA9	; 169
    26a2:	ff 4f       	sbci	r31, 0xFF	; 255
    26a4:	80 81       	ld	r24, Z
    26a6:	91 81       	ldd	r25, Z+1	; 0x01
    26a8:	01 97       	sbiw	r24, 0x01	; 1
    26aa:	f1 f7       	brne	.-4      	; 0x26a8 <main+0x1476>
    26ac:	fe 01       	movw	r30, r28
    26ae:	e9 5a       	subi	r30, 0xA9	; 169
    26b0:	ff 4f       	sbci	r31, 0xFF	; 255
    26b2:	91 83       	std	Z+1, r25	; 0x01
    26b4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    26b6:	de 01       	movw	r26, r28
    26b8:	a7 5a       	subi	r26, 0xA7	; 167
    26ba:	bf 4f       	sbci	r27, 0xFF	; 255
    26bc:	fe 01       	movw	r30, r28
    26be:	e7 5a       	subi	r30, 0xA7	; 167
    26c0:	ff 4f       	sbci	r31, 0xFF	; 255
    26c2:	80 81       	ld	r24, Z
    26c4:	91 81       	ldd	r25, Z+1	; 0x01
    26c6:	01 97       	sbiw	r24, 0x01	; 1
    26c8:	11 96       	adiw	r26, 0x01	; 1
    26ca:	9c 93       	st	X, r25
    26cc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    26ce:	fe 01       	movw	r30, r28
    26d0:	e7 5a       	subi	r30, 0xA7	; 167
    26d2:	ff 4f       	sbci	r31, 0xFF	; 255
    26d4:	80 81       	ld	r24, Z
    26d6:	91 81       	ldd	r25, Z+1	; 0x01
    26d8:	00 97       	sbiw	r24, 0x00	; 0
    26da:	d1 f6       	brne	.-76     	; 0x2690 <main+0x145e>
    26dc:	28 c0       	rjmp	.+80     	; 0x272e <main+0x14fc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    26de:	8e 01       	movw	r16, r28
    26e0:	07 5a       	subi	r16, 0xA7	; 167
    26e2:	1f 4f       	sbci	r17, 0xFF	; 255
    26e4:	fe 01       	movw	r30, r28
    26e6:	e5 5a       	subi	r30, 0xA5	; 165
    26e8:	ff 4f       	sbci	r31, 0xFF	; 255
    26ea:	60 81       	ld	r22, Z
    26ec:	71 81       	ldd	r23, Z+1	; 0x01
    26ee:	82 81       	ldd	r24, Z+2	; 0x02
    26f0:	93 81       	ldd	r25, Z+3	; 0x03
    26f2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26f6:	dc 01       	movw	r26, r24
    26f8:	cb 01       	movw	r24, r22
    26fa:	f8 01       	movw	r30, r16
    26fc:	91 83       	std	Z+1, r25	; 0x01
    26fe:	80 83       	st	Z, r24
    2700:	de 01       	movw	r26, r28
    2702:	ab 5a       	subi	r26, 0xAB	; 171
    2704:	bf 4f       	sbci	r27, 0xFF	; 255
    2706:	fe 01       	movw	r30, r28
    2708:	e7 5a       	subi	r30, 0xA7	; 167
    270a:	ff 4f       	sbci	r31, 0xFF	; 255
    270c:	80 81       	ld	r24, Z
    270e:	91 81       	ldd	r25, Z+1	; 0x01
    2710:	11 96       	adiw	r26, 0x01	; 1
    2712:	9c 93       	st	X, r25
    2714:	8e 93       	st	-X, r24
    2716:	fe 01       	movw	r30, r28
    2718:	eb 5a       	subi	r30, 0xAB	; 171
    271a:	ff 4f       	sbci	r31, 0xFF	; 255
    271c:	80 81       	ld	r24, Z
    271e:	91 81       	ldd	r25, Z+1	; 0x01
    2720:	01 97       	sbiw	r24, 0x01	; 1
    2722:	f1 f7       	brne	.-4      	; 0x2720 <main+0x14ee>
    2724:	fe 01       	movw	r30, r28
    2726:	eb 5a       	subi	r30, 0xAB	; 171
    2728:	ff 4f       	sbci	r31, 0xFF	; 255
    272a:	91 83       	std	Z+1, r25	; 0x01
    272c:	80 83       	st	Z, r24

					}
				}
				_delay_ms(100);
			}
			if((GetBit(PINA_REG,PIN4)||(GetBit(PINA_REG,PIN3)&&GetBit(PINA_REG,PIN4)))&&GetBit(PINA_REG,PIN5))
    272e:	e9 e3       	ldi	r30, 0x39	; 57
    2730:	f0 e0       	ldi	r31, 0x00	; 0
    2732:	80 81       	ld	r24, Z
    2734:	82 95       	swap	r24
    2736:	8f 70       	andi	r24, 0x0F	; 15
    2738:	88 2f       	mov	r24, r24
    273a:	90 e0       	ldi	r25, 0x00	; 0
    273c:	81 70       	andi	r24, 0x01	; 1
    273e:	90 70       	andi	r25, 0x00	; 0
    2740:	88 23       	and	r24, r24
    2742:	f1 f4       	brne	.+60     	; 0x2780 <main+0x154e>
    2744:	e9 e3       	ldi	r30, 0x39	; 57
    2746:	f0 e0       	ldi	r31, 0x00	; 0
    2748:	80 81       	ld	r24, Z
    274a:	86 95       	lsr	r24
    274c:	86 95       	lsr	r24
    274e:	86 95       	lsr	r24
    2750:	88 2f       	mov	r24, r24
    2752:	90 e0       	ldi	r25, 0x00	; 0
    2754:	81 70       	andi	r24, 0x01	; 1
    2756:	90 70       	andi	r25, 0x00	; 0
    2758:	98 2f       	mov	r25, r24
    275a:	81 e0       	ldi	r24, 0x01	; 1
    275c:	89 27       	eor	r24, r25
    275e:	88 23       	and	r24, r24
    2760:	11 f0       	breq	.+4      	; 0x2766 <main+0x1534>
    2762:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <main+0x4d0>
    2766:	e9 e3       	ldi	r30, 0x39	; 57
    2768:	f0 e0       	ldi	r31, 0x00	; 0
    276a:	80 81       	ld	r24, Z
    276c:	82 95       	swap	r24
    276e:	8f 70       	andi	r24, 0x0F	; 15
    2770:	88 2f       	mov	r24, r24
    2772:	90 e0       	ldi	r25, 0x00	; 0
    2774:	81 70       	andi	r24, 0x01	; 1
    2776:	90 70       	andi	r25, 0x00	; 0
    2778:	88 23       	and	r24, r24
    277a:	11 f4       	brne	.+4      	; 0x2780 <main+0x154e>
    277c:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <main+0x4d0>
    2780:	e9 e3       	ldi	r30, 0x39	; 57
    2782:	f0 e0       	ldi	r31, 0x00	; 0
    2784:	80 81       	ld	r24, Z
    2786:	82 95       	swap	r24
    2788:	86 95       	lsr	r24
    278a:	87 70       	andi	r24, 0x07	; 7
    278c:	88 2f       	mov	r24, r24
    278e:	90 e0       	ldi	r25, 0x00	; 0
    2790:	81 70       	andi	r24, 0x01	; 1
    2792:	90 70       	andi	r25, 0x00	; 0
    2794:	88 23       	and	r24, r24
    2796:	11 f4       	brne	.+4      	; 0x279c <main+0x156a>
    2798:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <main+0x4d0>
			{
				Counter=-1;
    279c:	fe 01       	movw	r30, r28
    279e:	e0 51       	subi	r30, 0x10	; 16
    27a0:	ff 4f       	sbci	r31, 0xFF	; 255
    27a2:	8f ef       	ldi	r24, 0xFF	; 255
    27a4:	80 83       	st	Z, r24
					for(int i=0;i<2;i++)
    27a6:	fe 01       	movw	r30, r28
    27a8:	eb 51       	subi	r30, 0x1B	; 27
    27aa:	ff 4f       	sbci	r31, 0xFF	; 255
    27ac:	11 82       	std	Z+1, r1	; 0x01
    27ae:	10 82       	st	Z, r1
    27b0:	49 c3       	rjmp	.+1682   	; 0x2e44 <main+0x1c12>
				{
					while(Counter!=4)

					{
						Counter++;
    27b2:	de 01       	movw	r26, r28
    27b4:	a0 51       	subi	r26, 0x10	; 16
    27b6:	bf 4f       	sbci	r27, 0xFF	; 255
    27b8:	fe 01       	movw	r30, r28
    27ba:	e0 51       	subi	r30, 0x10	; 16
    27bc:	ff 4f       	sbci	r31, 0xFF	; 255
    27be:	80 81       	ld	r24, Z
    27c0:	8f 5f       	subi	r24, 0xFF	; 255
    27c2:	8c 93       	st	X, r24
						for(int k=0;k<30;k++)
    27c4:	fe 01       	movw	r30, r28
    27c6:	ed 51       	subi	r30, 0x1D	; 29
    27c8:	ff 4f       	sbci	r31, 0xFF	; 255
    27ca:	11 82       	std	Z+1, r1	; 0x01
    27cc:	10 82       	st	Z, r1
    27ce:	70 c1       	rjmp	.+736    	; 0x2ab0 <main+0x187e>
					{

						mm=DIO_U8SetPortVal(PORTB,1<<Counter);
    27d0:	fe 01       	movw	r30, r28
    27d2:	e0 51       	subi	r30, 0x10	; 16
    27d4:	ff 4f       	sbci	r31, 0xFF	; 255
    27d6:	80 81       	ld	r24, Z
    27d8:	28 2f       	mov	r18, r24
    27da:	30 e0       	ldi	r19, 0x00	; 0
    27dc:	81 e0       	ldi	r24, 0x01	; 1
    27de:	90 e0       	ldi	r25, 0x00	; 0
    27e0:	02 c0       	rjmp	.+4      	; 0x27e6 <main+0x15b4>
    27e2:	88 0f       	add	r24, r24
    27e4:	99 1f       	adc	r25, r25
    27e6:	2a 95       	dec	r18
    27e8:	e2 f7       	brpl	.-8      	; 0x27e2 <main+0x15b0>
    27ea:	98 2f       	mov	r25, r24
    27ec:	81 e0       	ldi	r24, 0x01	; 1
    27ee:	69 2f       	mov	r22, r25
    27f0:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    27f4:	fe 01       	movw	r30, r28
    27f6:	ed 50       	subi	r30, 0x0D	; 13
    27f8:	ff 4f       	sbci	r31, 0xFF	; 255
    27fa:	80 83       	st	Z, r24
    27fc:	fe 01       	movw	r30, r28
    27fe:	ef 5a       	subi	r30, 0xAF	; 175
    2800:	ff 4f       	sbci	r31, 0xFF	; 255
    2802:	80 e0       	ldi	r24, 0x00	; 0
    2804:	90 e0       	ldi	r25, 0x00	; 0
    2806:	a0 e2       	ldi	r26, 0x20	; 32
    2808:	b1 e4       	ldi	r27, 0x41	; 65
    280a:	80 83       	st	Z, r24
    280c:	91 83       	std	Z+1, r25	; 0x01
    280e:	a2 83       	std	Z+2, r26	; 0x02
    2810:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2812:	8e 01       	movw	r16, r28
    2814:	03 5b       	subi	r16, 0xB3	; 179
    2816:	1f 4f       	sbci	r17, 0xFF	; 255
    2818:	fe 01       	movw	r30, r28
    281a:	ef 5a       	subi	r30, 0xAF	; 175
    281c:	ff 4f       	sbci	r31, 0xFF	; 255
    281e:	60 81       	ld	r22, Z
    2820:	71 81       	ldd	r23, Z+1	; 0x01
    2822:	82 81       	ldd	r24, Z+2	; 0x02
    2824:	93 81       	ldd	r25, Z+3	; 0x03
    2826:	20 e0       	ldi	r18, 0x00	; 0
    2828:	30 e0       	ldi	r19, 0x00	; 0
    282a:	4a ef       	ldi	r20, 0xFA	; 250
    282c:	54 e4       	ldi	r21, 0x44	; 68
    282e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2832:	dc 01       	movw	r26, r24
    2834:	cb 01       	movw	r24, r22
    2836:	f8 01       	movw	r30, r16
    2838:	80 83       	st	Z, r24
    283a:	91 83       	std	Z+1, r25	; 0x01
    283c:	a2 83       	std	Z+2, r26	; 0x02
    283e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2840:	fe 01       	movw	r30, r28
    2842:	e3 5b       	subi	r30, 0xB3	; 179
    2844:	ff 4f       	sbci	r31, 0xFF	; 255
    2846:	60 81       	ld	r22, Z
    2848:	71 81       	ldd	r23, Z+1	; 0x01
    284a:	82 81       	ldd	r24, Z+2	; 0x02
    284c:	93 81       	ldd	r25, Z+3	; 0x03
    284e:	20 e0       	ldi	r18, 0x00	; 0
    2850:	30 e0       	ldi	r19, 0x00	; 0
    2852:	40 e8       	ldi	r20, 0x80	; 128
    2854:	5f e3       	ldi	r21, 0x3F	; 63
    2856:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    285a:	88 23       	and	r24, r24
    285c:	44 f4       	brge	.+16     	; 0x286e <main+0x163c>
		__ticks = 1;
    285e:	fe 01       	movw	r30, r28
    2860:	e5 5b       	subi	r30, 0xB5	; 181
    2862:	ff 4f       	sbci	r31, 0xFF	; 255
    2864:	81 e0       	ldi	r24, 0x01	; 1
    2866:	90 e0       	ldi	r25, 0x00	; 0
    2868:	91 83       	std	Z+1, r25	; 0x01
    286a:	80 83       	st	Z, r24
    286c:	64 c0       	rjmp	.+200    	; 0x2936 <main+0x1704>
	else if (__tmp > 65535)
    286e:	fe 01       	movw	r30, r28
    2870:	e3 5b       	subi	r30, 0xB3	; 179
    2872:	ff 4f       	sbci	r31, 0xFF	; 255
    2874:	60 81       	ld	r22, Z
    2876:	71 81       	ldd	r23, Z+1	; 0x01
    2878:	82 81       	ldd	r24, Z+2	; 0x02
    287a:	93 81       	ldd	r25, Z+3	; 0x03
    287c:	20 e0       	ldi	r18, 0x00	; 0
    287e:	3f ef       	ldi	r19, 0xFF	; 255
    2880:	4f e7       	ldi	r20, 0x7F	; 127
    2882:	57 e4       	ldi	r21, 0x47	; 71
    2884:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2888:	18 16       	cp	r1, r24
    288a:	0c f0       	brlt	.+2      	; 0x288e <main+0x165c>
    288c:	43 c0       	rjmp	.+134    	; 0x2914 <main+0x16e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    288e:	fe 01       	movw	r30, r28
    2890:	ef 5a       	subi	r30, 0xAF	; 175
    2892:	ff 4f       	sbci	r31, 0xFF	; 255
    2894:	60 81       	ld	r22, Z
    2896:	71 81       	ldd	r23, Z+1	; 0x01
    2898:	82 81       	ldd	r24, Z+2	; 0x02
    289a:	93 81       	ldd	r25, Z+3	; 0x03
    289c:	20 e0       	ldi	r18, 0x00	; 0
    289e:	30 e0       	ldi	r19, 0x00	; 0
    28a0:	40 e2       	ldi	r20, 0x20	; 32
    28a2:	51 e4       	ldi	r21, 0x41	; 65
    28a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28a8:	dc 01       	movw	r26, r24
    28aa:	cb 01       	movw	r24, r22
    28ac:	8e 01       	movw	r16, r28
    28ae:	05 5b       	subi	r16, 0xB5	; 181
    28b0:	1f 4f       	sbci	r17, 0xFF	; 255
    28b2:	bc 01       	movw	r22, r24
    28b4:	cd 01       	movw	r24, r26
    28b6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28ba:	dc 01       	movw	r26, r24
    28bc:	cb 01       	movw	r24, r22
    28be:	f8 01       	movw	r30, r16
    28c0:	91 83       	std	Z+1, r25	; 0x01
    28c2:	80 83       	st	Z, r24
    28c4:	1f c0       	rjmp	.+62     	; 0x2904 <main+0x16d2>
    28c6:	fe 01       	movw	r30, r28
    28c8:	e7 5b       	subi	r30, 0xB7	; 183
    28ca:	ff 4f       	sbci	r31, 0xFF	; 255
    28cc:	88 ec       	ldi	r24, 0xC8	; 200
    28ce:	90 e0       	ldi	r25, 0x00	; 0
    28d0:	91 83       	std	Z+1, r25	; 0x01
    28d2:	80 83       	st	Z, r24
    28d4:	fe 01       	movw	r30, r28
    28d6:	e7 5b       	subi	r30, 0xB7	; 183
    28d8:	ff 4f       	sbci	r31, 0xFF	; 255
    28da:	80 81       	ld	r24, Z
    28dc:	91 81       	ldd	r25, Z+1	; 0x01
    28de:	01 97       	sbiw	r24, 0x01	; 1
    28e0:	f1 f7       	brne	.-4      	; 0x28de <main+0x16ac>
    28e2:	fe 01       	movw	r30, r28
    28e4:	e7 5b       	subi	r30, 0xB7	; 183
    28e6:	ff 4f       	sbci	r31, 0xFF	; 255
    28e8:	91 83       	std	Z+1, r25	; 0x01
    28ea:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28ec:	de 01       	movw	r26, r28
    28ee:	a5 5b       	subi	r26, 0xB5	; 181
    28f0:	bf 4f       	sbci	r27, 0xFF	; 255
    28f2:	fe 01       	movw	r30, r28
    28f4:	e5 5b       	subi	r30, 0xB5	; 181
    28f6:	ff 4f       	sbci	r31, 0xFF	; 255
    28f8:	80 81       	ld	r24, Z
    28fa:	91 81       	ldd	r25, Z+1	; 0x01
    28fc:	01 97       	sbiw	r24, 0x01	; 1
    28fe:	11 96       	adiw	r26, 0x01	; 1
    2900:	9c 93       	st	X, r25
    2902:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2904:	fe 01       	movw	r30, r28
    2906:	e5 5b       	subi	r30, 0xB5	; 181
    2908:	ff 4f       	sbci	r31, 0xFF	; 255
    290a:	80 81       	ld	r24, Z
    290c:	91 81       	ldd	r25, Z+1	; 0x01
    290e:	00 97       	sbiw	r24, 0x00	; 0
    2910:	d1 f6       	brne	.-76     	; 0x28c6 <main+0x1694>
    2912:	27 c0       	rjmp	.+78     	; 0x2962 <main+0x1730>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2914:	8e 01       	movw	r16, r28
    2916:	05 5b       	subi	r16, 0xB5	; 181
    2918:	1f 4f       	sbci	r17, 0xFF	; 255
    291a:	fe 01       	movw	r30, r28
    291c:	e3 5b       	subi	r30, 0xB3	; 179
    291e:	ff 4f       	sbci	r31, 0xFF	; 255
    2920:	60 81       	ld	r22, Z
    2922:	71 81       	ldd	r23, Z+1	; 0x01
    2924:	82 81       	ldd	r24, Z+2	; 0x02
    2926:	93 81       	ldd	r25, Z+3	; 0x03
    2928:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    292c:	dc 01       	movw	r26, r24
    292e:	cb 01       	movw	r24, r22
    2930:	f8 01       	movw	r30, r16
    2932:	91 83       	std	Z+1, r25	; 0x01
    2934:	80 83       	st	Z, r24
    2936:	de 01       	movw	r26, r28
    2938:	a9 5b       	subi	r26, 0xB9	; 185
    293a:	bf 4f       	sbci	r27, 0xFF	; 255
    293c:	fe 01       	movw	r30, r28
    293e:	e5 5b       	subi	r30, 0xB5	; 181
    2940:	ff 4f       	sbci	r31, 0xFF	; 255
    2942:	80 81       	ld	r24, Z
    2944:	91 81       	ldd	r25, Z+1	; 0x01
    2946:	8d 93       	st	X+, r24
    2948:	9c 93       	st	X, r25
    294a:	fe 01       	movw	r30, r28
    294c:	e9 5b       	subi	r30, 0xB9	; 185
    294e:	ff 4f       	sbci	r31, 0xFF	; 255
    2950:	80 81       	ld	r24, Z
    2952:	91 81       	ldd	r25, Z+1	; 0x01
    2954:	01 97       	sbiw	r24, 0x01	; 1
    2956:	f1 f7       	brne	.-4      	; 0x2954 <main+0x1722>
    2958:	fe 01       	movw	r30, r28
    295a:	e9 5b       	subi	r30, 0xB9	; 185
    295c:	ff 4f       	sbci	r31, 0xFF	; 255
    295e:	91 83       	std	Z+1, r25	; 0x01
    2960:	80 83       	st	Z, r24
						_delay_ms(10);
						mm=DIO_U8SetPortVal(PORTB,128>>Counter);
    2962:	fe 01       	movw	r30, r28
    2964:	e0 51       	subi	r30, 0x10	; 16
    2966:	ff 4f       	sbci	r31, 0xFF	; 255
    2968:	80 81       	ld	r24, Z
    296a:	28 2f       	mov	r18, r24
    296c:	30 e0       	ldi	r19, 0x00	; 0
    296e:	80 e8       	ldi	r24, 0x80	; 128
    2970:	90 e0       	ldi	r25, 0x00	; 0
    2972:	02 c0       	rjmp	.+4      	; 0x2978 <main+0x1746>
    2974:	95 95       	asr	r25
    2976:	87 95       	ror	r24
    2978:	2a 95       	dec	r18
    297a:	e2 f7       	brpl	.-8      	; 0x2974 <main+0x1742>
    297c:	98 2f       	mov	r25, r24
    297e:	81 e0       	ldi	r24, 0x01	; 1
    2980:	69 2f       	mov	r22, r25
    2982:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    2986:	fe 01       	movw	r30, r28
    2988:	ed 50       	subi	r30, 0x0D	; 13
    298a:	ff 4f       	sbci	r31, 0xFF	; 255
    298c:	80 83       	st	Z, r24
    298e:	fe 01       	movw	r30, r28
    2990:	ed 5b       	subi	r30, 0xBD	; 189
    2992:	ff 4f       	sbci	r31, 0xFF	; 255
    2994:	80 e0       	ldi	r24, 0x00	; 0
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	a0 e2       	ldi	r26, 0x20	; 32
    299a:	b1 e4       	ldi	r27, 0x41	; 65
    299c:	80 83       	st	Z, r24
    299e:	91 83       	std	Z+1, r25	; 0x01
    29a0:	a2 83       	std	Z+2, r26	; 0x02
    29a2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29a4:	8e 01       	movw	r16, r28
    29a6:	01 5c       	subi	r16, 0xC1	; 193
    29a8:	1f 4f       	sbci	r17, 0xFF	; 255
    29aa:	fe 01       	movw	r30, r28
    29ac:	ed 5b       	subi	r30, 0xBD	; 189
    29ae:	ff 4f       	sbci	r31, 0xFF	; 255
    29b0:	60 81       	ld	r22, Z
    29b2:	71 81       	ldd	r23, Z+1	; 0x01
    29b4:	82 81       	ldd	r24, Z+2	; 0x02
    29b6:	93 81       	ldd	r25, Z+3	; 0x03
    29b8:	20 e0       	ldi	r18, 0x00	; 0
    29ba:	30 e0       	ldi	r19, 0x00	; 0
    29bc:	4a ef       	ldi	r20, 0xFA	; 250
    29be:	54 e4       	ldi	r21, 0x44	; 68
    29c0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29c4:	dc 01       	movw	r26, r24
    29c6:	cb 01       	movw	r24, r22
    29c8:	f8 01       	movw	r30, r16
    29ca:	80 83       	st	Z, r24
    29cc:	91 83       	std	Z+1, r25	; 0x01
    29ce:	a2 83       	std	Z+2, r26	; 0x02
    29d0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29d2:	fe 01       	movw	r30, r28
    29d4:	ff 96       	adiw	r30, 0x3f	; 63
    29d6:	60 81       	ld	r22, Z
    29d8:	71 81       	ldd	r23, Z+1	; 0x01
    29da:	82 81       	ldd	r24, Z+2	; 0x02
    29dc:	93 81       	ldd	r25, Z+3	; 0x03
    29de:	20 e0       	ldi	r18, 0x00	; 0
    29e0:	30 e0       	ldi	r19, 0x00	; 0
    29e2:	40 e8       	ldi	r20, 0x80	; 128
    29e4:	5f e3       	ldi	r21, 0x3F	; 63
    29e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    29ea:	88 23       	and	r24, r24
    29ec:	2c f4       	brge	.+10     	; 0x29f8 <main+0x17c6>
		__ticks = 1;
    29ee:	81 e0       	ldi	r24, 0x01	; 1
    29f0:	90 e0       	ldi	r25, 0x00	; 0
    29f2:	9e af       	std	Y+62, r25	; 0x3e
    29f4:	8d af       	std	Y+61, r24	; 0x3d
    29f6:	46 c0       	rjmp	.+140    	; 0x2a84 <main+0x1852>
	else if (__tmp > 65535)
    29f8:	fe 01       	movw	r30, r28
    29fa:	ff 96       	adiw	r30, 0x3f	; 63
    29fc:	60 81       	ld	r22, Z
    29fe:	71 81       	ldd	r23, Z+1	; 0x01
    2a00:	82 81       	ldd	r24, Z+2	; 0x02
    2a02:	93 81       	ldd	r25, Z+3	; 0x03
    2a04:	20 e0       	ldi	r18, 0x00	; 0
    2a06:	3f ef       	ldi	r19, 0xFF	; 255
    2a08:	4f e7       	ldi	r20, 0x7F	; 127
    2a0a:	57 e4       	ldi	r21, 0x47	; 71
    2a0c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a10:	18 16       	cp	r1, r24
    2a12:	64 f5       	brge	.+88     	; 0x2a6c <main+0x183a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a14:	fe 01       	movw	r30, r28
    2a16:	ed 5b       	subi	r30, 0xBD	; 189
    2a18:	ff 4f       	sbci	r31, 0xFF	; 255
    2a1a:	60 81       	ld	r22, Z
    2a1c:	71 81       	ldd	r23, Z+1	; 0x01
    2a1e:	82 81       	ldd	r24, Z+2	; 0x02
    2a20:	93 81       	ldd	r25, Z+3	; 0x03
    2a22:	20 e0       	ldi	r18, 0x00	; 0
    2a24:	30 e0       	ldi	r19, 0x00	; 0
    2a26:	40 e2       	ldi	r20, 0x20	; 32
    2a28:	51 e4       	ldi	r21, 0x41	; 65
    2a2a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a2e:	dc 01       	movw	r26, r24
    2a30:	cb 01       	movw	r24, r22
    2a32:	bc 01       	movw	r22, r24
    2a34:	cd 01       	movw	r24, r26
    2a36:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a3a:	dc 01       	movw	r26, r24
    2a3c:	cb 01       	movw	r24, r22
    2a3e:	9e af       	std	Y+62, r25	; 0x3e
    2a40:	8d af       	std	Y+61, r24	; 0x3d
    2a42:	0f c0       	rjmp	.+30     	; 0x2a62 <main+0x1830>
    2a44:	88 ec       	ldi	r24, 0xC8	; 200
    2a46:	90 e0       	ldi	r25, 0x00	; 0
    2a48:	9c af       	std	Y+60, r25	; 0x3c
    2a4a:	8b af       	std	Y+59, r24	; 0x3b
    2a4c:	8b ad       	ldd	r24, Y+59	; 0x3b
    2a4e:	9c ad       	ldd	r25, Y+60	; 0x3c
    2a50:	01 97       	sbiw	r24, 0x01	; 1
    2a52:	f1 f7       	brne	.-4      	; 0x2a50 <main+0x181e>
    2a54:	9c af       	std	Y+60, r25	; 0x3c
    2a56:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a58:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a5a:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a5c:	01 97       	sbiw	r24, 0x01	; 1
    2a5e:	9e af       	std	Y+62, r25	; 0x3e
    2a60:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a62:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a64:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a66:	00 97       	sbiw	r24, 0x00	; 0
    2a68:	69 f7       	brne	.-38     	; 0x2a44 <main+0x1812>
    2a6a:	16 c0       	rjmp	.+44     	; 0x2a98 <main+0x1866>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a6c:	fe 01       	movw	r30, r28
    2a6e:	ff 96       	adiw	r30, 0x3f	; 63
    2a70:	60 81       	ld	r22, Z
    2a72:	71 81       	ldd	r23, Z+1	; 0x01
    2a74:	82 81       	ldd	r24, Z+2	; 0x02
    2a76:	93 81       	ldd	r25, Z+3	; 0x03
    2a78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a7c:	dc 01       	movw	r26, r24
    2a7e:	cb 01       	movw	r24, r22
    2a80:	9e af       	std	Y+62, r25	; 0x3e
    2a82:	8d af       	std	Y+61, r24	; 0x3d
    2a84:	8d ad       	ldd	r24, Y+61	; 0x3d
    2a86:	9e ad       	ldd	r25, Y+62	; 0x3e
    2a88:	9a af       	std	Y+58, r25	; 0x3a
    2a8a:	89 af       	std	Y+57, r24	; 0x39
    2a8c:	89 ad       	ldd	r24, Y+57	; 0x39
    2a8e:	9a ad       	ldd	r25, Y+58	; 0x3a
    2a90:	01 97       	sbiw	r24, 0x01	; 1
    2a92:	f1 f7       	brne	.-4      	; 0x2a90 <main+0x185e>
    2a94:	9a af       	std	Y+58, r25	; 0x3a
    2a96:	89 af       	std	Y+57, r24	; 0x39
				{
					while(Counter!=4)

					{
						Counter++;
						for(int k=0;k<30;k++)
    2a98:	de 01       	movw	r26, r28
    2a9a:	ad 51       	subi	r26, 0x1D	; 29
    2a9c:	bf 4f       	sbci	r27, 0xFF	; 255
    2a9e:	fe 01       	movw	r30, r28
    2aa0:	ed 51       	subi	r30, 0x1D	; 29
    2aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa4:	80 81       	ld	r24, Z
    2aa6:	91 81       	ldd	r25, Z+1	; 0x01
    2aa8:	01 96       	adiw	r24, 0x01	; 1
    2aaa:	11 96       	adiw	r26, 0x01	; 1
    2aac:	9c 93       	st	X, r25
    2aae:	8e 93       	st	-X, r24
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	ed 51       	subi	r30, 0x1D	; 29
    2ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab6:	80 81       	ld	r24, Z
    2ab8:	91 81       	ldd	r25, Z+1	; 0x01
    2aba:	8e 31       	cpi	r24, 0x1E	; 30
    2abc:	91 05       	cpc	r25, r1
    2abe:	0c f4       	brge	.+2      	; 0x2ac2 <main+0x1890>
    2ac0:	87 ce       	rjmp	.-754    	; 0x27d0 <main+0x159e>
			if((GetBit(PINA_REG,PIN4)||(GetBit(PINA_REG,PIN3)&&GetBit(PINA_REG,PIN4)))&&GetBit(PINA_REG,PIN5))
			{
				Counter=-1;
					for(int i=0;i<2;i++)
				{
					while(Counter!=4)
    2ac2:	fe 01       	movw	r30, r28
    2ac4:	e0 51       	subi	r30, 0x10	; 16
    2ac6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac8:	80 81       	ld	r24, Z
    2aca:	84 30       	cpi	r24, 0x04	; 4
    2acc:	09 f0       	breq	.+2      	; 0x2ad0 <main+0x189e>
    2ace:	71 ce       	rjmp	.-798    	; 0x27b2 <main+0x1580>
    2ad0:	80 e0       	ldi	r24, 0x00	; 0
    2ad2:	90 e0       	ldi	r25, 0x00	; 0
    2ad4:	a8 ec       	ldi	r26, 0xC8	; 200
    2ad6:	b2 e4       	ldi	r27, 0x42	; 66
    2ad8:	8d ab       	std	Y+53, r24	; 0x35
    2ada:	9e ab       	std	Y+54, r25	; 0x36
    2adc:	af ab       	std	Y+55, r26	; 0x37
    2ade:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ae0:	6d a9       	ldd	r22, Y+53	; 0x35
    2ae2:	7e a9       	ldd	r23, Y+54	; 0x36
    2ae4:	8f a9       	ldd	r24, Y+55	; 0x37
    2ae6:	98 ad       	ldd	r25, Y+56	; 0x38
    2ae8:	20 e0       	ldi	r18, 0x00	; 0
    2aea:	30 e0       	ldi	r19, 0x00	; 0
    2aec:	4a ef       	ldi	r20, 0xFA	; 250
    2aee:	54 e4       	ldi	r21, 0x44	; 68
    2af0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2af4:	dc 01       	movw	r26, r24
    2af6:	cb 01       	movw	r24, r22
    2af8:	89 ab       	std	Y+49, r24	; 0x31
    2afa:	9a ab       	std	Y+50, r25	; 0x32
    2afc:	ab ab       	std	Y+51, r26	; 0x33
    2afe:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2b00:	69 a9       	ldd	r22, Y+49	; 0x31
    2b02:	7a a9       	ldd	r23, Y+50	; 0x32
    2b04:	8b a9       	ldd	r24, Y+51	; 0x33
    2b06:	9c a9       	ldd	r25, Y+52	; 0x34
    2b08:	20 e0       	ldi	r18, 0x00	; 0
    2b0a:	30 e0       	ldi	r19, 0x00	; 0
    2b0c:	40 e8       	ldi	r20, 0x80	; 128
    2b0e:	5f e3       	ldi	r21, 0x3F	; 63
    2b10:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b14:	88 23       	and	r24, r24
    2b16:	2c f4       	brge	.+10     	; 0x2b22 <main+0x18f0>
		__ticks = 1;
    2b18:	81 e0       	ldi	r24, 0x01	; 1
    2b1a:	90 e0       	ldi	r25, 0x00	; 0
    2b1c:	98 ab       	std	Y+48, r25	; 0x30
    2b1e:	8f a7       	std	Y+47, r24	; 0x2f
    2b20:	3f c0       	rjmp	.+126    	; 0x2ba0 <main+0x196e>
	else if (__tmp > 65535)
    2b22:	69 a9       	ldd	r22, Y+49	; 0x31
    2b24:	7a a9       	ldd	r23, Y+50	; 0x32
    2b26:	8b a9       	ldd	r24, Y+51	; 0x33
    2b28:	9c a9       	ldd	r25, Y+52	; 0x34
    2b2a:	20 e0       	ldi	r18, 0x00	; 0
    2b2c:	3f ef       	ldi	r19, 0xFF	; 255
    2b2e:	4f e7       	ldi	r20, 0x7F	; 127
    2b30:	57 e4       	ldi	r21, 0x47	; 71
    2b32:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b36:	18 16       	cp	r1, r24
    2b38:	4c f5       	brge	.+82     	; 0x2b8c <main+0x195a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b3a:	6d a9       	ldd	r22, Y+53	; 0x35
    2b3c:	7e a9       	ldd	r23, Y+54	; 0x36
    2b3e:	8f a9       	ldd	r24, Y+55	; 0x37
    2b40:	98 ad       	ldd	r25, Y+56	; 0x38
    2b42:	20 e0       	ldi	r18, 0x00	; 0
    2b44:	30 e0       	ldi	r19, 0x00	; 0
    2b46:	40 e2       	ldi	r20, 0x20	; 32
    2b48:	51 e4       	ldi	r21, 0x41	; 65
    2b4a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b4e:	dc 01       	movw	r26, r24
    2b50:	cb 01       	movw	r24, r22
    2b52:	bc 01       	movw	r22, r24
    2b54:	cd 01       	movw	r24, r26
    2b56:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b5a:	dc 01       	movw	r26, r24
    2b5c:	cb 01       	movw	r24, r22
    2b5e:	98 ab       	std	Y+48, r25	; 0x30
    2b60:	8f a7       	std	Y+47, r24	; 0x2f
    2b62:	0f c0       	rjmp	.+30     	; 0x2b82 <main+0x1950>
    2b64:	88 ec       	ldi	r24, 0xC8	; 200
    2b66:	90 e0       	ldi	r25, 0x00	; 0
    2b68:	9e a7       	std	Y+46, r25	; 0x2e
    2b6a:	8d a7       	std	Y+45, r24	; 0x2d
    2b6c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2b6e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2b70:	01 97       	sbiw	r24, 0x01	; 1
    2b72:	f1 f7       	brne	.-4      	; 0x2b70 <main+0x193e>
    2b74:	9e a7       	std	Y+46, r25	; 0x2e
    2b76:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2b78:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b7a:	98 a9       	ldd	r25, Y+48	; 0x30
    2b7c:	01 97       	sbiw	r24, 0x01	; 1
    2b7e:	98 ab       	std	Y+48, r25	; 0x30
    2b80:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2b82:	8f a5       	ldd	r24, Y+47	; 0x2f
    2b84:	98 a9       	ldd	r25, Y+48	; 0x30
    2b86:	00 97       	sbiw	r24, 0x00	; 0
    2b88:	69 f7       	brne	.-38     	; 0x2b64 <main+0x1932>
    2b8a:	49 c1       	rjmp	.+658    	; 0x2e1e <main+0x1bec>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2b8c:	69 a9       	ldd	r22, Y+49	; 0x31
    2b8e:	7a a9       	ldd	r23, Y+50	; 0x32
    2b90:	8b a9       	ldd	r24, Y+51	; 0x33
    2b92:	9c a9       	ldd	r25, Y+52	; 0x34
    2b94:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b98:	dc 01       	movw	r26, r24
    2b9a:	cb 01       	movw	r24, r22
    2b9c:	98 ab       	std	Y+48, r25	; 0x30
    2b9e:	8f a7       	std	Y+47, r24	; 0x2f
    2ba0:	8f a5       	ldd	r24, Y+47	; 0x2f
    2ba2:	98 a9       	ldd	r25, Y+48	; 0x30
    2ba4:	9c a7       	std	Y+44, r25	; 0x2c
    2ba6:	8b a7       	std	Y+43, r24	; 0x2b
    2ba8:	8b a5       	ldd	r24, Y+43	; 0x2b
    2baa:	9c a5       	ldd	r25, Y+44	; 0x2c
    2bac:	01 97       	sbiw	r24, 0x01	; 1
    2bae:	f1 f7       	brne	.-4      	; 0x2bac <main+0x197a>
    2bb0:	9c a7       	std	Y+44, r25	; 0x2c
    2bb2:	8b a7       	std	Y+43, r24	; 0x2b
    2bb4:	34 c1       	rjmp	.+616    	; 0x2e1e <main+0x1bec>
					_delay_ms(100);

					while(Counter!=0)
					{

						Counter--;
    2bb6:	de 01       	movw	r26, r28
    2bb8:	a0 51       	subi	r26, 0x10	; 16
    2bba:	bf 4f       	sbci	r27, 0xFF	; 255
    2bbc:	fe 01       	movw	r30, r28
    2bbe:	e0 51       	subi	r30, 0x10	; 16
    2bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2bc2:	80 81       	ld	r24, Z
    2bc4:	81 50       	subi	r24, 0x01	; 1
    2bc6:	8c 93       	st	X, r24
						for(int k=0;k<30;k++)
    2bc8:	fe 01       	movw	r30, r28
    2bca:	ef 51       	subi	r30, 0x1F	; 31
    2bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bce:	11 82       	std	Z+1, r1	; 0x01
    2bd0:	10 82       	st	Z, r1
    2bd2:	1c c1       	rjmp	.+568    	; 0x2e0c <main+0x1bda>
							{

							mm=DIO_U8SetPortVal(PORTB,1<<Counter);
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	e0 51       	subi	r30, 0x10	; 16
    2bd8:	ff 4f       	sbci	r31, 0xFF	; 255
    2bda:	80 81       	ld	r24, Z
    2bdc:	28 2f       	mov	r18, r24
    2bde:	30 e0       	ldi	r19, 0x00	; 0
    2be0:	81 e0       	ldi	r24, 0x01	; 1
    2be2:	90 e0       	ldi	r25, 0x00	; 0
    2be4:	02 c0       	rjmp	.+4      	; 0x2bea <main+0x19b8>
    2be6:	88 0f       	add	r24, r24
    2be8:	99 1f       	adc	r25, r25
    2bea:	2a 95       	dec	r18
    2bec:	e2 f7       	brpl	.-8      	; 0x2be6 <main+0x19b4>
    2bee:	98 2f       	mov	r25, r24
    2bf0:	81 e0       	ldi	r24, 0x01	; 1
    2bf2:	69 2f       	mov	r22, r25
    2bf4:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    2bf8:	fe 01       	movw	r30, r28
    2bfa:	ed 50       	subi	r30, 0x0D	; 13
    2bfc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bfe:	80 83       	st	Z, r24
    2c00:	80 e0       	ldi	r24, 0x00	; 0
    2c02:	90 e0       	ldi	r25, 0x00	; 0
    2c04:	a0 e2       	ldi	r26, 0x20	; 32
    2c06:	b1 e4       	ldi	r27, 0x41	; 65
    2c08:	8f a3       	std	Y+39, r24	; 0x27
    2c0a:	98 a7       	std	Y+40, r25	; 0x28
    2c0c:	a9 a7       	std	Y+41, r26	; 0x29
    2c0e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c10:	6f a1       	ldd	r22, Y+39	; 0x27
    2c12:	78 a5       	ldd	r23, Y+40	; 0x28
    2c14:	89 a5       	ldd	r24, Y+41	; 0x29
    2c16:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c18:	20 e0       	ldi	r18, 0x00	; 0
    2c1a:	30 e0       	ldi	r19, 0x00	; 0
    2c1c:	4a ef       	ldi	r20, 0xFA	; 250
    2c1e:	54 e4       	ldi	r21, 0x44	; 68
    2c20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c24:	dc 01       	movw	r26, r24
    2c26:	cb 01       	movw	r24, r22
    2c28:	8b a3       	std	Y+35, r24	; 0x23
    2c2a:	9c a3       	std	Y+36, r25	; 0x24
    2c2c:	ad a3       	std	Y+37, r26	; 0x25
    2c2e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2c30:	6b a1       	ldd	r22, Y+35	; 0x23
    2c32:	7c a1       	ldd	r23, Y+36	; 0x24
    2c34:	8d a1       	ldd	r24, Y+37	; 0x25
    2c36:	9e a1       	ldd	r25, Y+38	; 0x26
    2c38:	20 e0       	ldi	r18, 0x00	; 0
    2c3a:	30 e0       	ldi	r19, 0x00	; 0
    2c3c:	40 e8       	ldi	r20, 0x80	; 128
    2c3e:	5f e3       	ldi	r21, 0x3F	; 63
    2c40:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2c44:	88 23       	and	r24, r24
    2c46:	2c f4       	brge	.+10     	; 0x2c52 <main+0x1a20>
		__ticks = 1;
    2c48:	81 e0       	ldi	r24, 0x01	; 1
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	9a a3       	std	Y+34, r25	; 0x22
    2c4e:	89 a3       	std	Y+33, r24	; 0x21
    2c50:	3f c0       	rjmp	.+126    	; 0x2cd0 <main+0x1a9e>
	else if (__tmp > 65535)
    2c52:	6b a1       	ldd	r22, Y+35	; 0x23
    2c54:	7c a1       	ldd	r23, Y+36	; 0x24
    2c56:	8d a1       	ldd	r24, Y+37	; 0x25
    2c58:	9e a1       	ldd	r25, Y+38	; 0x26
    2c5a:	20 e0       	ldi	r18, 0x00	; 0
    2c5c:	3f ef       	ldi	r19, 0xFF	; 255
    2c5e:	4f e7       	ldi	r20, 0x7F	; 127
    2c60:	57 e4       	ldi	r21, 0x47	; 71
    2c62:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2c66:	18 16       	cp	r1, r24
    2c68:	4c f5       	brge	.+82     	; 0x2cbc <main+0x1a8a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2c6a:	6f a1       	ldd	r22, Y+39	; 0x27
    2c6c:	78 a5       	ldd	r23, Y+40	; 0x28
    2c6e:	89 a5       	ldd	r24, Y+41	; 0x29
    2c70:	9a a5       	ldd	r25, Y+42	; 0x2a
    2c72:	20 e0       	ldi	r18, 0x00	; 0
    2c74:	30 e0       	ldi	r19, 0x00	; 0
    2c76:	40 e2       	ldi	r20, 0x20	; 32
    2c78:	51 e4       	ldi	r21, 0x41	; 65
    2c7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c7e:	dc 01       	movw	r26, r24
    2c80:	cb 01       	movw	r24, r22
    2c82:	bc 01       	movw	r22, r24
    2c84:	cd 01       	movw	r24, r26
    2c86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c8a:	dc 01       	movw	r26, r24
    2c8c:	cb 01       	movw	r24, r22
    2c8e:	9a a3       	std	Y+34, r25	; 0x22
    2c90:	89 a3       	std	Y+33, r24	; 0x21
    2c92:	0f c0       	rjmp	.+30     	; 0x2cb2 <main+0x1a80>
    2c94:	88 ec       	ldi	r24, 0xC8	; 200
    2c96:	90 e0       	ldi	r25, 0x00	; 0
    2c98:	98 a3       	std	Y+32, r25	; 0x20
    2c9a:	8f 8f       	std	Y+31, r24	; 0x1f
    2c9c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2c9e:	98 a1       	ldd	r25, Y+32	; 0x20
    2ca0:	01 97       	sbiw	r24, 0x01	; 1
    2ca2:	f1 f7       	brne	.-4      	; 0x2ca0 <main+0x1a6e>
    2ca4:	98 a3       	std	Y+32, r25	; 0x20
    2ca6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ca8:	89 a1       	ldd	r24, Y+33	; 0x21
    2caa:	9a a1       	ldd	r25, Y+34	; 0x22
    2cac:	01 97       	sbiw	r24, 0x01	; 1
    2cae:	9a a3       	std	Y+34, r25	; 0x22
    2cb0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2cb2:	89 a1       	ldd	r24, Y+33	; 0x21
    2cb4:	9a a1       	ldd	r25, Y+34	; 0x22
    2cb6:	00 97       	sbiw	r24, 0x00	; 0
    2cb8:	69 f7       	brne	.-38     	; 0x2c94 <main+0x1a62>
    2cba:	14 c0       	rjmp	.+40     	; 0x2ce4 <main+0x1ab2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2cbc:	6b a1       	ldd	r22, Y+35	; 0x23
    2cbe:	7c a1       	ldd	r23, Y+36	; 0x24
    2cc0:	8d a1       	ldd	r24, Y+37	; 0x25
    2cc2:	9e a1       	ldd	r25, Y+38	; 0x26
    2cc4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2cc8:	dc 01       	movw	r26, r24
    2cca:	cb 01       	movw	r24, r22
    2ccc:	9a a3       	std	Y+34, r25	; 0x22
    2cce:	89 a3       	std	Y+33, r24	; 0x21
    2cd0:	89 a1       	ldd	r24, Y+33	; 0x21
    2cd2:	9a a1       	ldd	r25, Y+34	; 0x22
    2cd4:	9e 8f       	std	Y+30, r25	; 0x1e
    2cd6:	8d 8f       	std	Y+29, r24	; 0x1d
    2cd8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2cda:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2cdc:	01 97       	sbiw	r24, 0x01	; 1
    2cde:	f1 f7       	brne	.-4      	; 0x2cdc <main+0x1aaa>
    2ce0:	9e 8f       	std	Y+30, r25	; 0x1e
    2ce2:	8d 8f       	std	Y+29, r24	; 0x1d
								_delay_ms(10);
								mm=DIO_U8SetPortVal(PORTB,128>>Counter);
    2ce4:	fe 01       	movw	r30, r28
    2ce6:	e0 51       	subi	r30, 0x10	; 16
    2ce8:	ff 4f       	sbci	r31, 0xFF	; 255
    2cea:	80 81       	ld	r24, Z
    2cec:	28 2f       	mov	r18, r24
    2cee:	30 e0       	ldi	r19, 0x00	; 0
    2cf0:	80 e8       	ldi	r24, 0x80	; 128
    2cf2:	90 e0       	ldi	r25, 0x00	; 0
    2cf4:	02 c0       	rjmp	.+4      	; 0x2cfa <main+0x1ac8>
    2cf6:	95 95       	asr	r25
    2cf8:	87 95       	ror	r24
    2cfa:	2a 95       	dec	r18
    2cfc:	e2 f7       	brpl	.-8      	; 0x2cf6 <main+0x1ac4>
    2cfe:	98 2f       	mov	r25, r24
    2d00:	81 e0       	ldi	r24, 0x01	; 1
    2d02:	69 2f       	mov	r22, r25
    2d04:	0e 94 e6 05 	call	0xbcc	; 0xbcc <DIO_U8SetPortVal>
    2d08:	fe 01       	movw	r30, r28
    2d0a:	ed 50       	subi	r30, 0x0D	; 13
    2d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    2d0e:	80 83       	st	Z, r24
    2d10:	80 e0       	ldi	r24, 0x00	; 0
    2d12:	90 e0       	ldi	r25, 0x00	; 0
    2d14:	a0 e2       	ldi	r26, 0x20	; 32
    2d16:	b1 e4       	ldi	r27, 0x41	; 65
    2d18:	89 8f       	std	Y+25, r24	; 0x19
    2d1a:	9a 8f       	std	Y+26, r25	; 0x1a
    2d1c:	ab 8f       	std	Y+27, r26	; 0x1b
    2d1e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2d20:	69 8d       	ldd	r22, Y+25	; 0x19
    2d22:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d24:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d26:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d28:	20 e0       	ldi	r18, 0x00	; 0
    2d2a:	30 e0       	ldi	r19, 0x00	; 0
    2d2c:	4a ef       	ldi	r20, 0xFA	; 250
    2d2e:	54 e4       	ldi	r21, 0x44	; 68
    2d30:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d34:	dc 01       	movw	r26, r24
    2d36:	cb 01       	movw	r24, r22
    2d38:	8d 8b       	std	Y+21, r24	; 0x15
    2d3a:	9e 8b       	std	Y+22, r25	; 0x16
    2d3c:	af 8b       	std	Y+23, r26	; 0x17
    2d3e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2d40:	6d 89       	ldd	r22, Y+21	; 0x15
    2d42:	7e 89       	ldd	r23, Y+22	; 0x16
    2d44:	8f 89       	ldd	r24, Y+23	; 0x17
    2d46:	98 8d       	ldd	r25, Y+24	; 0x18
    2d48:	20 e0       	ldi	r18, 0x00	; 0
    2d4a:	30 e0       	ldi	r19, 0x00	; 0
    2d4c:	40 e8       	ldi	r20, 0x80	; 128
    2d4e:	5f e3       	ldi	r21, 0x3F	; 63
    2d50:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2d54:	88 23       	and	r24, r24
    2d56:	2c f4       	brge	.+10     	; 0x2d62 <main+0x1b30>
		__ticks = 1;
    2d58:	81 e0       	ldi	r24, 0x01	; 1
    2d5a:	90 e0       	ldi	r25, 0x00	; 0
    2d5c:	9c 8b       	std	Y+20, r25	; 0x14
    2d5e:	8b 8b       	std	Y+19, r24	; 0x13
    2d60:	3f c0       	rjmp	.+126    	; 0x2de0 <main+0x1bae>
	else if (__tmp > 65535)
    2d62:	6d 89       	ldd	r22, Y+21	; 0x15
    2d64:	7e 89       	ldd	r23, Y+22	; 0x16
    2d66:	8f 89       	ldd	r24, Y+23	; 0x17
    2d68:	98 8d       	ldd	r25, Y+24	; 0x18
    2d6a:	20 e0       	ldi	r18, 0x00	; 0
    2d6c:	3f ef       	ldi	r19, 0xFF	; 255
    2d6e:	4f e7       	ldi	r20, 0x7F	; 127
    2d70:	57 e4       	ldi	r21, 0x47	; 71
    2d72:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2d76:	18 16       	cp	r1, r24
    2d78:	4c f5       	brge	.+82     	; 0x2dcc <main+0x1b9a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2d7a:	69 8d       	ldd	r22, Y+25	; 0x19
    2d7c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2d7e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2d80:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2d82:	20 e0       	ldi	r18, 0x00	; 0
    2d84:	30 e0       	ldi	r19, 0x00	; 0
    2d86:	40 e2       	ldi	r20, 0x20	; 32
    2d88:	51 e4       	ldi	r21, 0x41	; 65
    2d8a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2d8e:	dc 01       	movw	r26, r24
    2d90:	cb 01       	movw	r24, r22
    2d92:	bc 01       	movw	r22, r24
    2d94:	cd 01       	movw	r24, r26
    2d96:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d9a:	dc 01       	movw	r26, r24
    2d9c:	cb 01       	movw	r24, r22
    2d9e:	9c 8b       	std	Y+20, r25	; 0x14
    2da0:	8b 8b       	std	Y+19, r24	; 0x13
    2da2:	0f c0       	rjmp	.+30     	; 0x2dc2 <main+0x1b90>
    2da4:	88 ec       	ldi	r24, 0xC8	; 200
    2da6:	90 e0       	ldi	r25, 0x00	; 0
    2da8:	9a 8b       	std	Y+18, r25	; 0x12
    2daa:	89 8b       	std	Y+17, r24	; 0x11
    2dac:	89 89       	ldd	r24, Y+17	; 0x11
    2dae:	9a 89       	ldd	r25, Y+18	; 0x12
    2db0:	01 97       	sbiw	r24, 0x01	; 1
    2db2:	f1 f7       	brne	.-4      	; 0x2db0 <main+0x1b7e>
    2db4:	9a 8b       	std	Y+18, r25	; 0x12
    2db6:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2db8:	8b 89       	ldd	r24, Y+19	; 0x13
    2dba:	9c 89       	ldd	r25, Y+20	; 0x14
    2dbc:	01 97       	sbiw	r24, 0x01	; 1
    2dbe:	9c 8b       	std	Y+20, r25	; 0x14
    2dc0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2dc2:	8b 89       	ldd	r24, Y+19	; 0x13
    2dc4:	9c 89       	ldd	r25, Y+20	; 0x14
    2dc6:	00 97       	sbiw	r24, 0x00	; 0
    2dc8:	69 f7       	brne	.-38     	; 0x2da4 <main+0x1b72>
    2dca:	14 c0       	rjmp	.+40     	; 0x2df4 <main+0x1bc2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2dcc:	6d 89       	ldd	r22, Y+21	; 0x15
    2dce:	7e 89       	ldd	r23, Y+22	; 0x16
    2dd0:	8f 89       	ldd	r24, Y+23	; 0x17
    2dd2:	98 8d       	ldd	r25, Y+24	; 0x18
    2dd4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2dd8:	dc 01       	movw	r26, r24
    2dda:	cb 01       	movw	r24, r22
    2ddc:	9c 8b       	std	Y+20, r25	; 0x14
    2dde:	8b 8b       	std	Y+19, r24	; 0x13
    2de0:	8b 89       	ldd	r24, Y+19	; 0x13
    2de2:	9c 89       	ldd	r25, Y+20	; 0x14
    2de4:	98 8b       	std	Y+16, r25	; 0x10
    2de6:	8f 87       	std	Y+15, r24	; 0x0f
    2de8:	8f 85       	ldd	r24, Y+15	; 0x0f
    2dea:	98 89       	ldd	r25, Y+16	; 0x10
    2dec:	01 97       	sbiw	r24, 0x01	; 1
    2dee:	f1 f7       	brne	.-4      	; 0x2dec <main+0x1bba>
    2df0:	98 8b       	std	Y+16, r25	; 0x10
    2df2:	8f 87       	std	Y+15, r24	; 0x0f

					while(Counter!=0)
					{

						Counter--;
						for(int k=0;k<30;k++)
    2df4:	de 01       	movw	r26, r28
    2df6:	af 51       	subi	r26, 0x1F	; 31
    2df8:	bf 4f       	sbci	r27, 0xFF	; 255
    2dfa:	fe 01       	movw	r30, r28
    2dfc:	ef 51       	subi	r30, 0x1F	; 31
    2dfe:	ff 4f       	sbci	r31, 0xFF	; 255
    2e00:	80 81       	ld	r24, Z
    2e02:	91 81       	ldd	r25, Z+1	; 0x01
    2e04:	01 96       	adiw	r24, 0x01	; 1
    2e06:	11 96       	adiw	r26, 0x01	; 1
    2e08:	9c 93       	st	X, r25
    2e0a:	8e 93       	st	-X, r24
    2e0c:	fe 01       	movw	r30, r28
    2e0e:	ef 51       	subi	r30, 0x1F	; 31
    2e10:	ff 4f       	sbci	r31, 0xFF	; 255
    2e12:	80 81       	ld	r24, Z
    2e14:	91 81       	ldd	r25, Z+1	; 0x01
    2e16:	8e 31       	cpi	r24, 0x1E	; 30
    2e18:	91 05       	cpc	r25, r1
    2e1a:	0c f4       	brge	.+2      	; 0x2e1e <main+0x1bec>
    2e1c:	db ce       	rjmp	.-586    	; 0x2bd4 <main+0x19a2>
						_delay_ms(10);
					}
					}
					_delay_ms(100);

					while(Counter!=0)
    2e1e:	fe 01       	movw	r30, r28
    2e20:	e0 51       	subi	r30, 0x10	; 16
    2e22:	ff 4f       	sbci	r31, 0xFF	; 255
    2e24:	80 81       	ld	r24, Z
    2e26:	88 23       	and	r24, r24
    2e28:	09 f0       	breq	.+2      	; 0x2e2c <main+0x1bfa>
    2e2a:	c5 ce       	rjmp	.-630    	; 0x2bb6 <main+0x1984>
				_delay_ms(100);
			}
			if((GetBit(PINA_REG,PIN4)||(GetBit(PINA_REG,PIN3)&&GetBit(PINA_REG,PIN4)))&&GetBit(PINA_REG,PIN5))
			{
				Counter=-1;
					for(int i=0;i<2;i++)
    2e2c:	de 01       	movw	r26, r28
    2e2e:	ab 51       	subi	r26, 0x1B	; 27
    2e30:	bf 4f       	sbci	r27, 0xFF	; 255
    2e32:	fe 01       	movw	r30, r28
    2e34:	eb 51       	subi	r30, 0x1B	; 27
    2e36:	ff 4f       	sbci	r31, 0xFF	; 255
    2e38:	80 81       	ld	r24, Z
    2e3a:	91 81       	ldd	r25, Z+1	; 0x01
    2e3c:	01 96       	adiw	r24, 0x01	; 1
    2e3e:	11 96       	adiw	r26, 0x01	; 1
    2e40:	9c 93       	st	X, r25
    2e42:	8e 93       	st	-X, r24
    2e44:	fe 01       	movw	r30, r28
    2e46:	eb 51       	subi	r30, 0x1B	; 27
    2e48:	ff 4f       	sbci	r31, 0xFF	; 255
    2e4a:	80 81       	ld	r24, Z
    2e4c:	91 81       	ldd	r25, Z+1	; 0x01
    2e4e:	82 30       	cpi	r24, 0x02	; 2
    2e50:	91 05       	cpc	r25, r1
    2e52:	0c f4       	brge	.+2      	; 0x2e56 <main+0x1c24>
    2e54:	36 ce       	rjmp	.-916    	; 0x2ac2 <main+0x1890>
    2e56:	80 e0       	ldi	r24, 0x00	; 0
    2e58:	90 e0       	ldi	r25, 0x00	; 0
    2e5a:	a8 ec       	ldi	r26, 0xC8	; 200
    2e5c:	b2 e4       	ldi	r27, 0x42	; 66
    2e5e:	8b 87       	std	Y+11, r24	; 0x0b
    2e60:	9c 87       	std	Y+12, r25	; 0x0c
    2e62:	ad 87       	std	Y+13, r26	; 0x0d
    2e64:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2e66:	6b 85       	ldd	r22, Y+11	; 0x0b
    2e68:	7c 85       	ldd	r23, Y+12	; 0x0c
    2e6a:	8d 85       	ldd	r24, Y+13	; 0x0d
    2e6c:	9e 85       	ldd	r25, Y+14	; 0x0e
    2e6e:	20 e0       	ldi	r18, 0x00	; 0
    2e70:	30 e0       	ldi	r19, 0x00	; 0
    2e72:	4a ef       	ldi	r20, 0xFA	; 250
    2e74:	54 e4       	ldi	r21, 0x44	; 68
    2e76:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e7a:	dc 01       	movw	r26, r24
    2e7c:	cb 01       	movw	r24, r22
    2e7e:	8f 83       	std	Y+7, r24	; 0x07
    2e80:	98 87       	std	Y+8, r25	; 0x08
    2e82:	a9 87       	std	Y+9, r26	; 0x09
    2e84:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2e86:	6f 81       	ldd	r22, Y+7	; 0x07
    2e88:	78 85       	ldd	r23, Y+8	; 0x08
    2e8a:	89 85       	ldd	r24, Y+9	; 0x09
    2e8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    2e8e:	20 e0       	ldi	r18, 0x00	; 0
    2e90:	30 e0       	ldi	r19, 0x00	; 0
    2e92:	40 e8       	ldi	r20, 0x80	; 128
    2e94:	5f e3       	ldi	r21, 0x3F	; 63
    2e96:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e9a:	88 23       	and	r24, r24
    2e9c:	2c f4       	brge	.+10     	; 0x2ea8 <main+0x1c76>
		__ticks = 1;
    2e9e:	81 e0       	ldi	r24, 0x01	; 1
    2ea0:	90 e0       	ldi	r25, 0x00	; 0
    2ea2:	9e 83       	std	Y+6, r25	; 0x06
    2ea4:	8d 83       	std	Y+5, r24	; 0x05
    2ea6:	40 c0       	rjmp	.+128    	; 0x2f28 <main+0x1cf6>
	else if (__tmp > 65535)
    2ea8:	6f 81       	ldd	r22, Y+7	; 0x07
    2eaa:	78 85       	ldd	r23, Y+8	; 0x08
    2eac:	89 85       	ldd	r24, Y+9	; 0x09
    2eae:	9a 85       	ldd	r25, Y+10	; 0x0a
    2eb0:	20 e0       	ldi	r18, 0x00	; 0
    2eb2:	3f ef       	ldi	r19, 0xFF	; 255
    2eb4:	4f e7       	ldi	r20, 0x7F	; 127
    2eb6:	57 e4       	ldi	r21, 0x47	; 71
    2eb8:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ebc:	18 16       	cp	r1, r24
    2ebe:	54 f5       	brge	.+84     	; 0x2f14 <main+0x1ce2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2ec0:	6b 85       	ldd	r22, Y+11	; 0x0b
    2ec2:	7c 85       	ldd	r23, Y+12	; 0x0c
    2ec4:	8d 85       	ldd	r24, Y+13	; 0x0d
    2ec6:	9e 85       	ldd	r25, Y+14	; 0x0e
    2ec8:	20 e0       	ldi	r18, 0x00	; 0
    2eca:	30 e0       	ldi	r19, 0x00	; 0
    2ecc:	40 e2       	ldi	r20, 0x20	; 32
    2ece:	51 e4       	ldi	r21, 0x41	; 65
    2ed0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ed4:	dc 01       	movw	r26, r24
    2ed6:	cb 01       	movw	r24, r22
    2ed8:	bc 01       	movw	r22, r24
    2eda:	cd 01       	movw	r24, r26
    2edc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ee0:	dc 01       	movw	r26, r24
    2ee2:	cb 01       	movw	r24, r22
    2ee4:	9e 83       	std	Y+6, r25	; 0x06
    2ee6:	8d 83       	std	Y+5, r24	; 0x05
    2ee8:	0f c0       	rjmp	.+30     	; 0x2f08 <main+0x1cd6>
    2eea:	88 ec       	ldi	r24, 0xC8	; 200
    2eec:	90 e0       	ldi	r25, 0x00	; 0
    2eee:	9c 83       	std	Y+4, r25	; 0x04
    2ef0:	8b 83       	std	Y+3, r24	; 0x03
    2ef2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ef4:	9c 81       	ldd	r25, Y+4	; 0x04
    2ef6:	01 97       	sbiw	r24, 0x01	; 1
    2ef8:	f1 f7       	brne	.-4      	; 0x2ef6 <main+0x1cc4>
    2efa:	9c 83       	std	Y+4, r25	; 0x04
    2efc:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2efe:	8d 81       	ldd	r24, Y+5	; 0x05
    2f00:	9e 81       	ldd	r25, Y+6	; 0x06
    2f02:	01 97       	sbiw	r24, 0x01	; 1
    2f04:	9e 83       	std	Y+6, r25	; 0x06
    2f06:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f08:	8d 81       	ldd	r24, Y+5	; 0x05
    2f0a:	9e 81       	ldd	r25, Y+6	; 0x06
    2f0c:	00 97       	sbiw	r24, 0x00	; 0
    2f0e:	69 f7       	brne	.-38     	; 0x2eea <main+0x1cb8>
    2f10:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <main+0x4d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f14:	6f 81       	ldd	r22, Y+7	; 0x07
    2f16:	78 85       	ldd	r23, Y+8	; 0x08
    2f18:	89 85       	ldd	r24, Y+9	; 0x09
    2f1a:	9a 85       	ldd	r25, Y+10	; 0x0a
    2f1c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f20:	dc 01       	movw	r26, r24
    2f22:	cb 01       	movw	r24, r22
    2f24:	9e 83       	std	Y+6, r25	; 0x06
    2f26:	8d 83       	std	Y+5, r24	; 0x05
    2f28:	8d 81       	ldd	r24, Y+5	; 0x05
    2f2a:	9e 81       	ldd	r25, Y+6	; 0x06
    2f2c:	9a 83       	std	Y+2, r25	; 0x02
    2f2e:	89 83       	std	Y+1, r24	; 0x01
    2f30:	89 81       	ldd	r24, Y+1	; 0x01
    2f32:	9a 81       	ldd	r25, Y+2	; 0x02
    2f34:	01 97       	sbiw	r24, 0x01	; 1
    2f36:	f1 f7       	brne	.-4      	; 0x2f34 <main+0x1d02>
    2f38:	9a 83       	std	Y+2, r25	; 0x02
    2f3a:	89 83       	std	Y+1, r24	; 0x01
    2f3c:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <main+0x4d0>

00002f40 <PORT_VoidInit>:
#include "PORT_Interface.h"
#include "PORT_REG.h"
#include "PORT_private.h"

void PORT_VoidInit()
{
    2f40:	df 93       	push	r29
    2f42:	cf 93       	push	r28
    2f44:	cd b7       	in	r28, 0x3d	; 61
    2f46:	de b7       	in	r29, 0x3e	; 62
DDRA_REG=PORTA_DIR;
    2f48:	ea e3       	ldi	r30, 0x3A	; 58
    2f4a:	f0 e0       	ldi	r31, 0x00	; 0
    2f4c:	10 82       	st	Z, r1
DDRB_REG=PORTB_DIR;
    2f4e:	e7 e3       	ldi	r30, 0x37	; 55
    2f50:	f0 e0       	ldi	r31, 0x00	; 0
    2f52:	8f ef       	ldi	r24, 0xFF	; 255
    2f54:	80 83       	st	Z, r24
DDRC_REG=PORTC_DIR;
    2f56:	e4 e3       	ldi	r30, 0x34	; 52
    2f58:	f0 e0       	ldi	r31, 0x00	; 0
    2f5a:	8f ef       	ldi	r24, 0xFF	; 255
    2f5c:	80 83       	st	Z, r24
DDRD_REG=PORTD_DIR;
    2f5e:	e1 e3       	ldi	r30, 0x31	; 49
    2f60:	f0 e0       	ldi	r31, 0x00	; 0
    2f62:	8f ef       	ldi	r24, 0xFF	; 255
    2f64:	80 83       	st	Z, r24

PORTA_REG_INITIAL=PORTA_INITIAL_VALUE;
    2f66:	eb e3       	ldi	r30, 0x3B	; 59
    2f68:	f0 e0       	ldi	r31, 0x00	; 0
    2f6a:	10 82       	st	Z, r1
PORTB_REG_INITIAL=PORTB_INITIAL_VALUE;
    2f6c:	e8 e3       	ldi	r30, 0x38	; 56
    2f6e:	f0 e0       	ldi	r31, 0x00	; 0
    2f70:	10 82       	st	Z, r1
PORTC_REG_INITIAL=PORTC_INITIAL_VALUE;
    2f72:	e5 e3       	ldi	r30, 0x35	; 53
    2f74:	f0 e0       	ldi	r31, 0x00	; 0
    2f76:	10 82       	st	Z, r1
PORTD_REG_INITIAL=PORTD_INITIAL_VALUE;
    2f78:	e2 e3       	ldi	r30, 0x32	; 50
    2f7a:	f0 e0       	ldi	r31, 0x00	; 0
    2f7c:	10 82       	st	Z, r1

}
    2f7e:	cf 91       	pop	r28
    2f80:	df 91       	pop	r29
    2f82:	08 95       	ret

00002f84 <__prologue_saves__>:
    2f84:	2f 92       	push	r2
    2f86:	3f 92       	push	r3
    2f88:	4f 92       	push	r4
    2f8a:	5f 92       	push	r5
    2f8c:	6f 92       	push	r6
    2f8e:	7f 92       	push	r7
    2f90:	8f 92       	push	r8
    2f92:	9f 92       	push	r9
    2f94:	af 92       	push	r10
    2f96:	bf 92       	push	r11
    2f98:	cf 92       	push	r12
    2f9a:	df 92       	push	r13
    2f9c:	ef 92       	push	r14
    2f9e:	ff 92       	push	r15
    2fa0:	0f 93       	push	r16
    2fa2:	1f 93       	push	r17
    2fa4:	cf 93       	push	r28
    2fa6:	df 93       	push	r29
    2fa8:	cd b7       	in	r28, 0x3d	; 61
    2faa:	de b7       	in	r29, 0x3e	; 62
    2fac:	ca 1b       	sub	r28, r26
    2fae:	db 0b       	sbc	r29, r27
    2fb0:	0f b6       	in	r0, 0x3f	; 63
    2fb2:	f8 94       	cli
    2fb4:	de bf       	out	0x3e, r29	; 62
    2fb6:	0f be       	out	0x3f, r0	; 63
    2fb8:	cd bf       	out	0x3d, r28	; 61
    2fba:	09 94       	ijmp

00002fbc <__epilogue_restores__>:
    2fbc:	2a 88       	ldd	r2, Y+18	; 0x12
    2fbe:	39 88       	ldd	r3, Y+17	; 0x11
    2fc0:	48 88       	ldd	r4, Y+16	; 0x10
    2fc2:	5f 84       	ldd	r5, Y+15	; 0x0f
    2fc4:	6e 84       	ldd	r6, Y+14	; 0x0e
    2fc6:	7d 84       	ldd	r7, Y+13	; 0x0d
    2fc8:	8c 84       	ldd	r8, Y+12	; 0x0c
    2fca:	9b 84       	ldd	r9, Y+11	; 0x0b
    2fcc:	aa 84       	ldd	r10, Y+10	; 0x0a
    2fce:	b9 84       	ldd	r11, Y+9	; 0x09
    2fd0:	c8 84       	ldd	r12, Y+8	; 0x08
    2fd2:	df 80       	ldd	r13, Y+7	; 0x07
    2fd4:	ee 80       	ldd	r14, Y+6	; 0x06
    2fd6:	fd 80       	ldd	r15, Y+5	; 0x05
    2fd8:	0c 81       	ldd	r16, Y+4	; 0x04
    2fda:	1b 81       	ldd	r17, Y+3	; 0x03
    2fdc:	aa 81       	ldd	r26, Y+2	; 0x02
    2fde:	b9 81       	ldd	r27, Y+1	; 0x01
    2fe0:	ce 0f       	add	r28, r30
    2fe2:	d1 1d       	adc	r29, r1
    2fe4:	0f b6       	in	r0, 0x3f	; 63
    2fe6:	f8 94       	cli
    2fe8:	de bf       	out	0x3e, r29	; 62
    2fea:	0f be       	out	0x3f, r0	; 63
    2fec:	cd bf       	out	0x3d, r28	; 61
    2fee:	ed 01       	movw	r28, r26
    2ff0:	08 95       	ret

00002ff2 <_exit>:
    2ff2:	f8 94       	cli

00002ff4 <__stop_program>:
    2ff4:	ff cf       	rjmp	.-2      	; 0x2ff4 <__stop_program>
